{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0","program":"/Users/lizhiyong/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"udp\"","-C","metadata=3203cb30d76be599","-C","extra-filename=-3203cb30d76be599","--out-dir","/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps","-L","dependency=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps","--extern","bytes=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libbytes-a0fbb1a35d026668.rmeta","--extern","futures_core=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libfutures_core-cf3609c860d022a4.rmeta","--extern","futures_sink=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libfutures_sink-ab6c4dd2f4056b0f.rmeta","--extern","log=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/liblog-05403e2b623f5abd.rmeta","--extern","pin_project_lite=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libpin_project_lite-f9fa587e9bc13361.rmeta","--extern","tokio=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtokio-ddfa9aaa690b130e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/lizhiyong/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtokio_util-3203cb30d76be599.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[1421015842172634069,7632511442603833043]},"crate_root":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src","external_crates":[{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","num":16,"id":{"name":"bytes","disambiguator":[13352151229109432172,4004088181155608564]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":17,"id":{"name":"tokio","disambiguator":[3655854121847460059,6981143134110927724]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[2350234745080963094,6986056061762265917]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":19,"id":{"name":"futures_core","disambiguator":[6533007024513587931,3945087196898676365]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":20,"id":{"name":"mio","disambiguator":[10237053715060991782,4364443715089003353]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":21,"id":{"name":"net2","disambiguator":[10914819445474922464,17798012213058698903]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":22,"id":{"name":"libc","disambiguator":[16938110951504567708,16095957180410839338]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":23,"id":{"name":"cfg_if","disambiguator":[13347268434212277074,12294355231220403985]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":24,"id":{"name":"iovec","disambiguator":[6527597662397579517,12396101688793930673]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":25,"id":{"name":"slab","disambiguator":[10003592789325744442,14082370257351112682]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","num":26,"id":{"name":"log","disambiguator":[12973046251402806001,8734054613415472242]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":27,"id":{"name":"cfg_if","disambiguator":[4164838008399425541,17156835214731903611]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":28,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":29,"id":{"name":"mio_uds","disambiguator":[7829334559616477059,1214004950523085808]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":30,"id":{"name":"fnv","disambiguator":[96462123840539675,10172455103510269032]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":31,"id":{"name":"memchr","disambiguator":[6669519948175115078,18442787318468754460]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":32,"id":{"name":"signal_hook_registry","disambiguator":[8138036187057049722,15033096631102936176]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":33,"id":{"name":"futures_sink","disambiguator":[8816811119957223081,6227302994713401210]}}],"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278688,"byte_end":7278698,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278737,"byte_end":7278744,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278783,"byte_end":7278790,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278828,"byte_end":7278834,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278836,"byte_end":7278847,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278895,"byte_end":7278905,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278954,"byte_end":7278965,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7279027,"byte_end":7279047,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7279049,"byte_end":7279074,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7279123,"byte_end":7279133,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7279135,"byte_end":7279150,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":8354804,"byte_end":8354813,"line_start":4,"line_end":4,"column_start":22,"column_end":31},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":563}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":563}],"decl_id":null,"docs":" Utilities for working with Tokio.\n","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":60,"byte_end":166,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":167,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":368,"byte_end":405,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":570,"byte_end":595,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278086,"byte_end":7278133,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278134,"byte_end":7278137,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278138,"byte_end":7278206,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278207,"byte_end":7278282,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278283,"byte_end":7278331,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278332,"byte_end":7278335,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncRead.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278336,"byte_end":7278408,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`AsyncWrite`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncWrite.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278409,"byte_end":7278483,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ [`Sink`]: https://docs.rs/futures-sink/*/futures_sink/trait.Sink.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278484,"byte_end":7278557,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ [`Stream`]: https://docs.rs/futures-core/*/futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278558,"byte_end":7278642,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279433,"byte_end":7279443,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279279,"byte_end":7279344,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279545,"byte_end":7279548,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279472,"byte_end":7279533,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280822,"byte_end":7280829,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280315,"byte_end":7280350,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280351,"byte_end":7280354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280355,"byte_end":7280422,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280423,"byte_end":7280500,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280501,"byte_end":7280573,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280574,"byte_end":7280598,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280599,"byte_end":7280602,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280603,"byte_end":7280671,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280672,"byte_end":7280749,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280750,"byte_end":7280811,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280877,"byte_end":7280881,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280836,"byte_end":7280867,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281588,"byte_end":7281593,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280888,"byte_end":7280940,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280945,"byte_end":7280948,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7280953,"byte_end":7281022,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281027,"byte_end":7281097,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281102,"byte_end":7281148,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281153,"byte_end":7281156,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281161,"byte_end":7281237,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281242,"byte_end":7281315,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281320,"byte_end":7281395,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281400,"byte_end":7281440,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281445,"byte_end":7281448,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281453,"byte_end":7281527,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281532,"byte_end":7281578,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284426,"byte_end":7284432,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281617,"byte_end":7281682,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281687,"byte_end":7281690,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281695,"byte_end":7281767,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281772,"byte_end":7281845,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281850,"byte_end":7281923,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281928,"byte_end":7281971,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281976,"byte_end":7281979,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7281984,"byte_end":7282057,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282062,"byte_end":7282125,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282130,"byte_end":7282205,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282210,"byte_end":7282285,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282290,"byte_end":7282313,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282318,"byte_end":7282321,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282326,"byte_end":7282398,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282403,"byte_end":7282475,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282480,"byte_end":7282550,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282555,"byte_end":7282558,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282563,"byte_end":7282631,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282636,"byte_end":7282707,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282712,"byte_end":7282792,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282797,"byte_end":7282809,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282814,"byte_end":7282817,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282822,"byte_end":7282892,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282897,"byte_end":7282970,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7282975,"byte_end":7283012,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283017,"byte_end":7283020,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283025,"byte_end":7283048,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283053,"byte_end":7283056,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283061,"byte_end":7283135,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283140,"byte_end":7283214,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283219,"byte_end":7283272,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283277,"byte_end":7283280,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283285,"byte_end":7283356,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283361,"byte_end":7283431,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283436,"byte_end":7283452,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283457,"byte_end":7283460,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283465,"byte_end":7283478,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283483,"byte_end":7283501,"line_start":75,"line_end":75,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283506,"byte_end":7283511,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283516,"byte_end":7283542,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283547,"byte_end":7283584,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283589,"byte_end":7283594,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283599,"byte_end":7283620,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283625,"byte_end":7283630,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283635,"byte_end":7283665,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283670,"byte_end":7283684,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283689,"byte_end":7283720,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283725,"byte_end":7283758,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283763,"byte_end":7283766,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283771,"byte_end":7283864,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283869,"byte_end":7283887,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283892,"byte_end":7283895,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283900,"byte_end":7283972,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7283977,"byte_end":7284037,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284042,"byte_end":7284094,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284099,"byte_end":7284161,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284166,"byte_end":7284233,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284238,"byte_end":7284241,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284246,"byte_end":7284274,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284279,"byte_end":7284288,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284293,"byte_end":7284298,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284303,"byte_end":7284310,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284315,"byte_end":7284318,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284323,"byte_end":7284392,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284397,"byte_end":7284418,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285291,"byte_end":7285301,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284513,"byte_end":7284585,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284590,"byte_end":7284639,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284644,"byte_end":7284647,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284652,"byte_end":7284720,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284725,"byte_end":7284792,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284797,"byte_end":7284865,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284870,"byte_end":7284918,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284923,"byte_end":7284926,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7284931,"byte_end":7284999,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285004,"byte_end":7285079,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285084,"byte_end":7285159,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285164,"byte_end":7285236,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285241,"byte_end":7285283,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286776,"byte_end":7286782,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Encoder + Sized","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285719,"byte_end":7285795,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285800,"byte_end":7285876,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285881,"byte_end":7285884,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285889,"byte_end":7285964,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7285969,"byte_end":7286039,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286044,"byte_end":7286115,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286120,"byte_end":7286192,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286197,"byte_end":7286255,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286260,"byte_end":7286263,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286268,"byte_end":7286337,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286342,"byte_end":7286417,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286422,"byte_end":7286498,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286503,"byte_end":7286525,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286530,"byte_end":7286533,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286538,"byte_end":7286611,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286616,"byte_end":7286687,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":7286692,"byte_end":7286768,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287073,"byte_end":7287080,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7286971,"byte_end":7287043,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287044,"byte_end":7287062,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287144,"byte_end":7287148,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287087,"byte_end":7287134,"line_start":7,"line_end":7,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287346,"byte_end":7287351,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287155,"byte_end":7287187,"line_start":10,"line_end":10,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287192,"byte_end":7287195,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287200,"byte_end":7287275,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287280,"byte_end":7287336,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287636,"byte_end":7287642,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287375,"byte_end":7287420,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287425,"byte_end":7287428,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287433,"byte_end":7287507,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287512,"byte_end":7287585,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":7287590,"byte_end":7287628,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7288547,"byte_end":7288553,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":829}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7288989,"byte_end":7288991,"line_start":40,"line_end":40,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289002,"byte_end":7289007,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290542,"byte_end":7290545,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289481,"byte_end":7289557,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289562,"byte_end":7289638,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289643,"byte_end":7289646,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289651,"byte_end":7289726,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289731,"byte_end":7289801,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289806,"byte_end":7289877,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289882,"byte_end":7289954,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289959,"byte_end":7290017,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290022,"byte_end":7290025,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290030,"byte_end":7290099,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290104,"byte_end":7290179,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290184,"byte_end":7290260,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290265,"byte_end":7290287,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290292,"byte_end":7290295,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290300,"byte_end":7290373,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290378,"byte_end":7290449,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290454,"byte_end":7290530,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291958,"byte_end":7291968,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290725,"byte_end":7290801,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290806,"byte_end":7290882,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290887,"byte_end":7290890,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290895,"byte_end":7290970,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290975,"byte_end":7291045,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291050,"byte_end":7291121,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291126,"byte_end":7291198,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291203,"byte_end":7291261,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291266,"byte_end":7291269,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291274,"byte_end":7291343,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291348,"byte_end":7291423,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291428,"byte_end":7291504,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291509,"byte_end":7291531,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291536,"byte_end":7291539,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291544,"byte_end":7291623,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291628,"byte_end":7291703,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291708,"byte_end":7291711,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291716,"byte_end":7291789,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291794,"byte_end":7291865,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7291870,"byte_end":7291946,"line_start":108,"line_end":108,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292656,"byte_end":7292663,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292374,"byte_end":7292437,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292442,"byte_end":7292454,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292459,"byte_end":7292462,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292467,"byte_end":7292542,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292547,"byte_end":7292617,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292622,"byte_end":7292644,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293023,"byte_end":7293030,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292733,"byte_end":7292804,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292809,"byte_end":7292821,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292826,"byte_end":7292829,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292834,"byte_end":7292909,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292914,"byte_end":7292984,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7292989,"byte_end":7293011,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293362,"byte_end":7293367,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293112,"byte_end":7293170,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293175,"byte_end":7293187,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293192,"byte_end":7293195,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293200,"byte_end":7293274,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293279,"byte_end":7293350,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293698,"byte_end":7293707,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293440,"byte_end":7293506,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293511,"byte_end":7293523,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293528,"byte_end":7293531,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293536,"byte_end":7293610,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293615,"byte_end":7293686,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293847,"byte_end":7293858,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293792,"byte_end":7293835,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294184,"byte_end":7294194,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293920,"byte_end":7293982,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293987,"byte_end":7293990,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7293995,"byte_end":7294070,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294075,"byte_end":7294145,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294150,"byte_end":7294172,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294588,"byte_end":7294598,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294267,"byte_end":7294340,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294345,"byte_end":7294386,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294391,"byte_end":7294394,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294399,"byte_end":7294474,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294479,"byte_end":7294549,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294554,"byte_end":7294576,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298949,"byte_end":7298960,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298717,"byte_end":7298788,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298789,"byte_end":7298859,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298860,"byte_end":7298920,"line_start":340,"line_end":340,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299046,"byte_end":7299048,"line_start":344,"line_end":344,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298973,"byte_end":7299037,"line_start":343,"line_end":343,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299080,"byte_end":7299085,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299058,"byte_end":7299071,"line_start":346,"line_end":346,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299150,"byte_end":7299158,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299095,"byte_end":7299141,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299245,"byte_end":7299254,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299175,"byte_end":7299236,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299487,"byte_end":7299490,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299435,"byte_end":7299475,"line_start":361,"line_end":361,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300089,"byte_end":7300099,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300557,"byte_end":7300560,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300489,"byte_end":7300545,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301080,"byte_end":7301087,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300793,"byte_end":7300856,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300861,"byte_end":7300878,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300883,"byte_end":7300886,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300891,"byte_end":7300966,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300971,"byte_end":7301041,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301046,"byte_end":7301068,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301438,"byte_end":7301445,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301143,"byte_end":7301214,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301219,"byte_end":7301236,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301241,"byte_end":7301244,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301249,"byte_end":7301324,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301329,"byte_end":7301399,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301404,"byte_end":7301426,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301782,"byte_end":7301792,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301513,"byte_end":7301580,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301585,"byte_end":7301588,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301593,"byte_end":7301668,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301673,"byte_end":7301743,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301748,"byte_end":7301770,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301907,"byte_end":7301914,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301845,"byte_end":7301895,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302043,"byte_end":7302054,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7301973,"byte_end":7302031,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302180,"byte_end":7302191,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302125,"byte_end":7302168,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308034,"byte_end":7308045,"line_start":20,"line_end":20,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":657}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308485,"byte_end":7308488,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308416,"byte_end":7308473,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309013,"byte_end":7309020,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308725,"byte_end":7308788,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308793,"byte_end":7308811,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308816,"byte_end":7308819,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308824,"byte_end":7308899,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308904,"byte_end":7308974,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308979,"byte_end":7309001,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309372,"byte_end":7309379,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309076,"byte_end":7309147,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309152,"byte_end":7309170,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309175,"byte_end":7309178,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309183,"byte_end":7309258,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309263,"byte_end":7309333,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309338,"byte_end":7309360,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309717,"byte_end":7309727,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309447,"byte_end":7309515,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309520,"byte_end":7309523,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309528,"byte_end":7309603,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309608,"byte_end":7309678,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309683,"byte_end":7309705,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309842,"byte_end":7309849,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309780,"byte_end":7309830,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309978,"byte_end":7309989,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7309908,"byte_end":7309966,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":493},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":364},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":519},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316429,"byte_end":7316481,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316482,"byte_end":7316485,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316486,"byte_end":7316556,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316557,"byte_end":7316615,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316616,"byte_end":7316688,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316689,"byte_end":7316759,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316760,"byte_end":7316827,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316828,"byte_end":7316831,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316832,"byte_end":7316853,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316854,"byte_end":7316857,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316858,"byte_end":7316933,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7316934,"byte_end":7317005,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317006,"byte_end":7317077,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317078,"byte_end":7317148,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317149,"byte_end":7317189,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317190,"byte_end":7317193,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317194,"byte_end":7317201,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317202,"byte_end":7317245,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317246,"byte_end":7317304,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317305,"byte_end":7317308,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317309,"byte_end":7317364,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317365,"byte_end":7317407,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317408,"byte_end":7317413,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317414,"byte_end":7317466,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317467,"byte_end":7317472,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317473,"byte_end":7317495,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317496,"byte_end":7317503,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317504,"byte_end":7317507,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317508,"byte_end":7317580,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317581,"byte_end":7317652,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317653,"byte_end":7317672,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317673,"byte_end":7317676,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317677,"byte_end":7317688,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317689,"byte_end":7317738,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317739,"byte_end":7317788,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317789,"byte_end":7317838,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317839,"byte_end":7317846,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317847,"byte_end":7317850,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317851,"byte_end":7317889,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317890,"byte_end":7317893,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317894,"byte_end":7317901,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317902,"byte_end":7317928,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317929,"byte_end":7317987,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317988,"byte_end":7317991,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7317992,"byte_end":7318017,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318018,"byte_end":7318039,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318040,"byte_end":7318043,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318044,"byte_end":7318120,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318121,"byte_end":7318130,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318131,"byte_end":7318173,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318174,"byte_end":7318179,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318180,"byte_end":7318253,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318254,"byte_end":7318301,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318302,"byte_end":7318305,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318306,"byte_end":7318343,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318344,"byte_end":7318358,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318359,"byte_end":7318364,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318365,"byte_end":7318372,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318373,"byte_end":7318376,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318377,"byte_end":7318419,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318420,"byte_end":7318423,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318424,"byte_end":7318435,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318436,"byte_end":7318475,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318476,"byte_end":7318515,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318516,"byte_end":7318555,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318556,"byte_end":7318563,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318564,"byte_end":7318567,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318568,"byte_end":7318582,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318583,"byte_end":7318586,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318587,"byte_end":7318662,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318663,"byte_end":7318736,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318737,"byte_end":7318803,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318804,"byte_end":7318873,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318874,"byte_end":7318939,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318940,"byte_end":7318943,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318944,"byte_end":7318960,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318961,"byte_end":7318964,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7318965,"byte_end":7319041,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319042,"byte_end":7319083,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319084,"byte_end":7319087,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319088,"byte_end":7319095,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319096,"byte_end":7319127,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319128,"byte_end":7319178,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319179,"byte_end":7319220,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319221,"byte_end":7319256,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319257,"byte_end":7319305,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319306,"byte_end":7319337,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319338,"byte_end":7319386,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319387,"byte_end":7319436,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319437,"byte_end":7319459,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319460,"byte_end":7319467,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319468,"byte_end":7319490,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319491,"byte_end":7319498,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319499,"byte_end":7319502,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319503,"byte_end":7319551,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319552,"byte_end":7319555,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319556,"byte_end":7319567,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319568,"byte_end":7319620,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319621,"byte_end":7319686,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319687,"byte_end":7319752,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319753,"byte_end":7319818,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319819,"byte_end":7319826,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319827,"byte_end":7319830,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319831,"byte_end":7319907,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319908,"byte_end":7319982,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7319983,"byte_end":7320055,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320056,"byte_end":7320132,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320133,"byte_end":7320175,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320176,"byte_end":7320179,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320180,"byte_end":7320196,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320197,"byte_end":7320200,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320201,"byte_end":7320276,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320277,"byte_end":7320318,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320319,"byte_end":7320322,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320323,"byte_end":7320330,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320331,"byte_end":7320362,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320363,"byte_end":7320413,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320414,"byte_end":7320455,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320456,"byte_end":7320491,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320492,"byte_end":7320540,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320541,"byte_end":7320572,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320573,"byte_end":7320621,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320622,"byte_end":7320681,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320682,"byte_end":7320704,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320705,"byte_end":7320712,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320713,"byte_end":7320735,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320736,"byte_end":7320743,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320744,"byte_end":7320747,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320748,"byte_end":7320796,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320797,"byte_end":7320800,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320801,"byte_end":7320812,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320813,"byte_end":7320862,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320863,"byte_end":7320917,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320918,"byte_end":7320972,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7320973,"byte_end":7321027,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321028,"byte_end":7321035,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321036,"byte_end":7321039,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321040,"byte_end":7321113,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321114,"byte_end":7321181,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321182,"byte_end":7321185,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321186,"byte_end":7321202,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321203,"byte_end":7321206,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321207,"byte_end":7321283,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321284,"byte_end":7321356,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321357,"byte_end":7321396,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321397,"byte_end":7321400,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321401,"byte_end":7321408,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321409,"byte_end":7321440,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321441,"byte_end":7321491,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321492,"byte_end":7321533,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321534,"byte_end":7321569,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321570,"byte_end":7321618,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321619,"byte_end":7321650,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321651,"byte_end":7321698,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321699,"byte_end":7321719,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321720,"byte_end":7321742,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321743,"byte_end":7321750,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321751,"byte_end":7321773,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321774,"byte_end":7321781,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321782,"byte_end":7321785,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321786,"byte_end":7321834,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321835,"byte_end":7321838,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321839,"byte_end":7321850,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321851,"byte_end":7321903,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321904,"byte_end":7321969,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7321970,"byte_end":7322035,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322036,"byte_end":7322101,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322102,"byte_end":7322109,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322110,"byte_end":7322113,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322114,"byte_end":7322186,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322187,"byte_end":7322262,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322263,"byte_end":7322335,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322336,"byte_end":7322412,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322413,"byte_end":7322486,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322487,"byte_end":7322490,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322491,"byte_end":7322507,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322508,"byte_end":7322511,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322512,"byte_end":7322586,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322587,"byte_end":7322654,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322655,"byte_end":7322658,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322659,"byte_end":7322666,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322667,"byte_end":7322698,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322699,"byte_end":7322749,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322750,"byte_end":7322791,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322792,"byte_end":7322827,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322828,"byte_end":7322876,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322877,"byte_end":7322908,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322909,"byte_end":7322957,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322958,"byte_end":7322978,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7322979,"byte_end":7323001,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323002,"byte_end":7323009,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323010,"byte_end":7323032,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323033,"byte_end":7323040,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323041,"byte_end":7323044,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323045,"byte_end":7323093,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323094,"byte_end":7323097,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323098,"byte_end":7323109,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323110,"byte_end":7323136,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323137,"byte_end":7323182,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323183,"byte_end":7323228,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323229,"byte_end":7323274,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323275,"byte_end":7323278,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323279,"byte_end":7323307,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323308,"byte_end":7323353,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323354,"byte_end":7323399,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323400,"byte_end":7323445,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323446,"byte_end":7323453,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323454,"byte_end":7323457,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323458,"byte_end":7323530,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323531,"byte_end":7323607,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323608,"byte_end":7323678,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323679,"byte_end":7323748,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323749,"byte_end":7323786,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323787,"byte_end":7323790,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323791,"byte_end":7323865,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323866,"byte_end":7323920,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323921,"byte_end":7323924,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323925,"byte_end":7323941,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323942,"byte_end":7323945,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7323946,"byte_end":7324019,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324020,"byte_end":7324096,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324097,"byte_end":7324171,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324172,"byte_end":7324185,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324186,"byte_end":7324189,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324190,"byte_end":7324197,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324198,"byte_end":7324229,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324230,"byte_end":7324280,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324281,"byte_end":7324322,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324323,"byte_end":7324358,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324359,"byte_end":7324408,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324409,"byte_end":7324440,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324441,"byte_end":7324489,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324490,"byte_end":7324534,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324535,"byte_end":7324557,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324558,"byte_end":7324565,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324566,"byte_end":7324588,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324589,"byte_end":7324596,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324597,"byte_end":7324600,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324601,"byte_end":7324649,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324650,"byte_end":7324653,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324654,"byte_end":7324665,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324666,"byte_end":7324692,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324693,"byte_end":7324743,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324744,"byte_end":7324794,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324795,"byte_end":7324845,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324846,"byte_end":7324849,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324850,"byte_end":7324870,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324871,"byte_end":7324901,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324902,"byte_end":7324932,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324933,"byte_end":7324963,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324964,"byte_end":7324971,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324972,"byte_end":7324975,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7324976,"byte_end":7325049,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325050,"byte_end":7325125,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325126,"byte_end":7325198,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325199,"byte_end":7325237,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325238,"byte_end":7325241,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325242,"byte_end":7325316,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325317,"byte_end":7325393,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325394,"byte_end":7325467,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325468,"byte_end":7325496,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325497,"byte_end":7325500,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325501,"byte_end":7325517,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325518,"byte_end":7325521,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325522,"byte_end":7325595,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325596,"byte_end":7325672,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325673,"byte_end":7325747,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325748,"byte_end":7325820,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325821,"byte_end":7325832,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325833,"byte_end":7325836,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325837,"byte_end":7325844,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325845,"byte_end":7325876,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325877,"byte_end":7325927,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325928,"byte_end":7325969,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7325970,"byte_end":7326005,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326006,"byte_end":7326055,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326056,"byte_end":7326087,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326088,"byte_end":7326153,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326154,"byte_end":7326174,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326175,"byte_end":7326197,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326198,"byte_end":7326205,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326206,"byte_end":7326213,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326214,"byte_end":7326217,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326218,"byte_end":7326266,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326267,"byte_end":7326270,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326271,"byte_end":7326282,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326283,"byte_end":7326309,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326310,"byte_end":7326360,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326361,"byte_end":7326411,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326412,"byte_end":7326462,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326463,"byte_end":7326466,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326467,"byte_end":7326487,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326488,"byte_end":7326518,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326519,"byte_end":7326549,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326550,"byte_end":7326580,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326581,"byte_end":7326588,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326589,"byte_end":7326592,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326593,"byte_end":7326666,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326667,"byte_end":7326741,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326742,"byte_end":7326816,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326817,"byte_end":7326890,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326891,"byte_end":7326967,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7326968,"byte_end":7327001,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327002,"byte_end":7327005,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327006,"byte_end":7327020,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327021,"byte_end":7327024,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327025,"byte_end":7327100,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327101,"byte_end":7327173,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327174,"byte_end":7327242,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327243,"byte_end":7327319,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327320,"byte_end":7327361,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327362,"byte_end":7327365,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327366,"byte_end":7327436,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327437,"byte_end":7327455,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327456,"byte_end":7327459,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327460,"byte_end":7327467,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327468,"byte_end":7327500,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327501,"byte_end":7327551,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327552,"byte_end":7327596,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327597,"byte_end":7327610,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327611,"byte_end":7327646,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327647,"byte_end":7327678,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327679,"byte_end":7327702,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327703,"byte_end":7327710,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327711,"byte_end":7327733,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327734,"byte_end":7327741,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327742,"byte_end":7327745,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327746,"byte_end":7327796,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327797,"byte_end":7327800,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327801,"byte_end":7327812,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327813,"byte_end":7327846,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327847,"byte_end":7327880,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327881,"byte_end":7327914,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327915,"byte_end":7327922,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327923,"byte_end":7327926,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7327927,"byte_end":7328007,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328008,"byte_end":7328050,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328051,"byte_end":7328095,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328096,"byte_end":7328141,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328142,"byte_end":7328189,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328190,"byte_end":7328228,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328229,"byte_end":7328299,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328861,"byte_end":7328868,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328543,"byte_end":7328598,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328599,"byte_end":7328602,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328603,"byte_end":7328678,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328679,"byte_end":7328759,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7328760,"byte_end":7328819,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329539,"byte_end":7329564,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329454,"byte_end":7329527,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329909,"byte_end":7329929,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329585,"byte_end":7329659,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329660,"byte_end":7329663,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329664,"byte_end":7329743,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329744,"byte_end":7329787,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329788,"byte_end":7329791,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329792,"byte_end":7329845,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329846,"byte_end":7329849,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7329850,"byte_end":7329880,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330273,"byte_end":7330276,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330182,"byte_end":7330261,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330503,"byte_end":7330510,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330400,"byte_end":7330475,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330480,"byte_end":7330491,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330732,"byte_end":7330748,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330560,"byte_end":7330601,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330606,"byte_end":7330609,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330614,"byte_end":7330687,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330692,"byte_end":7330720,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7331169,"byte_end":7331189,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330813,"byte_end":7330847,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330852,"byte_end":7330855,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330860,"byte_end":7330930,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330935,"byte_end":7331010,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7331015,"byte_end":7331087,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7331092,"byte_end":7331157,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336499,"byte_end":7336502,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7335957,"byte_end":7336032,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336037,"byte_end":7336048,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336053,"byte_end":7336056,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336061,"byte_end":7336075,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336080,"byte_end":7336083,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336088,"byte_end":7336095,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336100,"byte_end":7336131,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336136,"byte_end":7336184,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336189,"byte_end":7336192,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336197,"byte_end":7336238,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336243,"byte_end":7336278,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336283,"byte_end":7336314,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336319,"byte_end":7336350,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336355,"byte_end":7336384,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336389,"byte_end":7336409,"line_start":617,"line_end":617,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336414,"byte_end":7336436,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336441,"byte_end":7336448,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336453,"byte_end":7336475,"line_start":620,"line_end":620,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7336480,"byte_end":7336487,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337687,"byte_end":7337697,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337166,"byte_end":7337215,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337220,"byte_end":7337223,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337228,"byte_end":7337260,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337265,"byte_end":7337268,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337273,"byte_end":7337341,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337346,"byte_end":7337349,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337354,"byte_end":7337368,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337373,"byte_end":7337376,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337381,"byte_end":7337388,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337393,"byte_end":7337424,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337429,"byte_end":7337477,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337482,"byte_end":7337485,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337490,"byte_end":7337531,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337536,"byte_end":7337571,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337576,"byte_end":7337597,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337602,"byte_end":7337624,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337629,"byte_end":7337636,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337641,"byte_end":7337663,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337668,"byte_end":7337675,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338329,"byte_end":7338342,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337796,"byte_end":7337848,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337853,"byte_end":7337856,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337861,"byte_end":7337899,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337904,"byte_end":7337907,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337912,"byte_end":7337980,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337985,"byte_end":7337988,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7337993,"byte_end":7338007,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338012,"byte_end":7338015,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338020,"byte_end":7338027,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338032,"byte_end":7338063,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338068,"byte_end":7338116,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338121,"byte_end":7338124,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338129,"byte_end":7338170,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338175,"byte_end":7338210,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338215,"byte_end":7338239,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338244,"byte_end":7338266,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338271,"byte_end":7338278,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338283,"byte_end":7338305,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338310,"byte_end":7338317,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338975,"byte_end":7338988,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338442,"byte_end":7338494,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338499,"byte_end":7338502,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338507,"byte_end":7338545,"line_start":694,"line_end":694,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338550,"byte_end":7338553,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338558,"byte_end":7338626,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338631,"byte_end":7338634,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338639,"byte_end":7338653,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338658,"byte_end":7338661,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338666,"byte_end":7338673,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338678,"byte_end":7338709,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338714,"byte_end":7338762,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338767,"byte_end":7338770,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338775,"byte_end":7338816,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338821,"byte_end":7338856,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338861,"byte_end":7338885,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338890,"byte_end":7338912,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338917,"byte_end":7338924,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338929,"byte_end":7338951,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7338956,"byte_end":7338963,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340069,"byte_end":7340085,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339157,"byte_end":7339186,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339191,"byte_end":7339194,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339199,"byte_end":7339271,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339276,"byte_end":7339301,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339306,"byte_end":7339309,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339314,"byte_end":7339386,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339391,"byte_end":7339460,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339465,"byte_end":7339538,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339543,"byte_end":7339555,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339560,"byte_end":7339563,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339568,"byte_end":7339643,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339648,"byte_end":7339709,"line_start":730,"line_end":730,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339714,"byte_end":7339717,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339722,"byte_end":7339736,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339741,"byte_end":7339744,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339749,"byte_end":7339756,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339761,"byte_end":7339792,"line_start":735,"line_end":735,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339797,"byte_end":7339845,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339850,"byte_end":7339853,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339858,"byte_end":7339899,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339904,"byte_end":7339939,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339944,"byte_end":7339979,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7339984,"byte_end":7340006,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340011,"byte_end":7340018,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340023,"byte_end":7340045,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340050,"byte_end":7340057,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340746,"byte_end":7340765,"line_start":769,"line_end":769,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340182,"byte_end":7340245,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340250,"byte_end":7340253,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340258,"byte_end":7340309,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340314,"byte_end":7340317,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340322,"byte_end":7340390,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340395,"byte_end":7340398,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340403,"byte_end":7340417,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340422,"byte_end":7340425,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340430,"byte_end":7340437,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340442,"byte_end":7340473,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340478,"byte_end":7340526,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340531,"byte_end":7340534,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340539,"byte_end":7340580,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340585,"byte_end":7340620,"line_start":763,"line_end":763,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340625,"byte_end":7340656,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340661,"byte_end":7340683,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340688,"byte_end":7340695,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340700,"byte_end":7340722,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340727,"byte_end":7340734,"line_start":768,"line_end":768,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341424,"byte_end":7341443,"line_start":792,"line_end":792,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7340934,"byte_end":7341000,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341005,"byte_end":7341008,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341013,"byte_end":7341068,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341073,"byte_end":7341076,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341081,"byte_end":7341095,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341100,"byte_end":7341103,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341108,"byte_end":7341115,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341120,"byte_end":7341151,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341156,"byte_end":7341204,"line_start":783,"line_end":783,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341209,"byte_end":7341212,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341217,"byte_end":7341258,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341263,"byte_end":7341298,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341303,"byte_end":7341334,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341339,"byte_end":7341361,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341366,"byte_end":7341373,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341378,"byte_end":7341400,"line_start":790,"line_end":790,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341405,"byte_end":7341412,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341997,"byte_end":7342014,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341546,"byte_end":7341619,"line_start":797,"line_end":797,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341624,"byte_end":7341642,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341647,"byte_end":7341650,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341655,"byte_end":7341669,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341674,"byte_end":7341677,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341682,"byte_end":7341689,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341694,"byte_end":7341725,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341730,"byte_end":7341778,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341783,"byte_end":7341786,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341791,"byte_end":7341832,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341837,"byte_end":7341872,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341877,"byte_end":7341907,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341912,"byte_end":7341934,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341939,"byte_end":7341946,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341951,"byte_end":7341973,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7341978,"byte_end":7341985,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342664,"byte_end":7342672,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342115,"byte_end":7342178,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342183,"byte_end":7342186,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342191,"byte_end":7342252,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342257,"byte_end":7342260,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342265,"byte_end":7342319,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342324,"byte_end":7342327,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342332,"byte_end":7342346,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342351,"byte_end":7342354,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342359,"byte_end":7342366,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342371,"byte_end":7342402,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342407,"byte_end":7342455,"line_start":828,"line_end":828,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342460,"byte_end":7342463,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342468,"byte_end":7342509,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342514,"byte_end":7342549,"line_start":831,"line_end":831,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342554,"byte_end":7342574,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342579,"byte_end":7342601,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342606,"byte_end":7342613,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342618,"byte_end":7342640,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342645,"byte_end":7342652,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343192,"byte_end":7343201,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342770,"byte_end":7342833,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342838,"byte_end":7342841,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342846,"byte_end":7342860,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342865,"byte_end":7342868,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342873,"byte_end":7342880,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342885,"byte_end":7342933,"line_start":847,"line_end":847,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342938,"byte_end":7342959,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7342964,"byte_end":7342999,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343004,"byte_end":7343035,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343040,"byte_end":7343071,"line_start":851,"line_end":851,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343076,"byte_end":7343105,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343110,"byte_end":7343130,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343135,"byte_end":7343156,"line_start":854,"line_end":854,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343161,"byte_end":7343168,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343173,"byte_end":7343180,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343857,"byte_end":7343865,"line_start":882,"line_end":882,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343353,"byte_end":7343406,"line_start":864,"line_end":864,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343411,"byte_end":7343414,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343419,"byte_end":7343433,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343438,"byte_end":7343441,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343446,"byte_end":7343453,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343458,"byte_end":7343489,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343494,"byte_end":7343542,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343547,"byte_end":7343550,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343555,"byte_end":7343596,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343601,"byte_end":7343636,"line_start":873,"line_end":873,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343641,"byte_end":7343672,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343677,"byte_end":7343708,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343713,"byte_end":7343742,"line_start":876,"line_end":876,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343747,"byte_end":7343767,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343772,"byte_end":7343794,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343799,"byte_end":7343806,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343811,"byte_end":7343833,"line_start":880,"line_end":880,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7343838,"byte_end":7343845,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344438,"byte_end":7344447,"line_start":903,"line_end":903,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344029,"byte_end":7344083,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344088,"byte_end":7344091,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344096,"byte_end":7344110,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344115,"byte_end":7344118,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344123,"byte_end":7344130,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344135,"byte_end":7344167,"line_start":894,"line_end":894,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344172,"byte_end":7344222,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344227,"byte_end":7344271,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344276,"byte_end":7344311,"line_start":897,"line_end":897,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344316,"byte_end":7344347,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344352,"byte_end":7344375,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344380,"byte_end":7344387,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344392,"byte_end":7344414,"line_start":901,"line_end":901,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344419,"byte_end":7344426,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345056,"byte_end":7345066,"line_start":925,"line_end":925,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344608,"byte_end":7344657,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344662,"byte_end":7344665,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344670,"byte_end":7344684,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344689,"byte_end":7344692,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344697,"byte_end":7344704,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344709,"byte_end":7344754,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344759,"byte_end":7344809,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344814,"byte_end":7344870,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344875,"byte_end":7344888,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344893,"byte_end":7344928,"line_start":919,"line_end":919,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344933,"byte_end":7344964,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344969,"byte_end":7344993,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7344998,"byte_end":7345005,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345010,"byte_end":7345032,"line_start":923,"line_end":923,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345037,"byte_end":7345044,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7346343,"byte_end":7346353,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7346202,"byte_end":7346269,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347433,"byte_end":7347436,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347034,"byte_end":7347094,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347099,"byte_end":7347102,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347107,"byte_end":7347117,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347122,"byte_end":7347125,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347130,"byte_end":7347202,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347207,"byte_end":7347280,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347285,"byte_end":7347352,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347357,"byte_end":7347360,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: #method.new_with_max_length","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347365,"byte_end":7347421,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348551,"byte_end":7348570,"line_start":63,"line_end":63,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347594,"byte_end":7347654,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347659,"byte_end":7347662,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347667,"byte_end":7347730,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ [`LengthError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347735,"byte_end":7347809,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347814,"byte_end":7347881,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347886,"byte_end":7347958,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347963,"byte_end":7348033,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348038,"byte_end":7348061,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348066,"byte_end":7348069,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348074,"byte_end":7348084,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348089,"byte_end":7348092,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348097,"byte_end":7348172,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348177,"byte_end":7348250,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348255,"byte_end":7348331,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348336,"byte_end":7348409,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348414,"byte_end":7348484,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348489,"byte_end":7348492,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`LengthError`]: ../struct.LengthError","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348497,"byte_end":7348539,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349136,"byte_end":7349146,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348698,"byte_end":7348748,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348753,"byte_end":7348756,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348761,"byte_end":7348768,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348773,"byte_end":7348792,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348797,"byte_end":7348835,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348840,"byte_end":7348843,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348848,"byte_end":7348882,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348887,"byte_end":7348934,"line_start":77,"line_end":77,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348939,"byte_end":7348946,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348951,"byte_end":7348958,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7348963,"byte_end":7349001,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349006,"byte_end":7349009,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349014,"byte_end":7349067,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349072,"byte_end":7349112,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349117,"byte_end":7349124,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353470,"byte_end":7353491,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353424,"byte_end":7353465,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353526,"byte_end":7353528,"line_start":206,"line_end":206,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353497,"byte_end":7353521,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353402,"byte_end":7353417,"line_start":202,"line_end":202,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353320,"byte_end":7353375,"line_start":200,"line_end":200,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":563},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":605}],"decl_id":null,"docs":" UDP framing\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"udp\", feature = \"codec\"))","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":767,"byte_end":814,"line_start":14,"line_end":14,"column_start":13,"column_end":60}},{"value":"/ UDP framing","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":8354755,"byte_end":8354770,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":606},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8356182,"byte_end":8356191,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"UdpFramed","qualname":"::udp::frame::UdpFramed","value":"UdpFramed {  }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355090,"byte_end":8355169,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355170,"byte_end":8355237,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355238,"byte_end":8355241,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Raw UDP sockets work with datagrams, but higher-level code usually wants to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355242,"byte_end":8355321,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ batch these into meaningful chunks, called \"frames\". This method layers","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355322,"byte_end":8355397,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ framing on top of this socket by using the `Encoder` and `Decoder` traits to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355398,"byte_end":8355478,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ handle encoding and decoding of messages frames. Note that the incoming and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355479,"byte_end":8355558,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ outgoing frame types may be distinct.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355559,"byte_end":8355600,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355601,"byte_end":8355604,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355605,"byte_end":8355682,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ grouping this into a single object is often useful for layering things which","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355683,"byte_end":8355763,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ require both read and write access to the underlying object.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355764,"byte_end":8355828,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355829,"byte_end":8355832,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355833,"byte_end":8355906,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ calling `split` on the `UdpFramed` returned by this method, which will break","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355907,"byte_end":8355987,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8355988,"byte_end":8356058,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8356059,"byte_end":8356105,"line_start":29,"line_end":29,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359282,"byte_end":8359285,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpFramed<C>>::new","value":"pub fn new(UdpSocket, C) -> UdpFramed<C>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UdpFramed` backed by the given socket and codec.","sig":null,"attributes":[{"value":"/ Create a new `UdpFramed` backed by the given socket and codec.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359139,"byte_end":8359205,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359210,"byte_end":8359213,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ See struct level documentation for more details.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359218,"byte_end":8359270,"line_start":142,"line_end":142,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359939,"byte_end":8359946,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<UdpFramed<C>>::get_ref","value":"pub fn get_ref(&Self) -> &UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359651,"byte_end":8359724,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359729,"byte_end":8359732,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359737,"byte_end":8359747,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359752,"byte_end":8359755,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359760,"byte_end":8359833,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359838,"byte_end":8359913,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359918,"byte_end":8359927,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360306,"byte_end":8360313,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UdpFramed<C>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360002,"byte_end":8360073,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360078,"byte_end":8360091,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360096,"byte_end":8360099,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360104,"byte_end":8360114,"line_start":168,"line_end":168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360119,"byte_end":8360122,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360127,"byte_end":8360200,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360205,"byte_end":8360280,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360285,"byte_end":8360294,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360456,"byte_end":8360466,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<UdpFramed<C>>::into_inner","value":"pub fn into_inner(Self) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8360381,"byte_end":8360444,"line_start":177,"line_end":177,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279455,"byte_end":7279465,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279616,"byte_end":7279626,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279946,"byte_end":7279956,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289124,"byte_end":7289128,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289399,"byte_end":7289405,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290706,"byte_end":7290712,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294928,"byte_end":7294934,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7295196,"byte_end":7295202,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7295980,"byte_end":7295986,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296346,"byte_end":7296350,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296488,"byte_end":7296492,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296699,"byte_end":7296703,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297098,"byte_end":7297102,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297383,"byte_end":7297387,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297604,"byte_end":7297608,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298137,"byte_end":7298141,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298513,"byte_end":7298517,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299411,"byte_end":7299422,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300426,"byte_end":7300436,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300770,"byte_end":7300780,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302272,"byte_end":7302282,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302595,"byte_end":7302605,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7303695,"byte_end":7303705,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7304761,"byte_end":7304772,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7305290,"byte_end":7305301,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308351,"byte_end":7308362,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308701,"byte_end":7308712,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7310140,"byte_end":7310151,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7310869,"byte_end":7310880,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7311212,"byte_end":7311223,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7312066,"byte_end":7312078,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7312420,"byte_end":7312432,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7314790,"byte_end":7314802,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315138,"byte_end":7315150,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315285,"byte_end":7315297,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315504,"byte_end":7315516,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315911,"byte_end":7315923,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7316203,"byte_end":7316215,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330155,"byte_end":7330175,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7333537,"byte_end":7333557,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7334437,"byte_end":7334457,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7335830,"byte_end":7335850,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7335943,"byte_end":7335950,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345549,"byte_end":7345556,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345682,"byte_end":7345707,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345865,"byte_end":7345890,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7346025,"byte_end":7346050,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347017,"byte_end":7347027,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349533,"byte_end":7349543,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7352948,"byte_end":7352958,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353251,"byte_end":7353261,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353566,"byte_end":7353581,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353863,"byte_end":7353878,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353995,"byte_end":7354010,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8356354,"byte_end":8356363,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8357424,"byte_end":8357433,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359120,"byte_end":8359129,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":455,"byte_end":460,"line_start":21,"line_end":21,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":7278976,"byte_end":7278992,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":342}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":488,"byte_end":491,"line_start":25,"line_end":25,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":563}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279455,"byte_end":7279465,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279616,"byte_end":7279626,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":7279946,"byte_end":7279956,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289124,"byte_end":7289128,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7289399,"byte_end":7289405,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7290706,"byte_end":7290712,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7294928,"byte_end":7294934,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":826},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7295196,"byte_end":7295202,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":826},"to":{"krate":33,"index":9}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7295980,"byte_end":7295986,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296346,"byte_end":7296350,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3120}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296488,"byte_end":7296492,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3203}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7296699,"byte_end":7296703,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":215}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297098,"byte_end":7297102,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":186}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297383,"byte_end":7297387,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7297604,"byte_end":7297608,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":271}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298137,"byte_end":7298141,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7298513,"byte_end":7298517,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":7299411,"byte_end":7299422,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300426,"byte_end":7300436,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7300770,"byte_end":7300780,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302272,"byte_end":7302282,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":740},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7302595,"byte_end":7302605,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":740},"to":{"krate":33,"index":9}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7303695,"byte_end":7303705,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7304761,"byte_end":7304772,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":7305290,"byte_end":7305301,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":695},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308351,"byte_end":7308362,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7308701,"byte_end":7308712,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7310140,"byte_end":7310151,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":654},"to":{"krate":33,"index":9}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7310869,"byte_end":7310880,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":654},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7311212,"byte_end":7311223,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7312066,"byte_end":7312078,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7312420,"byte_end":7312432,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":617},"to":{"krate":33,"index":9}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7314790,"byte_end":7314802,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315138,"byte_end":7315150,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":617},"to":{"krate":1,"index":3120}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315285,"byte_end":7315297,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":617},"to":{"krate":1,"index":3203}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315504,"byte_end":7315516,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":617},"to":{"krate":17,"index":215}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7315911,"byte_end":7315923,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":617},"to":{"krate":17,"index":186}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":7316203,"byte_end":7316215,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7330155,"byte_end":7330175,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7333537,"byte_end":7333557,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7334437,"byte_end":7334457,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7335830,"byte_end":7335850,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7335943,"byte_end":7335950,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345549,"byte_end":7345556,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345682,"byte_end":7345707,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7345865,"byte_end":7345890,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":7346025,"byte_end":7346050,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7347017,"byte_end":7347027,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7349533,"byte_end":7349543,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7352948,"byte_end":7352958,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353251,"byte_end":7353261,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353566,"byte_end":7353581,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353863,"byte_end":7353878,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":7353995,"byte_end":7354010,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8356354,"byte_end":8356363,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":606},"to":{"krate":19,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8357424,"byte_end":8357433,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":606},"to":{"krate":33,"index":9}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":8359120,"byte_end":8359129,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":606},"to":{"krate":4294967295,"index":4294967295}}]}