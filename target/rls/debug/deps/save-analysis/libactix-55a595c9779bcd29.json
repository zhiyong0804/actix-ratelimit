{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0","program":"/Users/lizhiyong/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","actix","--edition=2018","/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"actix-http\"","--cfg","feature=\"default\"","--cfg","feature=\"http\"","--cfg","feature=\"resolver\"","--cfg","feature=\"trust-dns-proto\"","--cfg","feature=\"trust-dns-resolver\"","-C","metadata=55a595c9779bcd29","-C","extra-filename=-55a595c9779bcd29","--out-dir","/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps","-L","dependency=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps","--extern","actix_http=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libactix_http-157117d2f6025e3b.rmeta","--extern","actix_rt=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libactix_rt-e35c692f22bec84a.rmeta","--extern","actix_derive=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libactix_derive-eedefc4d02f0db08.dylib","--extern","bitflags=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libbitflags-dce2fd5d15faffa8.rmeta","--extern","bytes=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libbytes-a0fbb1a35d026668.rmeta","--extern","crossbeam_channel=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libcrossbeam_channel-230ae8a669a4861c.rmeta","--extern","derive_more=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libderive_more-b9d00a7107bf9209.dylib","--extern","futures=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libfutures-d92487fcd6da5a4f.rmeta","--extern","lazy_static=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/liblazy_static-8ca06278f5bc974b.rmeta","--extern","log=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/liblog-05403e2b623f5abd.rmeta","--extern","parking_lot=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libparking_lot-2468555c0be88b8f.rmeta","--extern","pin_project=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libpin_project-2e389b38276ded94.rmeta","--extern","smallvec=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libsmallvec-9c74e4674d33d1d5.rmeta","--extern","tokio=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtokio-ddfa9aaa690b130e.rmeta","--extern","tokio_util=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtokio_util-3203cb30d76be599.rmeta","--extern","trust_dns_proto=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtrust_dns_proto-068d9ecbfee7b171.rmeta","--extern","trust_dns_resolver=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libtrust_dns_resolver-52ec46a1dfc490b9.rmeta","--cap-lints","allow","-L","native=/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/build/brotli-sys-3a6d2a8a677ca292/out","--error-format=json","--sysroot","/Users/lizhiyong/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/lizhiyong/zhiyong/actix-ratelimit/target/rls/debug/deps/libactix-55a595c9779bcd29.rmeta"},"prelude":{"crate_id":{"name":"actix","disambiguator":[9062980637953253977,16177835090771289168]},"crate_root":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src","external_crates":[{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","num":16,"id":{"name":"actix_derive","disambiguator":[3374166445803653738,14960126018681256188]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":17,"id":{"name":"actix_rt","disambiguator":[9796981668047062032,44859646917450789]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":18,"id":{"name":"actix_macros","disambiguator":[2449469838382643632,8220030960948764980]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":19,"id":{"name":"futures_channel","disambiguator":[13838454732064641826,4003439051029670968]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":20,"id":{"name":"futures_core","disambiguator":[6533007024513587931,3945087196898676365]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":21,"id":{"name":"futures_sink","disambiguator":[8816811119957223081,6227302994713401210]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":22,"id":{"name":"futures_util","disambiguator":[17904855170672386144,13510286314923966182]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":23,"id":{"name":"pin_utils","disambiguator":[13711647010173505202,4541951311698546309]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":24,"id":{"name":"proc_macro_hack","disambiguator":[14994149165226609185,13764894071342261991]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":25,"id":{"name":"futures_task","disambiguator":[17078219738172363080,12733908289514241516]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":26,"id":{"name":"pin_project_lite","disambiguator":[16702743115079456072,200694708816345942]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":27,"id":{"name":"slab","disambiguator":[10003592789325744442,14082370257351112682]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":28,"id":{"name":"futures_io","disambiguator":[16645970060058870523,11216647420342296180]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":29,"id":{"name":"futures_macro","disambiguator":[11405944515487892188,13149131725861648873]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":30,"id":{"name":"memchr","disambiguator":[6669519948175115078,18442787318468754460]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":31,"id":{"name":"copyless","disambiguator":[2792785093999940830,3613768008565711645]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","num":32,"id":{"name":"smallvec","disambiguator":[18200465377370406182,14733425022764129350]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":33,"id":{"name":"tokio","disambiguator":[3655854121847460059,6981143134110927724]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[2350234745080963094,6986056061762265917]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","num":35,"id":{"name":"bytes","disambiguator":[13352151229109432172,4004088181155608564]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":36,"id":{"name":"mio","disambiguator":[10237053715060991782,4364443715089003353]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":37,"id":{"name":"net2","disambiguator":[10914819445474922464,17798012213058698903]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":38,"id":{"name":"libc","disambiguator":[16938110951504567708,16095957180410839338]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":39,"id":{"name":"cfg_if","disambiguator":[13347268434212277074,12294355231220403985]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":40,"id":{"name":"iovec","disambiguator":[6527597662397579517,12396101688793930673]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":41,"id":{"name":"log","disambiguator":[12973046251402806001,8734054613415472242]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":42,"id":{"name":"cfg_if","disambiguator":[4164838008399425541,17156835214731903611]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","num":43,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":44,"id":{"name":"mio_uds","disambiguator":[7829334559616477059,1214004950523085808]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":45,"id":{"name":"fnv","disambiguator":[96462123840539675,10172455103510269032]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":46,"id":{"name":"signal_hook_registry","disambiguator":[8138036187057049722,15033096631102936176]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":47,"id":{"name":"actix_threadpool","disambiguator":[16250217341376923048,5027597237645634265]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","num":48,"id":{"name":"derive_more","disambiguator":[17110801785746105183,10633700347118443846]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":49,"id":{"name":"parking_lot","disambiguator":[7107562536311438606,13269095612551927745]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":50,"id":{"name":"instant","disambiguator":[13445658279258951655,3048678408934549062]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":51,"id":{"name":"lock_api","disambiguator":[4368423044415695261,5827814739626729989]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":52,"id":{"name":"scopeguard","disambiguator":[1862256896015051791,8867880041671314409]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":53,"id":{"name":"parking_lot_core","disambiguator":[4886967458082852234,4960344972070808178]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":54,"id":{"name":"threadpool","disambiguator":[1776524221640445320,1593522283030937748]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":55,"id":{"name":"num_cpus","disambiguator":[3824313910821219879,9924517992204541333]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":56,"id":{"name":"futures","disambiguator":[6087973782940748315,15271774758227735752]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","num":57,"id":{"name":"futures_executor","disambiguator":[14515164647929238838,15176188178489614705]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","num":58,"id":{"name":"bitflags","disambiguator":[622889312128496731,14058552020937752200]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","num":59,"id":{"name":"pin_project","disambiguator":[6396006998599065363,10261716687275258609]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","num":60,"id":{"name":"pin_project_internal","disambiguator":[15799868663201601988,7360140168614235833]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","num":61,"id":{"name":"parking_lot","disambiguator":[15435126431727046755,6048031999665300852]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","num":62,"id":{"name":"lock_api","disambiguator":[14068549804419465906,10219138278988359342]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","num":63,"id":{"name":"parking_lot_core","disambiguator":[853363875512614256,10657798092318490755]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":64,"id":{"name":"trust_dns_resolver","disambiguator":[11547342400817311614,6297085767495452032]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":65,"id":{"name":"failure","disambiguator":[5103416121380391764,8718487701129243190]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":66,"id":{"name":"failure_derive","disambiguator":[14596556544728523239,9786548716927678536]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":67,"id":{"name":"backtrace","disambiguator":[10863334705864524304,8159032648537363821]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":68,"id":{"name":"rustc_demangle","disambiguator":[8169200194535852461,1410284481188852260]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":69,"id":{"name":"addr2line","disambiguator":[4245675886567570416,8725257932278858689]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":70,"id":{"name":"gimli","disambiguator":[15437960795703562107,6757257865234271404]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":71,"id":{"name":"object","disambiguator":[10666937255520410755,6936218425449738480]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":72,"id":{"name":"lru_cache","disambiguator":[8126323578575067962,12263364042821214301]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":73,"id":{"name":"linked_hash_map","disambiguator":[14563323992397255763,15850968525484459526]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":74,"id":{"name":"resolv_conf","disambiguator":[17250425403275780811,4167637763048808056]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":75,"id":{"name":"quick_error","disambiguator":[1202372987741885117,7590861082193315812]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":76,"id":{"name":"hostname","disambiguator":[8595822547994163048,2554130071500565374]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":77,"id":{"name":"match_cfg","disambiguator":[6066005323840294847,5078616920515537246]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":78,"id":{"name":"trust_dns_proto","disambiguator":[15238960829114886601,5256400170448940949]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":79,"id":{"name":"idna","disambiguator":[9059928148080495795,15100684491030003971]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":80,"id":{"name":"matches","disambiguator":[5492604276823795975,13624157732241941637]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":81,"id":{"name":"unicode_bidi","disambiguator":[5825131146384457727,4571695240972109017]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":82,"id":{"name":"unicode_normalization","disambiguator":[11707439003922658945,4403819078140609472]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":83,"id":{"name":"tinyvec","disambiguator":[6584295145497648450,12693850032233515786]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":84,"id":{"name":"tinyvec_macros","disambiguator":[259191620044404189,6755017519117179901]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":85,"id":{"name":"url","disambiguator":[10778683432723489412,15368641301587108240]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":86,"id":{"name":"form_urlencoded","disambiguator":[11960689111935106252,16910933360509781418]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":87,"id":{"name":"percent_encoding","disambiguator":[15861698497299036522,11132943435535302225]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":88,"id":{"name":"enum_as_inner","disambiguator":[11479981469571928325,12873858814885213069]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":89,"id":{"name":"async_trait","disambiguator":[17090109567969270607,3026331702846861527]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":90,"id":{"name":"rand","disambiguator":[13447183815039800251,18378126275145912341]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":91,"id":{"name":"rand_core","disambiguator":[10202235759339864897,9807413757431646372]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":92,"id":{"name":"getrandom","disambiguator":[16549805677520225803,9810892162649286842]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":93,"id":{"name":"rand_chacha","disambiguator":[10849700593981729978,17658950914301671266]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":94,"id":{"name":"ppv_lite86","disambiguator":[17595658452971683251,2453942399032753436]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","num":95,"id":{"name":"tokio_util","disambiguator":[1421015842172634069,7632511442603833043]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","num":96,"id":{"name":"crossbeam_channel","disambiguator":[18395426634623949615,9261746806962894992]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","num":97,"id":{"name":"crossbeam_utils","disambiguator":[15528437739068662302,3420867751134756467]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","num":98,"id":{"name":"maybe_uninit","disambiguator":[14152455124215252849,1355212663840290307]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":99,"id":{"name":"actix_http","disambiguator":[15071756498940439751,9165914302505236188]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":100,"id":{"name":"actix_codec","disambiguator":[5536041926638287911,7468927730519943635]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":101,"id":{"name":"actix_service","disambiguator":[9127641919955582683,7037233080194662019]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":102,"id":{"name":"http","disambiguator":[16789045255451460442,4590612790378299017]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":103,"id":{"name":"bytes","disambiguator":[15695690701606196763,3438609876295319728]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":104,"id":{"name":"itoa","disambiguator":[5201504541411624927,12170697511361631395]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":105,"id":{"name":"h2","disambiguator":[15725804207072341065,14926610516805280926]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":106,"id":{"name":"tokio_util","disambiguator":[10095949946397570852,10178201247443657239]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":107,"id":{"name":"indexmap","disambiguator":[11712489210427101763,7444987841413597478]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":108,"id":{"name":"hashbrown","disambiguator":[4068963172339110352,14322147428594099907]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":109,"id":{"name":"tracing_futures","disambiguator":[8843702684530586220,17699993176811121227]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":110,"id":{"name":"pin_project","disambiguator":[849712685126056430,15261009955335999429]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":111,"id":{"name":"pin_project_internal","disambiguator":[8013249664536040261,9048816573945595297]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":112,"id":{"name":"tracing","disambiguator":[9248337134617287230,5264421026946901140]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":113,"id":{"name":"tracing_core","disambiguator":[7555406634885008718,2585605029006457703]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":114,"id":{"name":"actix_connect","disambiguator":[15213102022864059183,6370254212740072236]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":115,"id":{"name":"either","disambiguator":[13709278710345688163,6532573380370947396]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":116,"id":{"name":"actix_utils","disambiguator":[4930005681141051750,6386756507268527203]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":117,"id":{"name":"fxhash","disambiguator":[6910660990117678751,17367875895123839480]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":118,"id":{"name":"byteorder","disambiguator":[2470126068869369270,3118906432055358660]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":119,"id":{"name":"time","disambiguator":[7707758520400060084,18314470458934530380]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":120,"id":{"name":"brotli2","disambiguator":[4814958069056494809,8828966817191981216]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":121,"id":{"name":"brotli_sys","disambiguator":[8638904036994959305,10466181126512724629]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":122,"id":{"name":"flate2","disambiguator":[12740671991329702769,17653960066476306509]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":123,"id":{"name":"crc32fast","disambiguator":[6515236754878609326,3764825410416518364]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":124,"id":{"name":"miniz_oxide","disambiguator":[16101941443617440080,16709874122233057099]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":125,"id":{"name":"adler","disambiguator":[4159225719302468547,9923365342864286085]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":126,"id":{"name":"mime","disambiguator":[17065912580722822860,5315501944619520614]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":127,"id":{"name":"language_tags","disambiguator":[4384741300748108333,16698287623029878286]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":128,"id":{"name":"regex","disambiguator":[6247253139802788492,17069114762288143966]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":129,"id":{"name":"regex_syntax","disambiguator":[214678587998526988,10077603482208831379]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":130,"id":{"name":"aho_corasick","disambiguator":[18271876822408486866,11089264302500303619]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":131,"id":{"name":"encoding_rs","disambiguator":[18318075109596753519,13849269947550846055]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":132,"id":{"name":"serde","disambiguator":[6728660683507148420,8200970628635269149]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":133,"id":{"name":"serde_derive","disambiguator":[13356493982505855828,9319977404536932127]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":134,"id":{"name":"serde_json","disambiguator":[15519259295726278409,3008516307445538232]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":135,"id":{"name":"ryu","disambiguator":[13195977962179705439,16793643528618471385]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":136,"id":{"name":"chrono","disambiguator":[1463300847998276354,2103066642651947713]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":137,"id":{"name":"num_integer","disambiguator":[7107963941534747907,5451599064294810092]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":138,"id":{"name":"num_traits","disambiguator":[13675287653750090523,7777122014881598610]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":139,"id":{"name":"httparse","disambiguator":[13410872314879130261,9657427702473713156]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":140,"id":{"name":"serde_urlencoded","disambiguator":[16439690606079307032,12009860135136973895]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":141,"id":{"name":"dtoa","disambiguator":[2647195124932814948,15202576235569631771]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":142,"id":{"name":"base64","disambiguator":[3167967368488132042,3446792678154386433]}},{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","num":143,"id":{"name":"sha1","disambiguator":[11956432469571967899,15348405689724079496]}}],"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":0,"byte_end":6235,"line_start":1,"line_end":204,"column_start":1,"column_end":51}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1726,"byte_end":1727,"line_start":44,"line_end":44,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":7313},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135095,"byte_end":135104,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":33,"index":7312},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135106,"byte_end":135117,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":33,"index":7574},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135119,"byte_end":135130,"line_start":12,"line_end":12,"column_start":29,"column_end":40},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":33,"index":7756},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135132,"byte_end":135137,"line_start":12,"line_end":12,"column_start":42,"column_end":47},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":2,"index":34897},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135139,"byte_end":135147,"line_start":12,"line_end":12,"column_start":49,"column_end":57},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":33,"index":7835},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135149,"byte_end":135156,"line_start":12,"line_end":12,"column_start":59,"column_end":66},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":33,"index":7858},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":135158,"byte_end":135166,"line_start":12,"line_end":12,"column_start":68,"column_end":76},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":1100}},{"kind":"Use","ref_id":{"krate":0,"index":2518},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135586,"byte_end":135592,"line_start":24,"line_end":24,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135618,"byte_end":135624,"line_start":25,"line_end":25,"column_start":25,"column_end":31},"alias_span":null,"name":"Finish","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135626,"byte_end":135638,"line_start":25,"line_end":25,"column_start":33,"column_end":45},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2538},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135660,"byte_end":135663,"line_start":26,"line_end":26,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135691,"byte_end":135696,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2593},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135698,"byte_end":135703,"line_start":27,"line_end":27,"column_start":34,"column_end":39},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135729,"byte_end":135732,"line_start":28,"line_end":28,"column_start":24,"column_end":27},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135734,"byte_end":135736,"line_start":28,"line_end":28,"column_start":29,"column_end":31},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135738,"byte_end":135744,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135746,"byte_end":135758,"line_start":28,"line_end":28,"column_start":41,"column_end":53},"alias_span":null,"name":"FutureResult","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2613},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135790,"byte_end":135802,"line_start":29,"line_end":29,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamFinish","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2620},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135831,"byte_end":135841,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamFold","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2716},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135869,"byte_end":135878,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2772},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135907,"byte_end":135917,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamThen","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2842},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135949,"byte_end":135962,"line_start":33,"line_end":33,"column_start":31,"column_end":44},"alias_span":null,"name":"StreamTimeout","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2850},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135984,"byte_end":135988,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":2913},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136013,"byte_end":136020,"line_start":35,"line_end":35,"column_start":24,"column_end":31},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":17,"index":307},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2034,"byte_end":2041,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":347},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2043,"byte_end":2049,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":336},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2051,"byte_end":2063,"line_start":68,"line_end":68,"column_start":37,"column_end":49},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2095,"byte_end":2100,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2102,"byte_end":2114,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2116,"byte_end":2126,"line_start":71,"line_end":71,"column_start":26,"column_end":36},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2128,"byte_end":2140,"line_start":71,"line_end":71,"column_start":38,"column_end":50},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2142,"byte_end":2149,"line_start":71,"line_end":71,"column_start":52,"column_end":59},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2151,"byte_end":2162,"line_start":71,"line_end":71,"column_start":61,"column_end":72},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2164,"byte_end":2174,"line_start":71,"line_end":71,"column_start":74,"column_end":84},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2435},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2204,"byte_end":2208,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2428},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2210,"byte_end":2222,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2224,"byte_end":2233,"line_start":73,"line_end":73,"column_start":46,"column_end":55},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2441},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2235,"byte_end":2243,"line_start":73,"line_end":73,"column_start":57,"column_end":65},"alias_span":null,"name":"WeakAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2324,"byte_end":2331,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2354,"byte_end":2365,"line_start":76,"line_end":76,"column_start":22,"column_end":33},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2367,"byte_end":2378,"line_start":76,"line_end":76,"column_start":35,"column_end":46},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2380,"byte_end":2392,"line_start":76,"line_end":76,"column_start":48,"column_end":60},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2394,"byte_end":2404,"line_start":76,"line_end":76,"column_start":62,"column_end":72},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1484},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2406,"byte_end":2416,"line_start":76,"line_end":76,"column_start":74,"column_end":84},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2449,"byte_end":2462,"line_start":78,"line_end":78,"column_start":5,"column_end":18},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2464,"byte_end":2471,"line_start":78,"line_end":78,"column_start":20,"column_end":27},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2473,"byte_end":2480,"line_start":78,"line_end":78,"column_start":29,"column_end":36},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2482,"byte_end":2495,"line_start":78,"line_end":78,"column_start":38,"column_end":51},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2482,"byte_end":2495,"line_start":78,"line_end":78,"column_start":38,"column_end":51},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2497,"byte_end":2505,"line_start":78,"line_end":78,"column_start":53,"column_end":61},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2507,"byte_end":2524,"line_start":78,"line_end":78,"column_start":63,"column_end":80},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2530,"byte_end":2544,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1677},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2575,"byte_end":2589,"line_start":81,"line_end":81,"column_start":27,"column_end":41},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3152},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2591,"byte_end":2599,"line_start":81,"line_end":81,"column_start":43,"column_end":51},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3160},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2601,"byte_end":2615,"line_start":81,"line_end":81,"column_start":53,"column_end":67},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2617,"byte_end":2630,"line_start":81,"line_end":81,"column_start":69,"column_end":82},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2656,"byte_end":2669,"line_start":82,"line_end":82,"column_start":24,"column_end":37},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2390},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2698,"byte_end":2708,"line_start":83,"line_end":83,"column_start":28,"column_end":38},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2732,"byte_end":2743,"line_start":84,"line_end":84,"column_start":23,"column_end":34},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2745,"byte_end":2756,"line_start":84,"line_end":84,"column_start":36,"column_end":47},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2799,"byte_end":2819,"line_start":87,"line_end":87,"column_start":25,"column_end":45},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3176,"byte_end":3177,"line_start":101,"line_end":101,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":17,"index":307},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3202,"byte_end":3209,"line_start":102,"line_end":102,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":17,"index":347},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3211,"byte_end":3217,"line_start":102,"line_end":102,"column_start":33,"column_end":39},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":17,"index":336},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3219,"byte_end":3231,"line_start":102,"line_end":102,"column_start":41,"column_end":53},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3271,"byte_end":3276,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3278,"byte_end":3290,"line_start":105,"line_end":105,"column_start":16,"column_end":28},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3292,"byte_end":3302,"line_start":105,"line_end":105,"column_start":30,"column_end":40},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3304,"byte_end":3316,"line_start":105,"line_end":105,"column_start":42,"column_end":54},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3318,"byte_end":3325,"line_start":105,"line_end":105,"column_start":56,"column_end":63},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3327,"byte_end":3338,"line_start":105,"line_end":105,"column_start":65,"column_end":76},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3340,"byte_end":3350,"line_start":105,"line_end":105,"column_start":78,"column_end":88},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":2435},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3397,"byte_end":3401,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":2428},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3403,"byte_end":3415,"line_start":108,"line_end":108,"column_start":15,"column_end":27},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3417,"byte_end":3426,"line_start":108,"line_end":108,"column_start":29,"column_end":38},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3428,"byte_end":3444,"line_start":108,"line_end":108,"column_start":40,"column_end":56},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3446,"byte_end":3453,"line_start":108,"line_end":108,"column_start":58,"column_end":65},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3455,"byte_end":3464,"line_start":108,"line_end":108,"column_start":67,"column_end":76},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3502,"byte_end":3509,"line_start":110,"line_end":110,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3511,"byte_end":3531,"line_start":110,"line_end":110,"column_start":39,"column_end":59},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3559,"byte_end":3570,"line_start":111,"line_end":111,"column_start":26,"column_end":37},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3572,"byte_end":3583,"line_start":111,"line_end":111,"column_start":39,"column_end":50},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3585,"byte_end":3595,"line_start":111,"line_end":111,"column_start":52,"column_end":62},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1484},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3597,"byte_end":3607,"line_start":111,"line_end":111,"column_start":64,"column_end":74},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3648,"byte_end":3661,"line_start":113,"line_end":113,"column_start":9,"column_end":22},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3663,"byte_end":3670,"line_start":113,"line_end":113,"column_start":24,"column_end":31},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3672,"byte_end":3679,"line_start":113,"line_end":113,"column_start":33,"column_end":40},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3681,"byte_end":3694,"line_start":113,"line_end":113,"column_start":42,"column_end":55},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3681,"byte_end":3694,"line_start":113,"line_end":113,"column_start":42,"column_end":55},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3696,"byte_end":3704,"line_start":113,"line_end":113,"column_start":57,"column_end":65},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3706,"byte_end":3723,"line_start":113,"line_end":113,"column_start":67,"column_end":84},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3733,"byte_end":3747,"line_start":114,"line_end":114,"column_start":9,"column_end":23},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1677},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3786,"byte_end":3800,"line_start":116,"line_end":116,"column_start":31,"column_end":45},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3802,"byte_end":3815,"line_start":116,"line_end":116,"column_start":47,"column_end":60},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3845,"byte_end":3858,"line_start":117,"line_end":117,"column_start":28,"column_end":41},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":2390},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3891,"byte_end":3901,"line_start":118,"line_end":118,"column_start":32,"column_end":42},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3929,"byte_end":3940,"line_start":119,"line_end":119,"column_start":27,"column_end":38},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3942,"byte_end":3953,"line_start":119,"line_end":119,"column_start":40,"column_end":51},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3976,"byte_end":3982,"line_start":121,"line_end":121,"column_start":20,"column_end":26},"alias_span":null,"name":"actors","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1960},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4003,"byte_end":4006,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"alias_span":null,"name":"dev","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4027,"byte_end":4030,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"alias_span":null,"name":"fut","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1506},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4051,"byte_end":4053,"line_start":124,"line_end":124,"column_start":20,"column_end":22},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4082,"byte_end":4091,"line_start":125,"line_end":125,"column_start":28,"column_end":37},"alias_span":null,"name":"Condition","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4093,"byte_end":4105,"line_start":125,"line_end":125,"column_start":39,"column_end":51},"alias_span":null,"name":"IntervalFunc","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":0,"index":1821},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4107,"byte_end":4116,"line_start":125,"line_end":125,"column_start":53,"column_end":62},"alias_span":null,"name":"TimerFunc","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":2,"index":9131},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4142,"byte_end":4148,"line_start":127,"line_end":127,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":1904}},{"kind":"Use","ref_id":{"krate":20,"index":68},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4150,"byte_end":4156,"line_start":127,"line_end":127,"column_start":31,"column_end":37},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1904}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4514,"byte_end":4515,"line_start":141,"line_end":141,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4556,"byte_end":4564,"line_start":144,"line_end":144,"column_start":9,"column_end":17},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4566,"byte_end":4579,"line_start":144,"line_end":144,"column_start":19,"column_end":32},"alias_span":null,"name":"EnvelopeProxy","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4581,"byte_end":4597,"line_start":144,"line_end":144,"column_start":34,"column_end":50},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4599,"byte_end":4606,"line_start":144,"line_end":144,"column_start":52,"column_end":59},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4608,"byte_end":4618,"line_start":144,"line_end":144,"column_start":61,"column_end":71},"alias_span":null,"name":"ToEnvelope","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4691,"byte_end":4698,"line_start":147,"line_end":147,"column_start":43,"column_end":50},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":1968}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4700,"byte_end":4715,"line_start":147,"line_end":147,"column_start":52,"column_end":67},"alias_span":null,"name":"AddressReceiver","value":"","parent":{"krate":0,"index":1968}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4717,"byte_end":4730,"line_start":147,"line_end":147,"column_start":69,"column_end":82},"alias_span":null,"name":"AddressSender","value":"","parent":{"krate":0,"index":1968}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4772,"byte_end":4789,"line_start":149,"line_end":149,"column_start":34,"column_end":51},"alias_span":null,"name":"AsyncContextParts","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4791,"byte_end":4801,"line_start":149,"line_end":149,"column_start":53,"column_end":63},"alias_span":null,"name":"ContextFut","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4803,"byte_end":4815,"line_start":149,"line_end":149,"column_start":65,"column_end":77},"alias_span":null,"name":"ContextParts","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4847,"byte_end":4862,"line_start":150,"line_end":150,"column_start":30,"column_end":45},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4864,"byte_end":4879,"line_start":150,"line_end":150,"column_start":47,"column_end":62},"alias_span":null,"name":"ResponseChannel","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4910,"byte_end":4917,"line_start":151,"line_end":151,"column_start":29,"column_end":36},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":3152},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4949,"byte_end":4957,"line_start":152,"line_end":152,"column_start":31,"column_end":39},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":1960}},{"kind":"Use","ref_id":{"krate":0,"index":3160},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4959,"byte_end":4973,"line_start":152,"line_end":152,"column_start":41,"column_end":55},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":1960}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":0,"byte_end":6235,"line_start":1,"line_end":204,"column_start":1,"column_end":51},"name":"","qualname":"::","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":75},{"krate":0,"index":134},{"krate":0,"index":228},{"krate":0,"index":305},{"krate":0,"index":473},{"krate":0,"index":508},{"krate":0,"index":536},{"krate":0,"index":938},{"krate":0,"index":972},{"krate":0,"index":1100},{"krate":0,"index":1109},{"krate":0,"index":1506},{"krate":0,"index":1658},{"krate":0,"index":1708},{"krate":0,"index":1794},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":4040},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1960},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1988}],"decl_id":null,"docs":" # Actix is a rust actors framework","sig":null,"attributes":[{"value":"/ # Actix is a rust actors framework","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":39,"byte_end":42,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Actors](https://actix.github.io/actix/actix/trait.Actor.html) are","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":43,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ objects which encapsulate state and behavior, they communicate","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":114,"byte_end":180,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ exclusively by exchanging messages. Actix actors are implemented","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":181,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ on top of [Tokio](https://tokio.rs).  Multiple actors can run in","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":250,"byte_end":318,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ same thread. Actors can run in multiple threads using the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":319,"byte_end":380,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`Arbiter`](struct.Arbiter.html) API. Actors exchange typed","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":381,"byte_end":444,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":445,"byte_end":458,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":459,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":463,"byte_end":483,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":484,"byte_end":487,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [User Guide](https://actix.rs/book/actix/)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":488,"byte_end":536,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ * [Chat on gitter](https://gitter.im/actix/actix)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":537,"byte_end":590,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ * [GitHub repository](https://github.com/actix/actix)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":591,"byte_end":648,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ * [Cargo package](https://crates.io/crates/actix)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":649,"byte_end":702,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/ * Minimum supported Rust version: 1.39 or later","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":703,"byte_end":754,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":755,"byte_end":758,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":759,"byte_end":774,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":775,"byte_end":778,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * Async/Sync actors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":779,"byte_end":803,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ * Actor communication in a local/thread context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":804,"byte_end":856,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ * Using Futures for asynchronous message handling.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":857,"byte_end":911,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ * HTTP1/HTTP2 support ([actix-web](https://github.com/actix/actix-web))","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":912,"byte_end":987,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ * Actor supervision.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":988,"byte_end":1012,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ * Typed messages (No `Any` type). Generic messages are allowed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1013,"byte_end":1080,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Package feature","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1085,"byte_end":1107,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1108,"byte_end":1111,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `resolver` - enables dns resolver actor, `actix::actors::resolver`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1112,"byte_end":1184,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Tokio runtime","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1189,"byte_end":1209,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1210,"byte_end":1213,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ At the moment actix uses","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1214,"byte_end":1242,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ [`current_thread`](https://docs.rs/tokio/0.1.13/tokio/runtime/current_thread/index.html) runtime.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1243,"byte_end":1344,"line_start":35,"line_end":35,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1345,"byte_end":1348,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ While it provides minimum overhead, it has its own limits:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1349,"byte_end":1411,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - You cannot use tokio's async file I/O, as it relies on blocking calls that are not available","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1416,"byte_end":1514,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ in `current_thread`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1515,"byte_end":1538,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ - `Stdin`, `Stderr` and `Stdout` from `tokio::io` are the same as file I/O in that regard and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1539,"byte_end":1636,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ cannot be used in asynchronous manner in actix.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1637,"byte_end":1688,"line_start":42,"line_end":42,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9005,"byte_end":9010,"line_start":76,"line_end":76,"column_start":11,"column_end":16},"name":"Actor","qualname":"::actor::Actor","value":"Actor: Sized + Unpin + 'static","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38}],"decl_id":null,"docs":" Actors are objects which encapsulate state and behavior.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6693,"byte_end":6719,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ Actors are objects which encapsulate state and behavior.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6720,"byte_end":6780,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6781,"byte_end":6784,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Actors run within a specific execution context","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6785,"byte_end":6835,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ [`Context<A>`](struct.Context.html). The context object is available","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6836,"byte_end":6908,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ only during execution. Each actor has a separate execution","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6909,"byte_end":6971,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ context. The execution context also controls the lifecycle of an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":6972,"byte_end":7040,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7041,"byte_end":7051,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7052,"byte_end":7055,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Actors communicate exclusively by exchanging messages. The sender","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7056,"byte_end":7125,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ actor can wait for a response. Actors are not referenced directly,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7126,"byte_end":7196,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ but by address [`Addr`](struct.Addr.html) To be able to handle a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7197,"byte_end":7265,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ specific message actor has to provide a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7266,"byte_end":7309,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`Handler<M>`](trait.Handler.html) implementation for this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7310,"byte_end":7372,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/ message. All messages are statically typed. A message can be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7373,"byte_end":7437,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ handled in asynchronous fashion. An actor can spawn other actors","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7438,"byte_end":7506,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ or add futures or streams to the execution context. The actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7507,"byte_end":7572,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ trait provides several methods that allow controlling the actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7573,"byte_end":7640,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ lifecycle.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7641,"byte_end":7655,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7656,"byte_end":7659,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Actor lifecycle","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7660,"byte_end":7681,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7682,"byte_end":7685,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Started","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7686,"byte_end":7700,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7701,"byte_end":7704,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An actor starts in the `Started` state, during this state the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7705,"byte_end":7770,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"/ `started` method gets called.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7771,"byte_end":7804,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7805,"byte_end":7808,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Running","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7809,"byte_end":7823,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7824,"byte_end":7827,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ After an actor's `started` method got called, the actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7828,"byte_end":7887,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/ transitions to the `Running` state. An actor can stay in the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7888,"byte_end":7952,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ `running` state for an indefinite amount of time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":7953,"byte_end":8006,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8007,"byte_end":8010,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Stopping","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8011,"byte_end":8026,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8027,"byte_end":8030,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The actor's execution state changes to `stopping` in the following","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8031,"byte_end":8101,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ situations:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8102,"byte_end":8117,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8118,"byte_end":8121,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * `Context::stop` gets called by actor itself","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8122,"byte_end":8171,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/ * all addresses to the actor get dropped","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8172,"byte_end":8216,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ * no evented objects are registered in its context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8217,"byte_end":8272,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8273,"byte_end":8276,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ An actor can return from the `stopping` state to the `running`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8277,"byte_end":8343,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ state by creating a new address or adding an evented object, like","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8344,"byte_end":8413,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ a future or stream, in its `Actor::stopping` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8414,"byte_end":8470,"line_start":62,"line_end":62,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8471,"byte_end":8474,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If an actor changed to a `stopping` state because","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8475,"byte_end":8528,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/ `Context::stop()` got called, the context then immediately stops","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8529,"byte_end":8597,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/ processing incoming messages and calls the `Actor::stopping()`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8598,"byte_end":8664,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ method. If an actor does not return back to a `running` state,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8665,"byte_end":8731,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ all unprocessed messages get dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8732,"byte_end":8773,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8774,"byte_end":8777,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Stopped","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8778,"byte_end":8792,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8793,"byte_end":8796,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If an actor does not modify execution context while in stopping","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8797,"byte_end":8864,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ state, the actor state changes to `Stopped`. This state is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8865,"byte_end":8927,"line_start":73,"line_end":73,"column_start":1,"column_end":63}},{"value":"/ considered final and at this point the actor gets dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8928,"byte_end":8990,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":8991,"byte_end":8994,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9084,"byte_end":9091,"line_start":78,"line_end":78,"column_start":10,"column_end":17},"name":"Context","qualname":"::actor::Actor::Context","value":"type Context: ActorContext;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Actor execution context type\n","sig":null,"attributes":[{"value":"/ Actor execution context type","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9042,"byte_end":9074,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9172,"byte_end":9179,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"started","qualname":"::actor::Actor::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Called when an actor gets polled the first time.\n","sig":null,"attributes":[{"value":"/ Called when an actor gets polled the first time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9112,"byte_end":9164,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9657,"byte_end":9665,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"stopping","qualname":"::actor::Actor::stopping","value":"pub fn stopping(&mut Self, &mut Self::Context) -> Running","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Called after an actor is in `Actor::Stopping` state.","sig":null,"attributes":[{"value":"/ Called after an actor is in `Actor::Stopping` state.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9224,"byte_end":9280,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9285,"byte_end":9288,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ There can be several reasons for stopping:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9293,"byte_end":9339,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9344,"byte_end":9347,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ - `Context::stop` gets called by the actor itself.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9352,"byte_end":9406,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ - All addresses to the current actor get dropped and no more","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9411,"byte_end":9475,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/   evented objects are left in the context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9480,"byte_end":9526,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9531,"byte_end":9534,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ An actor can return from the stopping state to the running","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9539,"byte_end":9601,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/ state by returning `Running::Continue`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9606,"byte_end":9649,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9991,"byte_end":9998,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"stopped","qualname":"::actor::Actor::stopped","value":"pub fn stopped(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Called after an actor is stopped.","sig":null,"attributes":[{"value":"/ Called after an actor is stopped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9748,"byte_end":9785,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9790,"byte_end":9793,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method can be used to perform any needed cleanup work or","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9798,"byte_end":9863,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ to spawn more actors. This is the final state, after this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9868,"byte_end":9929,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ method got called, the actor will be dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9934,"byte_end":9983,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10551,"byte_end":10556,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"start","qualname":"::actor::Actor::start","value":"pub fn start(Self) -> Addr<Self> where Self: Actor<Context = Context<Self>>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor, returning its address.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor, returning its address.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10043,"byte_end":10101,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10106,"byte_end":10109,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10114,"byte_end":10128,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10133,"byte_end":10136,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10141,"byte_end":10152,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10157,"byte_end":10174,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10179,"byte_end":10182,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10187,"byte_end":10206,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10211,"byte_end":10239,"line_start":112,"line_end":112,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10244,"byte_end":10281,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10286,"byte_end":10291,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10296,"byte_end":10299,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10304,"byte_end":10319,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10324,"byte_end":10352,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10357,"byte_end":10381,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor.start(); // <- start actor and get its address","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10386,"byte_end":10463,"line_start":119,"line_end":119,"column_start":5,"column_end":82}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10468,"byte_end":10505,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10510,"byte_end":10521,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10526,"byte_end":10531,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10536,"byte_end":10543,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10885,"byte_end":10898,"line_start":136,"line_end":136,"column_start":8,"column_end":21},"name":"start_default","qualname":"::actor::Actor::start_default","value":"pub fn start_default() -> Addr<Self> where Self: Actor<Context =\nContext<Self>> + Default","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Construct and start a new asynchronous actor, returning its\n address.","sig":null,"attributes":[{"value":"/ Construct and start a new asynchronous actor, returning its","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10683,"byte_end":10746,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ address.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10751,"byte_end":10763,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10768,"byte_end":10771,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is constructs a new actor using the `Default` trait, and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10776,"byte_end":10841,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ invokes its `start` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":10846,"byte_end":10877,"line_start":135,"line_end":135,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11078,"byte_end":11094,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"start_in_arbiter","qualname":"::actor::Actor::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&Arbiter, F) -> Addr<Self> where\nSelf: Actor<Context = Context<Self>>, F: FnOnce(&mut Context<Self>) -> Self +\nSend + 'static","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Start new actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new actor in arbiter's thread.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11030,"byte_end":11070,"line_start":143,"line_end":143,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12239,"byte_end":12245,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"create","qualname":"::actor::Actor::create","value":"pub fn create<F>(F) -> Addr<Self> where Self: Actor<Context = Context<Self>>,\nF: FnOnce(&mut Context<Self>) -> Self","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor given a `Context`.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor given a `Context`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11587,"byte_end":11640,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11645,"byte_end":11648,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Use this method if you need the `Context` object during actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11653,"byte_end":11718,"line_start":165,"line_end":165,"column_start":5,"column_end":70}},{"value":"/ initialization.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11723,"byte_end":11742,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11747,"byte_end":11750,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11755,"byte_end":11769,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11774,"byte_end":11777,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11782,"byte_end":11793,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11798,"byte_end":11815,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11820,"byte_end":11823,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ struct MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11828,"byte_end":11848,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     val: usize,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11853,"byte_end":11872,"line_start":174,"line_end":174,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11877,"byte_end":11882,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11887,"byte_end":11915,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11920,"byte_end":11957,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11962,"byte_end":11967,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11972,"byte_end":11975,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":11980,"byte_end":11995,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12000,"byte_end":12028,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12033,"byte_end":12057,"line_start":182,"line_end":182,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor::create(|ctx: &mut Context<MyActor>| MyActor { val: 10 });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12062,"byte_end":12151,"line_start":183,"line_end":183,"column_start":5,"column_end":94}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12156,"byte_end":12193,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12198,"byte_end":12209,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12214,"byte_end":12219,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12224,"byte_end":12231,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13105,"byte_end":13115,"line_start":213,"line_end":213,"column_start":11,"column_end":21},"name":"Supervised","qualname":"::actor::Supervised","value":"Supervised: Actor","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" Actors with the ability to restart after failure.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12477,"byte_end":12503,"line_start":199,"line_end":199,"column_start":1,"column_end":27}},{"value":"/ Actors with the ability to restart after failure.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12504,"byte_end":12557,"line_start":200,"line_end":200,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12558,"byte_end":12561,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Supervised actors can be managed by a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12562,"byte_end":12603,"line_start":202,"line_end":202,"column_start":1,"column_end":42}},{"value":"/ [`Supervisor`](struct.Supervisor.html). As an additional lifecycle","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12604,"byte_end":12674,"line_start":203,"line_end":203,"column_start":1,"column_end":71}},{"value":"/ event, the `restarting` method can be implemented.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12675,"byte_end":12729,"line_start":204,"line_end":204,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12730,"byte_end":12733,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If a supervised actor fails, its supervisor creates new execution","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12734,"byte_end":12803,"line_start":206,"line_end":206,"column_start":1,"column_end":70}},{"value":"/ context and restarts the actor, invoking its `restarting` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12804,"byte_end":12873,"line_start":207,"line_end":207,"column_start":1,"column_end":70}},{"value":"/ After a call to this method, the actor's execution state changes","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12874,"byte_end":12942,"line_start":208,"line_end":208,"column_start":1,"column_end":69}},{"value":"/ to `Started` and the regular lifecycle process starts.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":12943,"byte_end":13001,"line_start":209,"line_end":209,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13002,"byte_end":13005,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ The `restarting` method gets called with the newly constructed","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13006,"byte_end":13072,"line_start":211,"line_end":211,"column_start":1,"column_end":67}},{"value":"/ `Context` object.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13073,"byte_end":13094,"line_start":212,"line_end":212,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13192,"byte_end":13202,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"restarting","qualname":"::actor::Supervised::restarting","value":"pub fn restarting(&mut Self, &mut <Self as Actor>::Context)","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Called when the supervisor restarts a failed actor.\n","sig":null,"attributes":[{"value":"/ Called when the supervisor restarts a failed actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13129,"byte_end":13184,"line_start":214,"line_end":214,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13375,"byte_end":13382,"line_start":222,"line_end":222,"column_start":5,"column_end":12},"name":"Started","qualname":"::actor::ActorState::Started","value":"ActorState::Started","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Actor is started.\n","sig":null,"attributes":[{"value":"/ Actor is started.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13349,"byte_end":13370,"line_start":221,"line_end":221,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13414,"byte_end":13421,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"name":"Running","qualname":"::actor::ActorState::Running","value":"ActorState::Running","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Actor is running.\n","sig":null,"attributes":[{"value":"/ Actor is running.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13388,"byte_end":13409,"line_start":223,"line_end":223,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13454,"byte_end":13462,"line_start":226,"line_end":226,"column_start":5,"column_end":13},"name":"Stopping","qualname":"::actor::ActorState::Stopping","value":"ActorState::Stopping","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Actor is stopping.\n","sig":null,"attributes":[{"value":"/ Actor is stopping.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13427,"byte_end":13449,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13494,"byte_end":13501,"line_start":228,"line_end":228,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::actor::ActorState::Stopped","value":"ActorState::Stopped","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Actor is stopped.\n","sig":null,"attributes":[{"value":"/ Actor is stopped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13468,"byte_end":13489,"line_start":227,"line_end":227,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13332,"byte_end":13342,"line_start":220,"line_end":220,"column_start":10,"column_end":20},"name":"ActorState","qualname":"::actor::ActorState","value":"pub enum ActorState {\n\n    /// Actor is started.\n    Started,\n\n    /// Actor is running.\n    Running,\n\n    /// Actor is stopping.\n    Stopping,\n\n    /// Actor is stopped.\n    Stopped,\n}","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996}],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"/ Actor execution state","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13256,"byte_end":13281,"line_start":218,"line_end":218,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13570,"byte_end":13574,"line_start":233,"line_end":233,"column_start":5,"column_end":9},"name":"Stop","qualname":"::actor::Running::Stop","value":"Running::Stop","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13580,"byte_end":13588,"line_start":234,"line_end":234,"column_start":5,"column_end":13},"name":"Continue","qualname":"::actor::Running::Continue","value":"Running::Continue","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13556,"byte_end":13563,"line_start":232,"line_end":232,"column_start":10,"column_end":17},"name":"Running","qualname":"::actor::Running","value":"pub enum Running { Stop, Continue, }","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13668,"byte_end":13673,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"name":"alive","qualname":"<ActorState>::alive","value":"pub fn alive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is alive.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is alive.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13615,"byte_end":13656,"line_start":238,"line_end":238,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13834,"byte_end":13842,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"stopping","qualname":"<ActorState>::stopping","value":"pub fn stopping(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is stopped or stopping.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is stopped or stopping.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13767,"byte_end":13822,"line_start":242,"line_end":242,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14300,"byte_end":14312,"line_start":256,"line_end":256,"column_start":11,"column_end":23},"name":"ActorContext","qualname":"::actor::ActorContext","value":"ActorContext: Sized","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Actor execution context.","sig":null,"attributes":[{"value":"/ Actor execution context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13936,"byte_end":13964,"line_start":248,"line_end":248,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13965,"byte_end":13968,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Each actor runs within a specific execution context. The actor's","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13969,"byte_end":14037,"line_start":250,"line_end":250,"column_start":1,"column_end":69}},{"value":"/ associated type `Actor::Context` defines the context to use for","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14038,"byte_end":14105,"line_start":251,"line_end":251,"column_start":1,"column_end":68}},{"value":"/ the actor, and must implement the `ActorContext` trait.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14106,"byte_end":14165,"line_start":252,"line_end":252,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14166,"byte_end":14169,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ The execution context defines the type of execution, and the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14170,"byte_end":14234,"line_start":254,"line_end":254,"column_start":1,"column_end":65}},{"value":"/ actor's communication channels (message handling).","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14235,"byte_end":14289,"line_start":255,"line_end":255,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14533,"byte_end":14537,"line_start":260,"line_end":260,"column_start":8,"column_end":12},"name":"stop","qualname":"::actor::ActorContext::stop","value":"pub fn stop(&mut Self)","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Immediately stop processing incoming messages and switch to a\n `stopping` state. This only affects actors that are currently\n `running`. Future attempts to queue messages will fail.\n","sig":null,"attributes":[{"value":"/ Immediately stop processing incoming messages and switch to a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14326,"byte_end":14391,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ `stopping` state. This only affects actors that are currently","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14396,"byte_end":14461,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ `running`. Future attempts to queue messages will fail.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14466,"byte_end":14525,"line_start":259,"line_end":259,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14726,"byte_end":14735,"line_start":265,"line_end":265,"column_start":8,"column_end":17},"name":"terminate","qualname":"::actor::ActorContext::terminate","value":"pub fn terminate(&mut Self)","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Terminate actor execution unconditionally. This sets the actor\n into the `stopped` state. This causes future attempts to queue\n messages to fail.\n","sig":null,"attributes":[{"value":"/ Terminate actor execution unconditionally. This sets the actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14555,"byte_end":14621,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/ into the `stopped` state. This causes future attempts to queue","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14626,"byte_end":14692,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"/ messages to fail.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14697,"byte_end":14718,"line_start":264,"line_end":264,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14808,"byte_end":14813,"line_start":268,"line_end":268,"column_start":8,"column_end":13},"name":"state","qualname":"::actor::ActorContext::state","value":"pub fn state(&Self) -> ActorState","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Retrieve the current Actor execution state.\n","sig":null,"attributes":[{"value":"/ Retrieve the current Actor execution state.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14753,"byte_end":14800,"line_start":267,"line_end":267,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14885,"byte_end":14897,"line_start":272,"line_end":272,"column_start":11,"column_end":23},"name":"AsyncContext","qualname":"::actor::AsyncContext","value":"AsyncContext<A>: ActorContext","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"decl_id":null,"docs":" Asynchronous execution context.\n","sig":null,"attributes":[{"value":"/ Asynchronous execution context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14839,"byte_end":14874,"line_start":271,"line_end":271,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15004,"byte_end":15011,"line_start":277,"line_end":277,"column_start":8,"column_end":15},"name":"address","qualname":"::actor::AsyncContext::address","value":"pub fn address(&Self) -> Addr<A>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Returns the address of the context.\n","sig":null,"attributes":[{"value":"/ Returns the address of the context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14957,"byte_end":14996,"line_start":276,"line_end":276,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15310,"byte_end":15315,"line_start":286,"line_end":286,"column_start":8,"column_end":13},"name":"spawn","qualname":"::actor::AsyncContext::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Output = (),\nActor = ()> + 'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Spawns a future into the context.","sig":null,"attributes":[{"value":"/ Spawns a future into the context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15036,"byte_end":15073,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15078,"byte_end":15081,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Returns a handle of the spawned future, which can be used for","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15086,"byte_end":15151,"line_start":281,"line_end":281,"column_start":5,"column_end":70}},{"value":"/ cancelling its execution.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15156,"byte_end":15185,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15190,"byte_end":15193,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ All futures spawned into an actor's context are cancelled","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15198,"byte_end":15259,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/ during the actor's stopping stage.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15264,"byte_end":15302,"line_start":285,"line_end":285,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15591,"byte_end":15595,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"wait","qualname":"::actor::AsyncContext::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Output = (), Actor = ()> +\n'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Spawns a future into the context, waiting for it to resolve.","sig":null,"attributes":[{"value":"/ Spawns a future into the context, waiting for it to resolve.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15426,"byte_end":15490,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15495,"byte_end":15498,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until the future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15503,"byte_end":15565,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ resolves.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15570,"byte_end":15583,"line_start":293,"line_end":293,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15779,"byte_end":15786,"line_start":299,"line_end":299,"column_start":8,"column_end":15},"name":"waiting","qualname":"::actor::AsyncContext::waiting","value":"pub fn waiting(&Self) -> bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Checks if the context is paused (waiting for future completion or stopping).\n","sig":null,"attributes":[{"value":"/ Checks if the context is paused (waiting for future completion or stopping).","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15691,"byte_end":15771,"line_start":298,"line_end":298,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15917,"byte_end":15930,"line_start":304,"line_end":304,"column_start":8,"column_end":21},"name":"cancel_future","qualname":"::actor::AsyncContext::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Cancels a spawned future.","sig":null,"attributes":[{"value":"/ Cancels a spawned future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15808,"byte_end":15837,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15842,"byte_end":15845,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The `handle` is a value returned by the `spawn` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15850,"byte_end":15909,"line_start":303,"line_end":303,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17132,"byte_end":17142,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::actor::AsyncContext::add_stream","value":"pub fn add_stream<S>(&mut Self, S) -> SpawnHandle where S: Stream + 'static,\nA: StreamHandler<S::Item>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Registers a stream with the context.","sig":null,"attributes":[{"value":"/ Registers a stream with the context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":15977,"byte_end":16017,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16022,"byte_end":16025,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This allows handling a `Stream` in a way similar to normal","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16030,"byte_end":16092,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/ actor messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16097,"byte_end":16116,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16121,"byte_end":16124,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16129,"byte_end":16140,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use std::io;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16145,"byte_end":16163,"line_start":312,"line_end":312,"column_start":5,"column_end":23}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16168,"byte_end":16194,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16199,"byte_end":16229,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16234,"byte_end":16237,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16242,"byte_end":16264,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16269,"byte_end":16296,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16301,"byte_end":16317,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16322,"byte_end":16325,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16330,"byte_end":16349,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16354,"byte_end":16357,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16362,"byte_end":16404,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16409,"byte_end":16412,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16417,"byte_end":16487,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16492,"byte_end":16521,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/         System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16526,"byte_end":16563,"line_start":326,"line_end":326,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16568,"byte_end":16577,"line_start":327,"line_end":327,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16582,"byte_end":16585,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16590,"byte_end":16647,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16652,"byte_end":16685,"line_start":330,"line_end":330,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16690,"byte_end":16699,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16704,"byte_end":16709,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16714,"byte_end":16717,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16722,"byte_end":16750,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16755,"byte_end":16791,"line_start":335,"line_end":335,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16796,"byte_end":16799,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16804,"byte_end":16859,"line_start":337,"line_end":337,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16864,"byte_end":16888,"line_start":338,"line_end":338,"column_start":5,"column_end":29}},{"value":"/        ctx.add_stream(once(async { Ping }));","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16893,"byte_end":16941,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16946,"byte_end":16954,"line_start":340,"line_end":340,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16959,"byte_end":16964,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16969,"byte_end":16972,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16977,"byte_end":16992,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/     let sys = System::new(\"example\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":16997,"byte_end":17038,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/     let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17043,"byte_end":17078,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/     sys.run();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17083,"byte_end":17101,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/  }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17106,"byte_end":17112,"line_start":347,"line_end":347,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17117,"byte_end":17124,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18372,"byte_end":18390,"line_start":396,"line_end":396,"column_start":8,"column_end":26},"name":"add_message_stream","qualname":"::actor::AsyncContext::add_message_stream","value":"pub fn add_message_stream<S>(&mut Self, S) where S: Stream + 'static,\nS::Item: Message, A: Handler<S::Item>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Registers a stream with the context, ignoring errors.","sig":null,"attributes":[{"value":"/ Registers a stream with the context, ignoring errors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17332,"byte_end":17389,"line_start":357,"line_end":357,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17394,"byte_end":17397,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This method is similar to `add_stream` but it skips stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17402,"byte_end":17464,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/ errors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17469,"byte_end":17480,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17485,"byte_end":17488,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17493,"byte_end":17504,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17509,"byte_end":17535,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17540,"byte_end":17570,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17575,"byte_end":17578,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17583,"byte_end":17605,"line_start":366,"line_end":366,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17610,"byte_end":17637,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17642,"byte_end":17658,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17663,"byte_end":17666,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17671,"byte_end":17690,"line_start":370,"line_end":370,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17695,"byte_end":17698,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ impl Handler<Ping> for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17703,"byte_end":17739,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/     type Result = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17744,"byte_end":17769,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17774,"byte_end":17777,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, msg: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17782,"byte_end":17851,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17856,"byte_end":17885,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17890,"byte_end":17927,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17932,"byte_end":17941,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17946,"byte_end":17951,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17956,"byte_end":17959,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17964,"byte_end":17992,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":17997,"byte_end":18034,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18039,"byte_end":18042,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18047,"byte_end":18103,"line_start":384,"line_end":384,"column_start":5,"column_end":61}},{"value":"/         // add messages stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18108,"byte_end":18142,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/         ctx.add_message_stream(once(async { Ping }));","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18147,"byte_end":18204,"line_start":386,"line_end":386,"column_start":5,"column_end":62}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18209,"byte_end":18218,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18223,"byte_end":18228,"line_start":388,"line_end":388,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18233,"byte_end":18236,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18241,"byte_end":18256,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/    System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18261,"byte_end":18284,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/        let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18289,"byte_end":18327,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/    });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18332,"byte_end":18342,"line_start":393,"line_end":393,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18347,"byte_end":18352,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18357,"byte_end":18364,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18931,"byte_end":18937,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"notify","qualname":"::actor::AsyncContext::notify","value":"pub fn notify<M>(&mut Self, M) where A: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self. This bypasses the mailbox capacity, and\n will always queue the message. If the actor is in the `stopped` state, an\n error will be raised.\n","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self. This bypasses the mailbox capacity, and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18735,"byte_end":18811,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18816,"byte_end":18893,"line_start":410,"line_end":410,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":18898,"byte_end":18923,"line_start":411,"line_end":411,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19627,"byte_end":19639,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"notify_later","qualname":"::actor::AsyncContext::notify_later","value":"pub fn notify_later<M>(&mut Self, M, Duration) -> SpawnHandle where\nA: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self after a specified period of time.","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self after a specified period of time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19233,"byte_end":19302,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19307,"byte_end":19310,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Returns a spawn handle which can be used for cancellation. The","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19315,"byte_end":19381,"line_start":426,"line_end":426,"column_start":5,"column_end":71}},{"value":"/ notification gets cancelled if the context's stop method gets","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19386,"byte_end":19451,"line_start":427,"line_end":427,"column_start":5,"column_end":70}},{"value":"/ called. This bypasses the mailbox capacity, and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19456,"byte_end":19507,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19512,"byte_end":19589,"line_start":429,"line_end":429,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":19594,"byte_end":19619,"line_start":430,"line_end":430,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20240,"byte_end":20249,"line_start":449,"line_end":449,"column_start":8,"column_end":17},"name":"run_later","qualname":"::actor::AsyncContext::run_later","value":"pub fn run_later<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Executes a closure after a specified period of time.","sig":null,"attributes":[{"value":"/ Executes a closure after a specified period of time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20021,"byte_end":20077,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20082,"byte_end":20085,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The closure gets passed the same actor and its","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20090,"byte_end":20140,"line_start":446,"line_end":446,"column_start":5,"column_end":55}},{"value":"/ context. Execution gets cancelled if the context's stop method","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20145,"byte_end":20211,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/ gets called.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20216,"byte_end":20232,"line_start":448,"line_end":448,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20530,"byte_end":20542,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"run_interval","qualname":"::actor::AsyncContext::run_interval","value":"pub fn run_interval<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Spawns a job to execute the given closure periodically, at a\n specified fixed interval.\n","sig":null,"attributes":[{"value":"/ Spawns a job to execute the given closure periodically, at a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20424,"byte_end":20488,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ specified fixed interval.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20493,"byte_end":20522,"line_start":457,"line_end":457,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20864,"byte_end":20875,"line_start":470,"line_end":470,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::actor::SpawnHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a spawned future.","sig":null,"attributes":[{"value":"/ A handle to a spawned future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20726,"byte_end":20759,"line_start":466,"line_end":466,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20760,"byte_end":20763,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ Can be used to cancel the future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20764,"byte_end":20801,"line_start":468,"line_end":468,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20945,"byte_end":20949,"line_start":474,"line_end":474,"column_start":12,"column_end":16},"name":"next","qualname":"<SpawnHandle>::next","value":"pub fn next(Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Gets the next handle.\n","sig":null,"attributes":[{"value":"/ Gets the next handle.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20908,"byte_end":20933,"line_start":473,"line_end":473,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":21041,"byte_end":21051,"line_start":478,"line_end":478,"column_start":12,"column_end":22},"name":"into_usize","qualname":"<SpawnHandle>::into_usize","value":"pub fn into_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21503,"byte_end":21510,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" An actor execution context.\n","sig":null,"attributes":[{"value":"/ An actor execution context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21460,"byte_end":21491,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23187,"byte_end":23200,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"with_receiver","qualname":"<Context<A>>::with_receiver","value":"pub fn with_receiver(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23166,"byte_end":23175,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23413,"byte_end":23416,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"run","qualname":"<Context<A>>::run","value":"pub fn run(Self, A) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23392,"byte_end":23401,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23580,"byte_end":23591,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"into_future","qualname":"<Context<A>>::into_future","value":"pub fn into_future(Self, A) -> ContextFut<A, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23873,"byte_end":23879,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"handle","qualname":"<Context<A>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the running future.","sig":null,"attributes":[{"value":"/ Returns a handle to the running future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23727,"byte_end":23770,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23775,"byte_end":23778,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is the handle returned by the `AsyncContext::spawn()`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23783,"byte_end":23845,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/ method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23850,"byte_end":23861,"line_start":119,"line_end":119,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24472,"byte_end":24492,"line_start":144,"line_end":144,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<Context<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the mailbox capacity.","sig":null,"attributes":[{"value":"/ Sets the mailbox capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23948,"byte_end":23978,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23983,"byte_end":23986,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The default mailbox capacity is 16 messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":23991,"byte_end":24039,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ #Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24044,"byte_end":24057,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24062,"byte_end":24069,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24074,"byte_end":24102,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24107,"byte_end":24126,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24131,"byte_end":24159,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24164,"byte_end":24201,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24206,"byte_end":24209,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24214,"byte_end":24270,"line_start":134,"line_end":134,"column_start":5,"column_end":61}},{"value":"/         ctx.set_mailbox_capacity(1);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24275,"byte_end":24315,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24320,"byte_end":24329,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24334,"byte_end":24339,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24344,"byte_end":24347,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24352,"byte_end":24369,"line_start":139,"line_end":139,"column_start":5,"column_end":22}},{"value":"/ # System::new(\"test\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24374,"byte_end":24400,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/ let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24405,"byte_end":24436,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24441,"byte_end":24448,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24453,"byte_end":24460,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24640,"byte_end":24649,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"connected","qualname":"<Context<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any addresses are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any addresses are still connected.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24574,"byte_end":24628,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":125},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24950,"byte_end":24970,"line_start":164,"line_end":164,"column_start":11,"column_end":31},"name":"ContextFutureSpawner","qualname":"::context::ContextFutureSpawner","value":"ContextFutureSpawner<A>","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" Helper trait which can spawn a future into the actor's context.\n","sig":null,"attributes":[{"value":"/ Helper trait which can spawn a future into the actor's context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24872,"byte_end":24939,"line_start":163,"line_end":163,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25086,"byte_end":25091,"line_start":170,"line_end":170,"column_start":8,"column_end":13},"name":"spawn","qualname":"::context::ContextFutureSpawner::spawn","value":"pub fn spawn(Self, &mut A::Context)","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Spawns the future into the given context.\n","sig":null,"attributes":[{"value":"/ Spawns the future into the given context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25033,"byte_end":25078,"line_start":169,"line_end":169,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25308,"byte_end":25312,"line_start":177,"line_end":177,"column_start":8,"column_end":12},"name":"wait","qualname":"::context::ContextFutureSpawner::wait","value":"pub fn wait(Self, &mut A::Context)","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Spawns the future into the given context, waiting for it to\n resolve.","sig":null,"attributes":[{"value":"/ Spawns the future into the given context, waiting for it to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25126,"byte_end":25189,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ resolve.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25194,"byte_end":25206,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25211,"byte_end":25214,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until this future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25219,"byte_end":25282,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/ resolves.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25287,"byte_end":25300,"line_start":176,"line_end":176,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":159},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26420,"byte_end":26437,"line_start":30,"line_end":30,"column_start":11,"column_end":28},"name":"AsyncContextParts","qualname":"::contextimpl::AsyncContextParts","value":"AsyncContextParts<A>: ActorContext + AsyncContext<A>","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26518,"byte_end":26523,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"parts","qualname":"::contextimpl::AsyncContextParts::parts","value":"pub fn parts(&mut Self) -> &mut ContextParts<A>","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26574,"byte_end":26586,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ContextParts","qualname":"::contextimpl::ContextParts","value":"ContextParts {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27241,"byte_end":27244,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextParts<A>>::new","value":"pub fn new(AddressSenderProducer<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new ContextParts instance\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27179,"byte_end":27188,"line_start":66,"line_end":66,"column_start":5,"column_end":14}},{"value":"/ Create new ContextParts instance","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27193,"byte_end":27229,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27781,"byte_end":27785,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"stop","qualname":"<ContextParts<A>>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Initiate stop process for actor execution","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27603,"byte_end":27612,"line_start":81,"line_end":81,"column_start":5,"column_end":14}},{"value":"/ Initiate stop process for actor execution","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27617,"byte_end":27662,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27667,"byte_end":27670,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Actor could prevent stopping by returning `false` from","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27675,"byte_end":27733,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/ `Actor::stopping()` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27738,"byte_end":27769,"line_start":85,"line_end":85,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28040,"byte_end":28049,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"terminate","qualname":"<ContextParts<A>>::terminate","value":"pub fn terminate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Terminate actor execution\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27985,"byte_end":27994,"line_start":93,"line_end":93,"column_start":5,"column_end":14}},{"value":"/ Terminate actor execution","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27999,"byte_end":28028,"line_start":94,"line_end":94,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28169,"byte_end":28174,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"state","qualname":"<ContextParts<A>>::state","value":"pub fn state(&Self) -> ActorState","parent":null,"children":[],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28118,"byte_end":28127,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ Actor execution state","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28132,"byte_end":28157,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28618,"byte_end":28625,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"waiting","qualname":"<ContextParts<A>>::waiting","value":"pub fn waiting(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is context waiting for future completion\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28548,"byte_end":28557,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ Is context waiting for future completion","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28562,"byte_end":28606,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28861,"byte_end":28872,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"curr_handle","qualname":"<ContextParts<A>>::curr_handle","value":"pub fn curr_handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Handle of the running future\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28803,"byte_end":28812,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ Handle of the running future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28817,"byte_end":28849,"line_start":123,"line_end":123,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28995,"byte_end":29000,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ContextParts<A>>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Output = (),\nActor = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28932,"byte_end":28941,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":28946,"byte_end":28983,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29498,"byte_end":29502,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"wait","qualname":"<ContextParts<A>>::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Output = (), Actor = ()> +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context and wait future completion.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29336,"byte_end":29345,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context and wait future completion.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29350,"byte_end":29414,"line_start":142,"line_end":142,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29419,"byte_end":29422,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ During wait period actor does not receive any messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29427,"byte_end":29486,"line_start":144,"line_end":144,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29720,"byte_end":29733,"line_start":154,"line_end":154,"column_start":12,"column_end":25},"name":"cancel_future","qualname":"<ContextParts<A>>::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Cancel previously scheduled future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29655,"byte_end":29664,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ Cancel previously scheduled future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29669,"byte_end":29708,"line_start":153,"line_end":153,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29856,"byte_end":29864,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ContextParts<A>>::capacity","value":"pub fn capacity(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29835,"byte_end":29844,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29948,"byte_end":29968,"line_start":165,"line_end":165,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<ContextParts<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":29927,"byte_end":29936,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30120,"byte_end":30127,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextParts<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30099,"byte_end":30108,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30515,"byte_end":30522,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"started","qualname":"<ContextParts<A>>::started","value":"pub fn started(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30494,"byte_end":30503,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30661,"byte_end":30670,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"connected","qualname":"<ContextParts<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30606,"byte_end":30635,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30640,"byte_end":30649,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30738,"byte_end":30748,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"ContextFut","qualname":"::contextimpl::ContextFut","value":"ContextFut {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31695,"byte_end":31698,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextFut<A, C>>::new","value":"pub fn new(C, A, Mailbox<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31935,"byte_end":31938,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"ctx","qualname":"<ContextFut<A, C>>::ctx","value":"pub fn ctx(&mut Self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31914,"byte_end":31923,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":32016,"byte_end":32023,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextFut<A, C>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31995,"byte_end":32004,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":32294,"byte_end":32299,"line_start":267,"line_end":267,"column_start":12,"column_end":17},"name":"alive","qualname":"<ContextFut<A, C>>::alive","value":"pub fn alive(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":32273,"byte_end":32282,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":318},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44962,"byte_end":44969,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler<M>","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Describes how to handle messages of a specific type.","sig":null,"attributes":[{"value":"/ Describes how to handle messages of a specific type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44696,"byte_end":44752,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44753,"byte_end":44756,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementing `Handler` is a general way to handle incoming","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44757,"byte_end":44819,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ messages, streams, and futures.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44820,"byte_end":44855,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44856,"byte_end":44859,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The type `M` is a message which can be handled by the actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44860,"byte_end":44924,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":44925,"byte_end":44951,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":320},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45080,"byte_end":45086,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Handler::Result","value":"type Result: MessageResponse<Self, M>;","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" The type of value that this handler will return.\n","sig":null,"attributes":[{"value":"/ The type of value that this handler will return.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45018,"byte_end":45070,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45194,"byte_end":45200,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"pub fn handle(&mut Self, M, &mut Self::Context) -> Self::Result","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" This method is called for every message received by this actor.\n","sig":null,"attributes":[{"value":"/ This method is called for every message received by this actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45119,"byte_end":45186,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":322},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45330,"byte_end":45337,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"Message","qualname":"::handler::Message","value":"Message","parent":null,"children":[{"krate":0,"index":323}],"decl_id":null,"docs":" Represent message that can be handled by an actor.\n","sig":null,"attributes":[{"value":"/ Represent message that can be handled by an actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45265,"byte_end":45319,"line_start":33,"line_end":33,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":323},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45441,"byte_end":45447,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Message::Result","value":"type Result: 'static;","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The type of value that this message will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this message will resolved with if it is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45344,"byte_end":45411,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ successful.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45416,"byte_end":45431,"line_start":36,"line_end":36,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45895,"byte_end":45908,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"MessageResult","qualname":"::handler::MessageResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A helper type that implements the `MessageResponse` trait.\n","sig":null,"attributes":[{"value":"/ A helper type that implements the `MessageResponse` trait.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45821,"byte_end":45883,"line_start":56,"line_end":56,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45921,"byte_end":45934,"line_start":57,"line_end":57,"column_start":38,"column_end":51},"name":"0","qualname":"::handler::MessageResult::0","value":"<M as handler::Message>::Result","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46013,"byte_end":46030,"line_start":60,"line_end":60,"column_start":10,"column_end":27},"name":"ResponseActFuture","qualname":"::handler::ResponseActFuture","value":"Box<ActorFuture<Output = I, Actor = I>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future for asynchronous message handling.\n","sig":null,"attributes":[{"value":"/ A specialized actor future for asynchronous message handling.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45938,"byte_end":46003,"line_start":59,"line_end":59,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":339},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46154,"byte_end":46168,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"ResponseFuture","qualname":"::handler::ResponseFuture","value":"Pin<Box<Future<Output = I>>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized future for asynchronous message handling.\n","sig":null,"attributes":[{"value":"/ A specialized future for asynchronous message handling.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46085,"byte_end":46144,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":341},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46272,"byte_end":46287,"line_start":66,"line_end":66,"column_start":11,"column_end":26},"name":"ResponseChannel","qualname":"::handler::ResponseChannel","value":"ResponseChannel<M: Message>: 'static","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" A trait that defines a message response channel.\n","sig":null,"attributes":[{"value":"/ A trait that defines a message response channel.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46209,"byte_end":46261,"line_start":65,"line_end":65,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46318,"byte_end":46329,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"is_canceled","qualname":"::handler::ResponseChannel::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46354,"byte_end":46358,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"send","qualname":"::handler::ResponseChannel::send","value":"pub fn send(Self, M::Result)","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":345},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46445,"byte_end":46460,"line_start":73,"line_end":73,"column_start":11,"column_end":26},"name":"MessageResponse","qualname":"::handler::MessageResponse","value":"MessageResponse<A: Actor, M: Message>","parent":null,"children":[{"krate":0,"index":348}],"decl_id":null,"docs":" A trait which defines message responses.\n","sig":null,"attributes":[{"value":"/ A trait which defines message responses.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46390,"byte_end":46434,"line_start":72,"line_end":72,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46492,"byte_end":46498,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::MessageResponse::handle","value":"pub fn handle<R: ResponseChannel<M>>(Self, &mut A::Context, Option<R>)","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49448,"byte_end":49456,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Response","qualname":"::handler::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":417}],"decl_id":null,"docs":" Helper type for representing different type of message responses\n","sig":null,"attributes":[{"value":"/ Helper type for representing different type of message responses","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49368,"byte_end":49436,"line_start":196,"line_end":196,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49972,"byte_end":49975,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"fut","qualname":"<Response<I, E>>::fut","value":"pub fn fut<T>(T) -> Self where T: Future<Output = Result<I, E>> + Unpin +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49923,"byte_end":49960,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":50198,"byte_end":50203,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"reply","qualname":"<Response<I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":50163,"byte_end":50186,"line_start":223,"line_end":223,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51211,"byte_end":51224,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"ActorResponse","qualname":"::handler::ActorResponse","value":"ActorResponse {  }","parent":null,"children":[{"krate":0,"index":450}],"decl_id":null,"docs":" A helper type for representing different types of message responses.\n","sig":null,"attributes":[{"value":"/ A helper type for representing different types of message responses.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51127,"byte_end":51199,"line_start":260,"line_end":260,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51812,"byte_end":51817,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"reply","qualname":"<ActorResponse<A, I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51777,"byte_end":51800,"line_start":279,"line_end":279,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51986,"byte_end":51993,"line_start":287,"line_end":287,"column_start":12,"column_end":19},"name":"async","qualname":"<ActorResponse<A, I, E>>::async","value":"pub fn r#async<T>(T) -> Self where T: ActorFuture<Output = Result<I, E>, Actor\n= Result<I, E>> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51937,"byte_end":51974,"line_start":286,"line_end":286,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":489},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54503,"byte_end":54516,"line_start":23,"line_end":23,"column_start":11,"column_end":24},"name":"StreamHandler","qualname":"::stream::StreamHandler","value":"StreamHandler<I>","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" Stream handler","sig":null,"attributes":[{"value":"/ Stream handler","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":53956,"byte_end":53974,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":53975,"byte_end":53978,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is helper trait that allows to handle `Stream` in","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":53979,"byte_end":54037,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ a similar way as normal actor messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54038,"byte_end":54081,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ When stream resolves to a next item, `handle()` method of this trait","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54082,"byte_end":54154,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ get called. If stream produces error, `error()` method get called.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54155,"byte_end":54225,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ Depends on result of the `error()` method, actor could continue to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54226,"byte_end":54296,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ process stream items or stop stream processing.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54297,"byte_end":54348,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/ When stream completes, `finished()` method get called. By default","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54349,"byte_end":54418,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ `finished()` method stops actor execution.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54419,"byte_end":54465,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54466,"byte_end":54492,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54618,"byte_end":54624,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"handle","qualname":"::stream::StreamHandler::handle","value":"pub fn handle(&mut Self, I, &mut Self::Context)","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" Method is called for every message received by this Actor\n","sig":null,"attributes":[{"value":"/ Method is called for every message received by this Actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54549,"byte_end":54610,"line_start":27,"line_end":27,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54739,"byte_end":54746,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"started","qualname":"::stream::StreamHandler::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" Method is called when stream get polled first time.\n","sig":null,"attributes":[{"value":"/ Method is called when stream get polled first time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54676,"byte_end":54731,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54903,"byte_end":54911,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"finished","qualname":"::stream::StreamHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" Method is called when stream finishes.","sig":null,"attributes":[{"value":"/ Method is called when stream finishes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54791,"byte_end":54833,"line_start":33,"line_end":33,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54838,"byte_end":54841,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor execution.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54846,"byte_end":54895,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56108,"byte_end":56118,"line_start":80,"line_end":80,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::stream::StreamHandler::add_stream","value":"pub fn add_stream<S>(S, &mut Self::Context) -> SpawnHandle where\nSelf::Context: AsyncContext<Self>, S: Stream<Item = I> + 'static, I: 'static","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" This method register stream to an actor context and\n allows to handle `Stream` in similar way as normal actor messages.","sig":null,"attributes":[{"value":"/ This method register stream to an actor context and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":54980,"byte_end":55035,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ allows to handle `Stream` in similar way as normal actor messages.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55040,"byte_end":55110,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55115,"byte_end":55118,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55123,"byte_end":55134,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55139,"byte_end":55165,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/ use futures::stream::once;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55170,"byte_end":55200,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55205,"byte_end":55208,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55213,"byte_end":55235,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55240,"byte_end":55267,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55272,"byte_end":55288,"line_start":49,"line_end":49,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55293,"byte_end":55296,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55301,"byte_end":55320,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55325,"byte_end":55328,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55333,"byte_end":55375,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55380,"byte_end":55383,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55388,"byte_end":55458,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55463,"byte_end":55492,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/         System::current().stop()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55497,"byte_end":55533,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55538,"byte_end":55547,"line_start":58,"line_end":58,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55552,"byte_end":55555,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55560,"byte_end":55617,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55622,"byte_end":55655,"line_start":61,"line_end":61,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55660,"byte_end":55669,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55674,"byte_end":55679,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55684,"byte_end":55687,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55692,"byte_end":55720,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55725,"byte_end":55761,"line_start":66,"line_end":66,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55766,"byte_end":55769,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55774,"byte_end":55829,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55834,"byte_end":55858,"line_start":69,"line_end":69,"column_start":5,"column_end":29}},{"value":"/        Self::add_stream(once(async { Ping }), ctx);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55863,"byte_end":55918,"line_start":70,"line_end":70,"column_start":5,"column_end":60}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55923,"byte_end":55931,"line_start":71,"line_end":71,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55936,"byte_end":55941,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55946,"byte_end":55949,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55954,"byte_end":55969,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/     let sys = System::new(\"example\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":55974,"byte_end":56015,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/     let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56020,"byte_end":56055,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/     sys.run();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56060,"byte_end":56078,"line_start":77,"line_end":77,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56083,"byte_end":56088,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56093,"byte_end":56100,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59768,"byte_end":59778,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"Supervisor","qualname":"::supervisor::Supervisor","value":"Supervisor {  }","parent":null,"children":[{"krate":0,"index":2392}],"decl_id":null,"docs":" Actor supervisor","sig":null,"attributes":[{"value":"/ Actor supervisor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58217,"byte_end":58237,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58238,"byte_end":58241,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Supervisor manages incoming message for actor. In case of actor failure,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58242,"byte_end":58318,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ supervisor creates new execution context and restarts actor lifecycle.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58319,"byte_end":58393,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ Supervisor does not re-create actor, it just calls `restarting()`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58394,"byte_end":58463,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58464,"byte_end":58475,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58476,"byte_end":58479,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Supervisor has same lifecycle as actor. In situation when all addresses to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58480,"byte_end":58558,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ supervisor get dropped and actor does not execute anything, supervisor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58559,"byte_end":58633,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ terminates.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58634,"byte_end":58649,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58650,"byte_end":58653,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Supervisor` can not guarantee that actor successfully process incoming","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58654,"byte_end":58729,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ message. If actor fails during message processing, this message can not be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58730,"byte_end":58808,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ recovered. Sender would receive `Err(Cancelled)` error in this situation.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58809,"byte_end":58886,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58887,"byte_end":58890,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58891,"byte_end":58905,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58906,"byte_end":58909,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58910,"byte_end":58921,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58922,"byte_end":58950,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58951,"byte_end":58973,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":58974,"byte_end":59001,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ struct Die;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59002,"byte_end":59017,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59018,"byte_end":59021,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59022,"byte_end":59041,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59042,"byte_end":59045,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59046,"byte_end":59074,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59075,"byte_end":59112,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59113,"byte_end":59118,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59119,"byte_end":59122,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // To use actor with supervisor actor has to implement `Supervised` trait","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59123,"byte_end":59200,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ impl actix::Supervised for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59201,"byte_end":59241,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/     fn restarting(&mut self, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59242,"byte_end":59304,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/         println!(\"restarting\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59305,"byte_end":59340,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59341,"byte_end":59350,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59351,"byte_end":59356,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59357,"byte_end":59360,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Die> for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59361,"byte_end":59396,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/     type Result = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59397,"byte_end":59422,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59423,"byte_end":59426,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Die, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59427,"byte_end":59493,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/         ctx.stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59494,"byte_end":59517,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59518,"byte_end":59555,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59556,"byte_end":59565,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59566,"byte_end":59571,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59572,"byte_end":59575,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59576,"byte_end":59591,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59592,"byte_end":59616,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59617,"byte_end":59678,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59679,"byte_end":59682,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/         addr.do_send(Die);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59683,"byte_end":59713,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59714,"byte_end":59725,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59726,"byte_end":59731,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59732,"byte_end":59739,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60680,"byte_end":60685,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"start","qualname":"<Supervisor<A>>::start","value":"pub fn start<F>(F) -> Addr<A> where F: FnOnce(&mut A::Context) -> A + 'static,\nA: Actor<Context = Context<A>>","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in current tokio runtime.","sig":null,"attributes":[{"value":"/ Start new supervised actor in current tokio runtime.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59961,"byte_end":60017,"line_start":78,"line_end":78,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60022,"byte_end":60025,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Type of returned address depends on variable type. For example to get","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60030,"byte_end":60103,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ `Addr<Syn, _>` of newly created actor, use explicitly `Addr<Syn,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60108,"byte_end":60176,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ _>` type as type of a variable.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60181,"byte_end":60216,"line_start":82,"line_end":82,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60221,"byte_end":60224,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60229,"byte_end":60240,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60245,"byte_end":60273,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60278,"byte_end":60297,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60302,"byte_end":60305,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60310,"byte_end":60338,"line_start":88,"line_end":88,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60343,"byte_end":60380,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60385,"byte_end":60390,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60395,"byte_end":60398,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # impl actix::Supervised for MyActor {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60403,"byte_end":60446,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60451,"byte_end":60468,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ #    System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60473,"byte_end":60498,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/ // Get `Addr` of a MyActor actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60503,"byte_end":60539,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/ let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60544,"byte_end":60597,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ #         System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60602,"byte_end":60641,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/ # });}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60646,"byte_end":60656,"line_start":98,"line_end":98,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":60661,"byte_end":60668,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":61137,"byte_end":61153,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"start_in_arbiter","qualname":"<Supervisor<A>>::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&Arbiter, F) -> Addr<A> where A: Actor<Context =\nContext<A>>, F: FnOnce(&mut Context<A>) -> A + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new supervised actor in arbiter's thread.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":61074,"byte_end":61125,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":581},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":72784,"byte_end":72790,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"Sender","qualname":"::address::channel::Sender","value":"Sender<M>: Send","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":72859,"byte_end":72866,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"do_send","qualname":"::address::channel::Sender::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":72919,"byte_end":72927,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"try_send","qualname":"::address::channel::Sender::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":72980,"byte_end":72984,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"send","qualname":"::address::channel::Sender::send","value":"pub fn send(&Self, M) -> Result<Receiver<M::Result>, SendError<M>>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73054,"byte_end":73059,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"boxed","qualname":"::address::channel::Sender::boxed","value":"pub fn boxed(&Self) -> Box<Sender<M>>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73098,"byte_end":73102,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"hash","qualname":"::address::channel::Sender::hash","value":"pub fn hash(&Self) -> usize","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73128,"byte_end":73137,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"connected","qualname":"::address::channel::Sender::connected","value":"pub fn connected(&Self) -> bool","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73285,"byte_end":73298,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"AddressSender","qualname":"::address::channel::AddressSender","value":"AddressSender {  }","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73157,"byte_end":73224,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73225,"byte_end":73228,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73229,"byte_end":73273,"line_start":42,"line_end":42,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74198,"byte_end":74215,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"WeakAddressSender","qualname":"::address::channel::WeakAddressSender","value":"WeakAddressSender {  }","parent":null,"children":[{"krate":0,"index":599}],"decl_id":null,"docs":" A weakly referenced version of `AddressSender`.","sig":null,"attributes":[{"value":"/ A weakly referenced version of `AddressSender`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74069,"byte_end":74120,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74121,"byte_end":74124,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is created by the `AddressSender::downgrade` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74125,"byte_end":74186,"line_start":68,"line_end":68,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74741,"byte_end":74756,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"AddressReceiver","qualname":"::address::channel::AddressReceiver","value":"AddressReceiver {  }","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74479,"byte_end":74550,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74551,"byte_end":74554,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74555,"byte_end":74635,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74636,"byte_end":74707,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74708,"byte_end":74729,"line_start":85,"line_end":85,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74855,"byte_end":74876,"line_start":91,"line_end":91,"column_start":12,"column_end":33},"name":"AddressSenderProducer","qualname":"::address::channel::AddressSenderProducer","value":"AddressSenderProducer {  }","parent":null,"children":[{"krate":0,"index":609}],"decl_id":null,"docs":" Generate `AddressSenders` for the channel\n","sig":null,"attributes":[{"value":"/ Generate `AddressSenders` for the channel","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74798,"byte_end":74843,"line_start":90,"line_end":90,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":630},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77831,"byte_end":77838,"line_start":192,"line_end":192,"column_start":8,"column_end":15},"name":"channel","qualname":"::address::channel::channel","value":"pub fn channel<A: Actor>(usize) -> (AddressSender<A>, AddressReceiver<A>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77058,"byte_end":77132,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77133,"byte_end":77154,"line_start":180,"line_end":180,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77155,"byte_end":77158,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77159,"byte_end":77236,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77237,"byte_end":77311,"line_start":183,"line_end":183,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77312,"byte_end":77388,"line_start":184,"line_end":184,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77389,"byte_end":77461,"line_start":185,"line_end":185,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77462,"byte_end":77540,"line_start":186,"line_end":186,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77541,"byte_end":77620,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77621,"byte_end":77669,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77670,"byte_end":77673,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77674,"byte_end":77753,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":77754,"byte_end":77823,"line_start":191,"line_end":191,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":78813,"byte_end":78822,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSender<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the channel still open\n","sig":null,"attributes":[{"value":"/ Is the channel still open","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":78772,"byte_end":78801,"line_start":226,"line_end":226,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":79109,"byte_end":79113,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"send","qualname":"<AddressSender<A>>::send","value":"pub fn send<M>(&Self, M) -> Result<Receiver<M::Result>, SendError<M>> where\nA: Handler<M>, A::Context: ToEnvelope<A, M>, M::Result: Send, M: Message +\nSend","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` with blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` with blocking.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":78964,"byte_end":79029,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":79034,"byte_end":79037,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function must be called from inside of a task.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":79042,"byte_end":79097,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":80505,"byte_end":80513,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"try_send","qualname":"<AddressSender<A>>::try_send","value":"pub fn try_send<M>(&Self, M, bool) -> Result<(), SendError<M>> where\nA: Handler<M>, <A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send,\nM: Message + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` without blocking.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` without blocking.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":80425,"byte_end":80493,"line_start":272,"line_end":272,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":81396,"byte_end":81403,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"do_send","qualname":"<AddressSender<A>>::do_send","value":"pub fn do_send<M>(&Self, M) -> Result<(), SendError<M>> where A: Handler<M>,\n<A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send, M: Message + Send","parent":null,"children":[],"decl_id":null,"docs":" Send a message on this `Sender<A>` without blocking.","sig":null,"attributes":[{"value":"/ Send a message on this `Sender<A>` without blocking.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":81270,"byte_end":81326,"line_start":298,"line_end":298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":81331,"byte_end":81334,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function does not park current task.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":81339,"byte_end":81384,"line_start":300,"line_end":300,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":82152,"byte_end":82161,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<AddressSender<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade to `WeakAddressSender` which can later be upgraded\n","sig":null,"attributes":[{"value":"/ Downgrade to `WeakAddressSender` which can later be upgraded","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":82076,"byte_end":82140,"line_start":320,"line_end":320,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88981,"byte_end":88988,"line_start":540,"line_end":540,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddressSender<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<AddressSender<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88814,"byte_end":88899,"line_start":537,"line_end":537,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88904,"byte_end":88907,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the actor has since been dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88912,"byte_end":88969,"line_start":539,"line_end":539,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89323,"byte_end":89332,"line_start":555,"line_end":555,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSenderProducer<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89282,"byte_end":89311,"line_start":554,"line_end":554,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89446,"byte_end":89454,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressSenderProducer<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get channel capacity\n","sig":null,"attributes":[{"value":"/ Get channel capacity","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89410,"byte_end":89434,"line_start":559,"line_end":559,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89665,"byte_end":89677,"line_start":568,"line_end":568,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressSenderProducer<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set channel capacity","sig":null,"attributes":[{"value":"/ Set channel capacity","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89524,"byte_end":89548,"line_start":564,"line_end":564,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89553,"byte_end":89556,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if new capacity is greater","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89561,"byte_end":89632,"line_start":566,"line_end":566,"column_start":5,"column_end":76}},{"value":"/ than current","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89637,"byte_end":89653,"line_start":567,"line_end":567,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":90465,"byte_end":90471,"line_start":593,"line_end":593,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressSenderProducer<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Get sender side of the channel\n","sig":null,"attributes":[{"value":"/ Get sender side of the channel","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":90419,"byte_end":90453,"line_start":592,"line_end":592,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91586,"byte_end":91595,"line_start":628,"line_end":628,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressReceiver<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any senders are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any senders are still connected.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91522,"byte_end":91574,"line_start":627,"line_end":627,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91718,"byte_end":91726,"line_start":633,"line_end":633,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressReceiver<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.\n","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91673,"byte_end":91706,"line_start":632,"line_end":632,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91956,"byte_end":91968,"line_start":641,"line_end":641,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressReceiver<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the channel capacity.","sig":null,"attributes":[{"value":"/ Sets the channel capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91796,"byte_end":91826,"line_start":637,"line_end":637,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91831,"byte_end":91834,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if the new capacity","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91839,"byte_end":91903,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ is greater than the current one.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91908,"byte_end":91944,"line_start":640,"line_end":640,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":92765,"byte_end":92771,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressReceiver<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sender side of the channel.\n","sig":null,"attributes":[{"value":"/ Returns the sender side of the channel.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":92710,"byte_end":92753,"line_start":665,"line_end":665,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":93787,"byte_end":93802,"line_start":694,"line_end":694,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<AddressReceiver<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates the sender producer.\n","sig":null,"attributes":[{"value":"/ Creates the sender producer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":93743,"byte_end":93775,"line_start":693,"line_end":693,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102712,"byte_end":102722,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"ToEnvelope","qualname":"::address::envelope::ToEnvelope","value":"ToEnvelope<A, M: Message>","parent":null,"children":[{"krate":0,"index":722}],"decl_id":null,"docs":" Converter trait, packs message into a suitable envelope.\n","sig":null,"attributes":[{"value":"/ Converter trait, packs message into a suitable envelope.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102641,"byte_end":102701,"line_start":9,"line_end":9,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102858,"byte_end":102862,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"pack","qualname":"::address::envelope::ToEnvelope::pack","value":"pub fn pack(M, Option<Sender<M::Result>>) -> Envelope<A>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Pack message into suitable envelope\n","sig":null,"attributes":[{"value":"/ Pack message into suitable envelope","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102811,"byte_end":102850,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102931,"byte_end":102944,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"EnvelopeProxy","qualname":"::address::envelope::EnvelopeProxy","value":"EnvelopeProxy","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":724},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102956,"byte_end":102961,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Actor","qualname":"::address::envelope::EnvelopeProxy::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103030,"byte_end":103036,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"handle","qualname":"::address::envelope::EnvelopeProxy::handle","value":"pub fn handle(&mut Self, &mut Self::Actor,\n              &mut <Self::Actor as Actor>::Context)","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" handle message within new actor and context\n","sig":null,"attributes":[{"value":"/ handle message within new actor and context","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":102975,"byte_end":103022,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103422,"byte_end":103430,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Envelope","qualname":"::address::envelope::Envelope","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103525,"byte_end":103528,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Envelope<A>>::new","value":"pub fn new<M>(M, Option<Sender<M::Result>>) -> Self where A: Handler<M>,\nA::Context: AsyncContext<A>, M: Message + Send + 'static, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103867,"byte_end":103877,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"with_proxy","qualname":"<Envelope<A>>::with_proxy","value":"pub fn with_proxy(Box<EnvelopeProxy<Actor = A> + Send>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105592,"byte_end":105599,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Request","qualname":"::address::message::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"decl_id":null,"docs":" A `Future` which represents an asynchronous message sending\n process.\n","sig":null,"attributes":[{"value":"/ A `Future` which represents an asynchronous message sending","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105420,"byte_end":105483,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ process.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105484,"byte_end":105496,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"must_use =\n  \"You have to wait on request otherwise the Message wont be delivered\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105497,"byte_end":105580,"line_start":17,"line_end":17,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":106341,"byte_end":106348,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request<A, M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":106297,"byte_end":106329,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108264,"byte_end":108280,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"RecipientRequest","qualname":"::address::message::RecipientRequest","value":"RecipientRequest {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" A `Future` which represents an asynchronous message sending process.\n","sig":null,"attributes":[{"value":"/ A `Future` which represents an asynchronous message sending process.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108132,"byte_end":108204,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108205,"byte_end":108252,"line_start":113,"line_end":113,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108567,"byte_end":108570,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<RecipientRequest<M>>::new","value":"pub fn new(Option<oneshot::Receiver<M::Result>>, Option<(Box<Sender<M>>, M)>)\n-> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108853,"byte_end":108860,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RecipientRequest<M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108809,"byte_end":108841,"line_start":140,"line_end":140,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62787,"byte_end":62791,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Full","qualname":"::address::SendError::Full","value":"SendError::Full(T)","parent":{"krate":0,"index":859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":864},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62800,"byte_end":62806,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::SendError::Closed","value":"SendError::Closed(T)","parent":{"krate":0,"index":859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":859},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62768,"byte_end":62777,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"SendError","qualname":"::address::SendError","value":"pub enum SendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62971,"byte_end":62977,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::MailboxError::Closed","value":"MailboxError::Closed","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"display(fmt = \"Mailbox has closed\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62928,"byte_end":62966,"line_start":28,"line_end":28,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63034,"byte_end":63041,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::address::MailboxError::Timeout","value":"MailboxError::Timeout","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"display(fmt = \"Message delivery timed out\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62983,"byte_end":63029,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62909,"byte_end":62921,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MailboxError","qualname":"::address::MailboxError","value":"pub enum MailboxError {\n\n    #[display(fmt = \"Mailbox has closed\")]\n    Closed,\n\n    #[display(fmt = \"Message delivery timed out\")]\n    Timeout,\n}","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2431}],"decl_id":null,"docs":" The errors that can occur during the message delivery process.\n","sig":null,"attributes":[{"value":"/ The errors that can occur during the message delivery process.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":62833,"byte_end":62899,"line_start":26,"line_end":26,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63119,"byte_end":63129,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64101,"byte_end":64105,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"Addr","qualname":"::address::Addr","value":"Addr {  }","parent":null,"children":[{"krate":0,"index":2437}],"decl_id":null,"docs":" The address of an actor.\n","sig":null,"attributes":[{"value":"/ The address of an actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64044,"byte_end":64072,"line_start":70,"line_end":70,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64183,"byte_end":64186,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Addr<A>>::new","value":"pub fn new(AddressSender<A>) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64324,"byte_end":64333,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"connected","qualname":"<Addr<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the actor is still alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64253,"byte_end":64262,"line_start":81,"line_end":81,"column_start":5,"column_end":14}},{"value":"/ Returns whether the actor is still alive.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64267,"byte_end":64312,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64642,"byte_end":64649,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Addr<A>>::do_send","value":"pub fn do_send<M>(&Self, M) where M: Message + Send, M::Result: Send,\nA: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message unconditionally, ignoring any potential errors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64390,"byte_end":64399,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"/ Sends a message unconditionally, ignoring any potential errors.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64404,"byte_end":64471,"line_start":88,"line_end":88,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64476,"byte_end":64479,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The message is always queued, even if the mailbox for the receiver is full.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64484,"byte_end":64563,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ If the mailbox is closed, the message is silently dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64568,"byte_end":64630,"line_start":91,"line_end":91,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65030,"byte_end":65038,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Addr<A>>::try_send","value":"pub fn try_send<M>(&Self, M) -> Result<(), SendError<M>> where M: Message +\nSend + 'static, M::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Tries to send a message.","sig":null,"attributes":[{"value":"/ Tries to send a message.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64846,"byte_end":64874,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64879,"byte_end":64882,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method fails if actor's mailbox is full or closed. This","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64887,"byte_end":64951,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ method registers the current task in the receiver's queue.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64956,"byte_end":65018,"line_start":105,"line_end":105,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65511,"byte_end":65515,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"send","qualname":"<Addr<A>>::send","value":"pub fn send<M>(&Self, M) -> Request<A, M> where M: Message + Send,\nM::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends an asynchronous message and waits for a response.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65271,"byte_end":65280,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ Sends an asynchronous message and waits for a response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65285,"byte_end":65344,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65349,"byte_end":65352,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65357,"byte_end":65418,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ returned `Future` object gets dropped, the message is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65423,"byte_end":65480,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"/ cancelled.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65485,"byte_end":65499,"line_start":121,"line_end":121,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66044,"byte_end":66053,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"recipient","qualname":"<Addr<A>>::recipient","value":"pub fn recipient<M: 'static>(Self) -> Recipient<M> where A: Handler<M>,\nA::Context: ToEnvelope<A, M>, M: Message + Send, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Recipient` for a specific message type.\n","sig":null,"attributes":[{"value":"/ Returns the `Recipient` for a specific message type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":65976,"byte_end":66032,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66296,"byte_end":66305,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Addr<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddr<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a downgraded `WeakAddr`.\n","sig":null,"attributes":[{"value":"/ Returns a downgraded `WeakAddr`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66248,"byte_end":66284,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66888,"byte_end":66896,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"WeakAddr","qualname":"::address::WeakAddr","value":"WeakAddr {  }","parent":null,"children":[{"krate":0,"index":2443}],"decl_id":null,"docs":" A weakly referenced counterpart to `Addr<A>`.\n","sig":null,"attributes":[{"value":"/ A weakly referenced counterpart to `Addr<A>`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66810,"byte_end":66859,"line_start":179,"line_end":179,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67172,"byte_end":67179,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddr<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66976,"byte_end":67042,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67047,"byte_end":67050,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the actor has since been dropped or the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67055,"byte_end":67116,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/ underlying address is disconnected.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67121,"byte_end":67160,"line_start":189,"line_end":189,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67716,"byte_end":67725,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"Recipient","qualname":"::address::Recipient","value":"Recipient {  }","parent":null,"children":[{"krate":0,"index":911}],"decl_id":null,"docs":" The `Recipient` type allows to send one specific message to an\n actor.","sig":null,"attributes":[{"value":"/ The `Recipient` type allows to send one specific message to an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67472,"byte_end":67538,"line_start":204,"line_end":204,"column_start":1,"column_end":67}},{"value":"/ actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67539,"byte_end":67549,"line_start":205,"line_end":205,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67550,"byte_end":67553,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ You can get a recipient using the `Addr::recipient()` method. It","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67554,"byte_end":67622,"line_start":207,"line_end":207,"column_start":1,"column_end":69}},{"value":"/ is possible to use the `Clone::clone()` method to get a cloned","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67623,"byte_end":67689,"line_start":208,"line_end":208,"column_start":1,"column_end":67}},{"value":"/ recipient.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67690,"byte_end":67704,"line_start":209,"line_end":209,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68136,"byte_end":68143,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Recipient<M>>::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message.","sig":null,"attributes":[{"value":"/ Sends a message.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68027,"byte_end":68047,"line_start":228,"line_end":228,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68052,"byte_end":68055,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Deliver the message even if the recipient's mailbox is full.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68060,"byte_end":68124,"line_start":230,"line_end":230,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68427,"byte_end":68435,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Recipient<M>>::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message.","sig":null,"attributes":[{"value":"/ Attempts to send a message.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68229,"byte_end":68260,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68265,"byte_end":68268,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method fails if the actor's mailbox is full or","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68273,"byte_end":68328,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"/ closed. This method registers the current task in the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68333,"byte_end":68390,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/ receivers queue.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68395,"byte_end":68415,"line_start":239,"line_end":239,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68749,"byte_end":68753,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"send","qualname":"<Recipient<M>>::send","value":"pub fn send(&Self, M) -> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message and asynchronously wait for a response.","sig":null,"attributes":[{"value":"/ Sends a message and asynchronously wait for a response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68522,"byte_end":68581,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68586,"byte_end":68589,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68594,"byte_end":68655,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ returned `Request` object gets dropped, the message is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68660,"byte_end":68718,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/ cancelled.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":68723,"byte_end":68737,"line_start":248,"line_end":248,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69124,"byte_end":69133,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"connected","qualname":"<Recipient<M>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":116726,"byte_end":116733,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::mailbox::Mailbox","value":"Mailbox {  }","parent":null,"children":[{"krate":0,"index":956}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117413,"byte_end":117416,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Mailbox<A>>::new","value":"pub fn new(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117392,"byte_end":117401,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117493,"byte_end":117501,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Mailbox<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117567,"byte_end":117579,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<Mailbox<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117674,"byte_end":117683,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"connected","qualname":"<Mailbox<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117653,"byte_end":117662,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117749,"byte_end":117756,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"address","qualname":"<Mailbox<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117833,"byte_end":117848,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<Mailbox<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117940,"byte_end":117944,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"poll","qualname":"<Mailbox<A>>::poll","value":"pub fn poll(&mut Self, &mut A, &mut A::Context, &mut task::Context)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"actors","qualname":"::actors","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":1003}],"decl_id":null,"docs":" Helper actors\n","sig":null,"attributes":[{"value":"/ Helper actors","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","byte_start":119002,"byte_end":119019,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":973},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocker","qualname":"::actors::mocker","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":3550},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998}],"decl_id":null,"docs":" Mocking utility actor.","sig":null,"attributes":[{"value":"/ Mocking utility actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119086,"byte_end":119112,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119113,"byte_end":119116,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This actor wraps any actor, and replaces instances of that actor with","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119117,"byte_end":119190,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ mocker actor, which is able to accept all messages which the actor can","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119191,"byte_end":119265,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ receive.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119266,"byte_end":119278,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119279,"byte_end":119282,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Mocking is intended to be achieved by using a pattern similar to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119283,"byte_end":119351,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119352,"byte_end":119370,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ #[cfg(not(test))]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119371,"byte_end":119392,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ type DBClientAct = DBClientActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119393,"byte_end":119430,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/ #[cfg(test)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119431,"byte_end":119447,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ type DBClientAct = Mocker<DBClientActor>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119448,"byte_end":119493,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119494,"byte_end":119501,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ Then, the actor should be used as a system service (or arbiter service, but","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119502,"byte_end":119581,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ take care that all the places which will use the mocked actor are on the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119582,"byte_end":119658,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ same arbiter). Thus, in a test, it will retrieve the mocker from the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119659,"byte_end":119731,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ registry instead of the actual actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119732,"byte_end":119773,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119774,"byte_end":119777,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To set the mock function in the actor, the `init_actor` function","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119778,"byte_end":119846,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ is used, which allows the state of an actor to be set when it is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119847,"byte_end":119915,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ started as an arbiter or system service. A closure which takes","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119916,"byte_end":119982,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ `Box<Any>` is evaluated for every message, and must return","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":119983,"byte_end":120045,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ `Box<Any>`, specifically the return type for the message type","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120046,"byte_end":120111,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ send.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120112,"byte_end":120121,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120122,"byte_end":120125,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See the mock example to see how it can be used.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120126,"byte_end":120177,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120485,"byte_end":120491,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Mocker","qualname":"::actors::mocker::Mocker","value":"Mocker {  }","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"decl_id":null,"docs":" This actor is able to wrap another actor and accept all the messages the\n wrapped actor can, passing it to a closure which can mock the response of\n the actor.\n","sig":null,"attributes":[{"value":"/ This actor is able to wrap another actor and accept all the messages the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120304,"byte_end":120380,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ wrapped actor can, passing it to a closure which can mock the response of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120381,"byte_end":120458,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120459,"byte_end":120473,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120673,"byte_end":120677,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"mock","qualname":"<Mocker<T>>::mock","value":"pub fn mock(Box<FnMut(Box<Any>, &mut Context<Mocker<T>>) -> Box<Any>>)\n-> Mocker<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resolver","qualname":"::actors::resolver","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":2447},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2450},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":2459},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2463},{"krate":0,"index":1035},{"krate":0,"index":1041},{"krate":0,"index":2472},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2475},{"krate":0,"index":1043},{"krate":0,"index":2484},{"krate":0,"index":2498},{"krate":0,"index":2496},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1078},{"krate":0,"index":1084},{"krate":0,"index":1089},{"krate":0,"index":1093},{"krate":0,"index":1096}],"decl_id":null,"docs":" DNS resolver and connector utility actor","sig":null,"attributes":[{"value":"cfg(feature = \"resolver\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","byte_start":119038,"byte_end":119066,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/ DNS resolver and connector utility actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121819,"byte_end":121863,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121864,"byte_end":121867,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121868,"byte_end":121882,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121883,"byte_end":121886,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121887,"byte_end":121898,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ #![recursion_limit=\"128\"]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121899,"byte_end":121928,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/ use futures::{future, FutureExt};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121929,"byte_end":121966,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121967,"byte_end":121993,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/ use actix::actors::resolver;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":121994,"byte_end":122026,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122027,"byte_end":122030,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ #[actix_rt::main]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122031,"byte_end":122052,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ async fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122053,"byte_end":122074,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/         actix_rt::spawn(async {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122075,"byte_end":122110,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/             let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122111,"byte_end":122178,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122179,"byte_end":122182,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/             let addrs = resolver.send(","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122183,"byte_end":122225,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/                  resolver::Connect::host(\"localhost\")).await;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122226,"byte_end":122291,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122292,"byte_end":122295,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/             println!(\"RESULT: {:?}\", addrs);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122296,"byte_end":122344,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/             System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122345,"byte_end":122386,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/        });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122387,"byte_end":122401,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122402,"byte_end":122405,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/         actix_rt::spawn(async {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122406,"byte_end":122441,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/             let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122442,"byte_end":122509,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122510,"byte_end":122513,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/             let stream = resolver.send(","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122514,"byte_end":122557,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/                  resolver::Connect::host_and_port(\"localhost\", 5000)).await;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122558,"byte_end":122638,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122639,"byte_end":122642,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/             println!(\"RESULT: {:?}\", stream);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122643,"byte_end":122692,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/        });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122693,"byte_end":122707,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122708,"byte_end":122713,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":122714,"byte_end":122721,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123319,"byte_end":123328,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Connector","qualname":"::actors::resolver::Connector","value":"Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `Resolver` instead\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123239,"byte_end":123309,"line_start":54,"line_end":54,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123427,"byte_end":123441,"line_start":58,"line_end":58,"column_start":10,"column_end":24},"name":"ConnectorError","qualname":"::actors::resolver::ConnectorError","value":"ResolverError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `ResolverError` instead\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123342,"byte_end":123417,"line_start":57,"line_end":57,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123503,"byte_end":123510,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"Resolve","qualname":"::actors::resolver::Resolve","value":"Resolve { name, port }","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123521,"byte_end":123525,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Resolve::name","value":"std::string::String","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123543,"byte_end":123547,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Resolve::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123591,"byte_end":123595,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"host","qualname":"<Resolve>::host","value":"pub fn host<T: AsRef<str>>(T) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123747,"byte_end":123760,"line_start":74,"line_end":74,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Resolve>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124056,"byte_end":124063,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"Connect","qualname":"::actors::resolver::Connect","value":"Connect { name, port, timeout }","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124074,"byte_end":124078,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Connect::name","value":"std::string::String","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124096,"byte_end":124100,"line_start":89,"line_end":89,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Connect::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124123,"byte_end":124130,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"name":"timeout","qualname":"::actors::resolver::Connect::timeout","value":"std::time::Duration","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124171,"byte_end":124175,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"host","qualname":"<Connect>::host","value":"pub fn host<T: AsRef<str>>(T) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124372,"byte_end":124385,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Connect>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124684,"byte_end":124691,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Connect>::timeout","value":"pub fn timeout(Self, Duration) -> Connect","parent":null,"children":[],"decl_id":null,"docs":" Set connect timeout","sig":null,"attributes":[{"value":"/ Set connect timeout","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124592,"byte_end":124615,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124620,"byte_end":124623,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ By default timeout is set to a 1 second.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124628,"byte_end":124672,"line_start":112,"line_end":112,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124913,"byte_end":124924,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"ConnectAddr","qualname":"::actors::resolver::ConnectAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124925,"byte_end":124939,"line_start":124,"line_end":124,"column_start":24,"column_end":38},"name":"0","qualname":"::actors::resolver::ConnectAddr::0","value":"std::net::SocketAddr","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125181,"byte_end":125189,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"Resolver","qualname":"::actors::resolver::ResolverError::Resolver","value":"ResolverError::Resolver(String)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Failed to resolve the hostname\n","sig":null,"attributes":[{"value":"/ Failed to resolve the hostname","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125084,"byte_end":125118,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"display(fmt = \"Failed resolving hostname: {}\", _0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125123,"byte_end":125176,"line_start":133,"line_end":133,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125277,"byte_end":125289,"line_start":138,"line_end":138,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::actors::resolver::ResolverError::InvalidInput","value":"ResolverError::InvalidInput(&'static str)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Address is invalid\n","sig":null,"attributes":[{"value":"/ Address is invalid","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125204,"byte_end":125226,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"display(fmt = \"Invalid input: {}\", _0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125231,"byte_end":125272,"line_start":137,"line_end":137,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125409,"byte_end":125416,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::actors::resolver::ResolverError::Timeout","value":"ResolverError::Timeout","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Connecting took too long\n","sig":null,"attributes":[{"value":"/ Connecting took too long","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125310,"byte_end":125338,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"display(fmt = \"Timeout out while establishing connection\")","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125343,"byte_end":125404,"line_start":141,"line_end":141,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125482,"byte_end":125489,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"IoError","qualname":"::actors::resolver::ResolverError::IoError","value":"ResolverError::IoError(io::Error)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Connection io error\n","sig":null,"attributes":[{"value":"/ Connection io error","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125423,"byte_end":125446,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"display(fmt = \"{}\", _0)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125451,"byte_end":125477,"line_start":145,"line_end":145,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125064,"byte_end":125077,"line_start":131,"line_end":131,"column_start":10,"column_end":23},"name":"ResolverError","qualname":"::actors::resolver::ResolverError","value":"pub enum ResolverError {\n\n    /// Failed to resolve the hostname\n    #[display(fmt = \"Failed resolving hostname: {}\", _0)]\n    Resolver(String),\n\n    /// Address is invalid\n    #[display(fmt = \"Invalid input: {}\", _0)]\n    InvalidInput(&'static str),\n\n    /// Connecting took too long\n    #[display(fmt = \"Timeout out while establishing connection\")]\n    Timeout,\n\n    /// Connection io error\n    #[display(fmt = \"{}\", _0)]\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2488},{"krate":0,"index":2491},{"krate":0,"index":2493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125646,"byte_end":125654,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"Resolver","qualname":"::actors::resolver::Resolver","value":"Resolver {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125798,"byte_end":125801,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Resolver>::new","value":"pub fn new(ResolverConfig, ResolverOpts) -> Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":132955,"byte_end":132967,"line_start":390,"line_end":390,"column_start":12,"column_end":24},"name":"TcpConnector","qualname":"::actors::resolver::TcpConnector","value":"TcpConnector {  }","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":" A TCP stream connector.\n","sig":null,"attributes":[{"value":"/ A TCP stream connector.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":132916,"byte_end":132943,"line_start":389,"line_end":389,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133138,"byte_end":133141,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpConnector>::new","value":"pub fn new(VecDeque<SocketAddr>) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133273,"byte_end":133285,"line_start":401,"line_end":401,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpConnector>::with_timeout","value":"pub fn with_timeout(VecDeque<SocketAddr>, Duration) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":" A configurable source of time.","sig":null,"attributes":[{"value":"/ A configurable source of time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134682,"byte_end":134716,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134717,"byte_end":134720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides an API to get the current instant in such a way that","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134721,"byte_end":134798,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ the source of time may be configured. This allows mocking out the source of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134799,"byte_end":134878,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ time in tests.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134879,"byte_end":134897,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134898,"byte_end":134901,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [Module `tokio_timer::clock`] for full documentation.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134902,"byte_end":134963,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134964,"byte_end":134967,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [Module `tokio_timer::clock`]: https://docs.rs/tokio-timer/latest/tokio_timer/clock/index.html","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/clock.rs","byte_start":134968,"byte_end":135066,"line_start":9,"line_end":9,"column_start":1,"column_end":99}}]},{"kind":"Mod","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fut","qualname":"::fut","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":3608},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1137},{"krate":0,"index":1163},{"krate":0,"index":1182},{"krate":0,"index":1200},{"krate":0,"index":1219},{"krate":0,"index":1250},{"krate":0,"index":1266},{"krate":0,"index":1292},{"krate":0,"index":1312},{"krate":0,"index":1335},{"krate":0,"index":1354},{"krate":0,"index":1377},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1431},{"krate":0,"index":1447},{"krate":0,"index":1451},{"krate":0,"index":1457},{"krate":0,"index":1462},{"krate":0,"index":1468},{"krate":0,"index":2959},{"krate":0,"index":2964},{"krate":0,"index":2970},{"krate":0,"index":2976},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1484},{"krate":0,"index":1490},{"krate":0,"index":3010},{"krate":0,"index":3015},{"krate":0,"index":3021},{"krate":0,"index":3027},{"krate":0,"index":1497},{"krate":0,"index":1500}],"decl_id":null,"docs":" Custom `Future` implementation with `Actix` support\n","sig":null,"attributes":[{"value":"/ Custom `Future` implementation with `Actix` support","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":135172,"byte_end":135227,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149189,"byte_end":149193,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::fut::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":2518},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149156,"byte_end":149184,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149236,"byte_end":149241,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::fut::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":2518},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149202,"byte_end":149231,"line_start":13,"line_end":13,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149137,"byte_end":149143,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Either","qualname":"::fut::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2524}],"decl_id":null,"docs":" Combines two different futures yielding the same item and error\n types into a single type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures yielding the same item and error","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149013,"byte_end":149080,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ types into a single type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149081,"byte_end":149110,"line_start":8,"line_end":8,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149440,"byte_end":149452,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149292,"byte_end":149350,"line_start":18,"line_end":18,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149355,"byte_end":149358,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149363,"byte_end":149428,"line_start":20,"line_end":20,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149832,"byte_end":149845,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149683,"byte_end":149741,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149746,"byte_end":149749,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149754,"byte_end":149820,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150133,"byte_end":150143,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150060,"byte_end":150121,"line_start":42,"line_end":42,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151080,"byte_end":151092,"line_start":9,"line_end":9,"column_start":11,"column_end":23},"name":"FinishStream","qualname":"::fut::helpers::FinishStream","value":"FinishStream: Sized","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":" Helper trait that adds the helper method `finish()` to stream objects.\n","sig":null,"attributes":[{"value":"/ Helper trait that adds the helper method `finish()` to stream objects.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":150980,"byte_end":151054,"line_start":7,"line_end":7,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151109,"byte_end":151115,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::helpers::FinishStream::finish","value":"pub fn finish(Self) -> Finish<Self>","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151617,"byte_end":151623,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Finish","qualname":"::fut::helpers::Finish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert a stream into a future; the future\n resolves when the stream completes.","sig":null,"attributes":[{"value":"/ A combinator used to convert a stream into a future; the future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151365,"byte_end":151432,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ resolves when the stream completes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151433,"byte_end":151472,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151473,"byte_end":151476,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::finish` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151477,"byte_end":151539,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151557,"byte_end":151605,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151663,"byte_end":151666,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Finish<S>>::new","value":"pub fn new(S) -> Finish<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152568,"byte_end":152571,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::fut::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2541}],"decl_id":null,"docs":" Future for the `map` combinator, changing the type of a future.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152508,"byte_end":152556,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152476,"byte_end":152490,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152568,"byte_end":152571,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"__Map","qualname":"::fut::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153750,"byte_end":153755,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Ready","qualname":"::fut::ready_fut::Ready","value":"Ready {  }","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597}],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153625,"byte_end":153672,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153690,"byte_end":153738,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153918,"byte_end":153923,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"ready","qualname":"::fut::ready_fut::ready","value":"pub fn ready<T, A>(T) -> Ready<T, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a value.\n","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a value.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153851,"byte_end":153910,"line_start":20,"line_end":20,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154859,"byte_end":154871,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"name":"FutureResult","qualname":"::fut::result::FutureResult","value":"FutureResult {  }","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2607}],"decl_id":null,"docs":" A future representing a value that is immediately ready.","sig":null,"attributes":[{"value":"/ A future representing a value that is immediately ready.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154620,"byte_end":154680,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154681,"byte_end":154684,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Created by the `result` function.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154685,"byte_end":154722,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154740,"byte_end":154788,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155565,"byte_end":155571,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"result","qualname":"::fut::result::result","value":"pub fn result<T, E, A>(Result<T, E>) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":154944,"byte_end":155017,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155018,"byte_end":155021,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155022,"byte_end":155101,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155102,"byte_end":155178,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155179,"byte_end":155248,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155249,"byte_end":155252,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155253,"byte_end":155267,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155268,"byte_end":155271,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155272,"byte_end":155279,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155280,"byte_end":155317,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155318,"byte_end":155321,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155322,"byte_end":155341,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155342,"byte_end":155370,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155371,"byte_end":155408,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155409,"byte_end":155414,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155415,"byte_end":155418,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = fut::result::<u32, u32, MyActor>(Ok(1));","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155419,"byte_end":155481,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ let future_of_err_2 = fut::result::<u32, u32, MyActor>(Err(2));","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155482,"byte_end":155549,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155550,"byte_end":155557,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156185,"byte_end":156187,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"ok","qualname":"::fut::result::ok","value":"pub fn ok<T, E, S>(T) -> FutureResult<T, E, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155703,"byte_end":155772,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155773,"byte_end":155800,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155801,"byte_end":155804,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155805,"byte_end":155883,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155884,"byte_end":155931,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155932,"byte_end":155935,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155936,"byte_end":155950,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155951,"byte_end":155954,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155955,"byte_end":155962,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use actix::fut::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155963,"byte_end":155985,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/ use actix::{Actor, Context};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":155986,"byte_end":156018,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156019,"byte_end":156022,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156023,"byte_end":156042,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156043,"byte_end":156071,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156072,"byte_end":156109,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156110,"byte_end":156115,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156116,"byte_end":156119,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32, MyActor>(1);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156120,"byte_end":156169,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156170,"byte_end":156177,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156704,"byte_end":156707,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"err","qualname":"::fut::result::err","value":"pub fn err<T, E, A>(E) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156251,"byte_end":156327,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156328,"byte_end":156331,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156332,"byte_end":156410,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156411,"byte_end":156458,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156459,"byte_end":156462,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156463,"byte_end":156477,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156478,"byte_end":156481,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156482,"byte_end":156489,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156490,"byte_end":156527,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156528,"byte_end":156531,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156532,"byte_end":156551,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156552,"byte_end":156580,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156581,"byte_end":156618,"line_start":82,"line_end":82,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156619,"byte_end":156624,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156625,"byte_end":156628,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = fut::err::<u32, u32, MyActor>(1);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156629,"byte_end":156688,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156689,"byte_end":156696,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157774,"byte_end":157786,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"StreamFinish","qualname":"::fut::stream_finish::StreamFinish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert stream into a future, future resolves\n when stream completes.","sig":null,"attributes":[{"value":"/ A combinator used to convert stream into a future, future resolves","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157527,"byte_end":157597,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ when stream completes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157598,"byte_end":157624,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157625,"byte_end":157628,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `ActorStream::finish` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157629,"byte_end":157696,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157714,"byte_end":157762,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":158987,"byte_end":158997,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"StreamFold","qualname":"::fut::stream_fold::StreamFold","value":"StreamFold {  }","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2625},{"krate":0,"index":2626}],"decl_id":null,"docs":" A future used to collect all the results of a stream into one generic type.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":158927,"byte_end":158975,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":158895,"byte_end":158909,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":158987,"byte_end":158997,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"__StreamFold","qualname":"::fut::stream_fold::_::__StreamFold","value":"__StreamFold {  }","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":161994,"byte_end":162003,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::fut::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2719}],"decl_id":null,"docs":" A stream combinator which will change the type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":161934,"byte_end":161982,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":161902,"byte_end":161916,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":161994,"byte_end":162003,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"__StreamMap","qualname":"::fut::stream_map::_::__StreamMap","value":"__StreamMap {  }","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163472,"byte_end":163482,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"StreamThen","qualname":"::fut::stream_then::StreamThen","value":"StreamThen {  }","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2776},{"krate":0,"index":2777}],"decl_id":null,"docs":" A stream combinator which chains a computation onto each item produced by a\n stream.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163412,"byte_end":163460,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163380,"byte_end":163394,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163472,"byte_end":163482,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"__StreamThen","qualname":"::fut::stream_then::_::__StreamThen","value":"__StreamThen {  }","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165549,"byte_end":165562,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"StreamTimeout","qualname":"::fut::stream_timeout::StreamTimeout","value":"StreamTimeout {  }","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"/ Future for the `timeout` combinator, interrupts computations if it takes","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165306,"byte_end":165382,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ more than `timeout`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165383,"byte_end":165407,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165408,"byte_end":165411,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the `ActorFuture::timeout()` method.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165412,"byte_end":165471,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165489,"byte_end":165537,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167370,"byte_end":167374,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Then","qualname":"::fut::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2854}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167310,"byte_end":167358,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167278,"byte_end":167292,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167370,"byte_end":167374,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"__Then","qualname":"::fut::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":168793,"byte_end":168800,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::fut::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":168733,"byte_end":168781,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":168701,"byte_end":168715,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":168793,"byte_end":168800,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"__Timeout","qualname":"::fut::timeout::_::__Timeout","value":"__Timeout {  }","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139178,"byte_end":139189,"line_start":126,"line_end":126,"column_start":11,"column_end":22},"name":"ActorFuture","qualname":"::fut::ActorFuture","value":"ActorFuture","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1430}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136083,"byte_end":136153,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136154,"byte_end":136196,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136197,"byte_end":136200,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` is very similar to a regular `Future`, only with subsequent combinator closures accepting the actor and its context, in addition to the result.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136201,"byte_end":136362,"line_start":44,"line_end":44,"column_start":1,"column_end":162}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136363,"byte_end":136366,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` allows for use cases where future processing requires access to the actor or its context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136367,"byte_end":136474,"line_start":46,"line_end":46,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136475,"byte_end":136478,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Here is an example of a handler on a single actor, deferring work to another actor, and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136479,"byte_end":136570,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ then updating the initiating actor's state:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136571,"byte_end":136618,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136619,"byte_end":136622,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136623,"byte_end":136641,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ // The response type returned by the actor future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136642,"byte_end":136695,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ type OriginalActorResponse = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136696,"byte_end":136732,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ // The error type returned by the actor future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136733,"byte_end":136783,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ type MessageError = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136784,"byte_end":136811,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/ // This is the needed result for the DeferredWork message","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136812,"byte_end":136873,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/ // It's a result that combine both Response and Error from the future response.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136874,"byte_end":136957,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ type DeferredWorkResult = Result<OriginalActorResponse, MessageError>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":136958,"byte_end":137032,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137033,"byte_end":137036,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # struct ActorState {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137037,"byte_end":137063,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137064,"byte_end":137067,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # impl ActorState {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137068,"byte_end":137091,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/ #    fn update_from(&mut self, _result: ()) {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137092,"byte_end":137142,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137143,"byte_end":137150,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137151,"byte_end":137154,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # struct OtherActor {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137155,"byte_end":137181,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137182,"byte_end":137185,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # impl Actor for OtherActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137186,"byte_end":137219,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ #    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137220,"byte_end":137258,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137259,"byte_end":137266,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137267,"byte_end":137270,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # impl Handler<OtherMessage> for OtherActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137271,"byte_end":137320,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/ #    type Result = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137321,"byte_end":137347,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137348,"byte_end":137353,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ #    fn handle(&mut self, _msg: OtherMessage, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137354,"byte_end":137447,"line_start":75,"line_end":75,"column_start":1,"column_end":94}},{"value":"/ #    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137448,"byte_end":137458,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137459,"byte_end":137466,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137467,"byte_end":137470,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # struct OriginalActor{","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137471,"byte_end":137498,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ #     other_actor: Addr<OtherActor>,","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137499,"byte_end":137539,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/ #     inner_state: ActorState","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137540,"byte_end":137573,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137574,"byte_end":137581,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137582,"byte_end":137585,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # impl Actor for OriginalActor{","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137586,"byte_end":137621,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/ #     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137622,"byte_end":137661,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137662,"byte_end":137669,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137670,"byte_end":137673,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # struct DeferredWork{}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137674,"byte_end":137701,"line_start":88,"line_end":88,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137702,"byte_end":137705,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ impl Message for DeferredWork {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137706,"byte_end":137741,"line_start":90,"line_end":90,"column_start":1,"column_end":36}},{"value":"/     type Result = DeferredWorkResult;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137742,"byte_end":137783,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137784,"byte_end":137789,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137790,"byte_end":137793,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137794,"byte_end":137818,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ # struct OtherMessage{}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137819,"byte_end":137846,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137847,"byte_end":137850,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ impl Handler<DeferredWork> for OriginalActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137851,"byte_end":137901,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/     // Notice the `Response` is an `ActorFuture`-ized version of `Self::Message::Result`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137902,"byte_end":137995,"line_start":98,"line_end":98,"column_start":1,"column_end":94}},{"value":"/     type Result = ResponseActFuture<Self, OriginalActorResponse, MessageError>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":137996,"byte_end":138079,"line_start":99,"line_end":99,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138080,"byte_end":138083,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _msg: DeferredWork, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138084,"byte_end":138176,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/         // this creates a `Future` representing the `.send` and subsequent `Result` from","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138177,"byte_end":138269,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/         // `other_actor`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138270,"byte_end":138298,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/         let send_to_other = self.other_actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138299,"byte_end":138347,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/             .send(OtherMessage {})","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138348,"byte_end":138386,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/             .map_err(|_error| ());","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138387,"byte_end":138425,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138426,"byte_end":138429,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/         // Wrap that `Future` so subsequent chained handlers can access","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138430,"byte_end":138505,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         // the `actor` (`self` in the  synchronous code) as well as the context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138506,"byte_end":138590,"line_start":109,"line_end":109,"column_start":1,"column_end":85}},{"value":"/         let send_to_other = actix::fut::wrap_future::<_, Self>(send_to_other);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138591,"byte_end":138673,"line_start":110,"line_end":110,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138674,"byte_end":138677,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // once the wrapped future resolves, update this actor's state","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138678,"byte_end":138752,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/         let update_self = send_to_other.map(|result, actor, _ctx| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138753,"byte_end":138824,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/             // Actor's state updated here","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138825,"byte_end":138870,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/             actor.inner_state.update_from(result);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138871,"byte_end":138925,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"/         });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138926,"byte_end":138941,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138942,"byte_end":138945,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/         // return the wrapped future","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138946,"byte_end":138986,"line_start":118,"line_end":118,"column_start":1,"column_end":41}},{"value":"/         Box::new(update_self)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":138987,"byte_end":139020,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139021,"byte_end":139030,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139031,"byte_end":139036,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139037,"byte_end":139040,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139041,"byte_end":139048,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139049,"byte_end":139052,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ See also [into_actor](trait.WrapFuture.html#tymethod.into_actor), which provides future conversion using trait","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139053,"byte_end":139167,"line_start":125,"line_end":125,"column_start":1,"column_end":115}}]},{"kind":"Type","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139292,"byte_end":139298,"line_start":129,"line_end":129,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::ActorFuture::Output","value":"type Output;","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139196,"byte_end":139262,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139267,"byte_end":139282,"line_start":128,"line_end":128,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139358,"byte_end":139363,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139305,"byte_end":139348,"line_start":131,"line_end":131,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139380,"byte_end":139384,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"poll","qualname":"::fut::ActorFuture::poll","value":"pub fn poll(Pin<&mut Self>, &mut Self::Actor,\n            &mut <Self::Actor as Actor>::Context, &mut Context)\n-> Poll<Self::Output>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139675,"byte_end":139678,"line_start":143,"line_end":143,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorFuture::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where\nF: FnOnce(Self::Output, &mut Self::Actor,\n          &mut <Self::Actor as Actor>::Context) -> U, Self: Sized","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.\n","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139564,"byte_end":139639,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139644,"byte_end":139667,"line_start":142,"line_end":142,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140060,"byte_end":140064,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorFuture::then","value":"pub fn then<F, B>(Self, F) -> Then<Self, B, F> where\nF: FnOnce(Self::Output, &mut Self::Actor,\n          &mut <Self::Actor as Actor>::Context) -> B, B: IntoActorFuture<Actor\n= Self::Actor>, Self: Sized","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":139928,"byte_end":140004,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140009,"byte_end":140052,"line_start":156,"line_end":156,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140470,"byte_end":140477,"line_start":173,"line_end":173,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorFuture::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Add timeout to futures chain.","sig":null,"attributes":[{"value":"/ Add timeout to futures chain.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140368,"byte_end":140401,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140406,"byte_end":140409,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140414,"byte_end":140462,"line_start":172,"line_end":172,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140762,"byte_end":140773,"line_start":184,"line_end":184,"column_start":11,"column_end":22},"name":"ActorStream","qualname":"::fut::ActorStream","value":"ActorStream","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1445},{"krate":0,"index":1446}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140602,"byte_end":140670,"line_start":181,"line_end":181,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140671,"byte_end":140674,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This is similar to `futures::Stream` trait, except it works with `Actor`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140675,"byte_end":140751,"line_start":183,"line_end":183,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140845,"byte_end":140849,"line_start":186,"line_end":186,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::ActorStream::Item","value":"type Item;","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140780,"byte_end":140835,"line_start":185,"line_end":185,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140910,"byte_end":140915,"line_start":189,"line_end":189,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorStream::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" The actor within which this stream runs.\n","sig":null,"attributes":[{"value":"/ The actor within which this stream runs.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140856,"byte_end":140900,"line_start":188,"line_end":188,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":140932,"byte_end":140941,"line_start":191,"line_end":191,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::fut::ActorStream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut Self::Actor,\n                 &mut <Self::Actor as Actor>::Context, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141193,"byte_end":141196,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorStream::map","value":"pub fn map<U, F>(Self, F) -> StreamMap<Self, F> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, Self: Sized","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Converts a stream of type `T` to a stream of type `U`.\n","sig":null,"attributes":[{"value":"/ Converts a stream of type `T` to a stream of type `U`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141127,"byte_end":141185,"line_start":198,"line_end":198,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141581,"byte_end":141585,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorStream::then","value":"pub fn then<F, U>(Self, F) -> StreamThen<Self, F, U> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, U: IntoActorFuture<Actor = Self::Actor>, Self: Unpin + Sized","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the resulting\n item to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the resulting","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141456,"byte_end":141531,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ item to the provided closure `f`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141536,"byte_end":141573,"line_start":212,"line_end":212,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142026,"byte_end":142030,"line_start":228,"line_end":228,"column_start":8,"column_end":12},"name":"fold","qualname":"::fut::ActorStream::fold","value":"pub fn fold<F, T, Fut>(Self, T, F) -> StreamFold<Self, F, Fut, T> where\nF: FnMut(T, Self::Item, &mut Self::Actor,\n         &mut <Self::Actor as Actor>::Context) -> Fut,\nFut: IntoActorFuture<Actor = Self::Actor, Output = Self::Actor>, Self: Sized","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Execute an accumulating computation over a stream, collecting all the\n values into one final result.\n","sig":null,"attributes":[{"value":"/ Execute an accumulating computation over a stream, collecting all the","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141907,"byte_end":141980,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ values into one final result.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":141985,"byte_end":142018,"line_start":227,"line_end":227,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142495,"byte_end":142502,"line_start":245,"line_end":245,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorStream::timeout","value":"pub fn timeout(Self, Duration) -> StreamTimeout<Self> where Self: Sized +\nUnpin","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Add timeout to stream.","sig":null,"attributes":[{"value":"/ Add timeout to stream.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142400,"byte_end":142426,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142431,"byte_end":142434,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142439,"byte_end":142487,"line_start":244,"line_end":244,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142727,"byte_end":142733,"line_start":253,"line_end":253,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::ActorStream::finish","value":"pub fn finish(Self) -> StreamFinish<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1431},"children":[],"decl_id":null,"docs":" Converts a stream to a future that resolves when stream finishes.\n","sig":null,"attributes":[{"value":"/ Converts a stream to a future that resolves when stream finishes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142650,"byte_end":142719,"line_start":252,"line_end":252,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143044,"byte_end":143059,"line_start":265,"line_end":265,"column_start":11,"column_end":26},"name":"IntoActorFuture","qualname":"::fut::IntoActorFuture","value":"IntoActorFuture","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"decl_id":null,"docs":" Class of types which can be converted into an actor future.","sig":null,"attributes":[{"value":"/ Class of types which can be converted into an actor future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142849,"byte_end":142912,"line_start":261,"line_end":261,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142913,"byte_end":142916,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to the `IntoIterator` trait and is intended to be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142917,"byte_end":142997,"line_start":263,"line_end":263,"column_start":1,"column_end":81}},{"value":"/ used in a very similar fashion.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":142998,"byte_end":143033,"line_start":264,"line_end":264,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143149,"byte_end":143155,"line_start":268,"line_end":268,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::IntoActorFuture::Future","value":"type Future: ActorFuture<Output=Self::Output, Actor=Self::Actor>;","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143066,"byte_end":143118,"line_start":266,"line_end":266,"column_start":5,"column_end":57}},{"value":"rustfmt::skip","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143123,"byte_end":143139,"line_start":267,"line_end":267,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143271,"byte_end":143277,"line_start":271,"line_end":271,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::IntoActorFuture::Output","value":"type Output;","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143215,"byte_end":143261,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143336,"byte_end":143341,"line_start":273,"line_end":273,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::IntoActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143283,"byte_end":143326,"line_start":272,"line_end":272,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143410,"byte_end":143421,"line_start":276,"line_end":276,"column_start":8,"column_end":19},"name":"into_future","qualname":"::fut::IntoActorFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":" Consumes this object and produces a future.\n","sig":null,"attributes":[{"value":"/ Consumes this object and produces a future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143355,"byte_end":143402,"line_start":275,"line_end":275,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144104,"byte_end":144114,"line_start":304,"line_end":304,"column_start":11,"column_end":21},"name":"WrapFuture","qualname":"::fut::WrapFuture","value":"WrapFuture<A>","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467}],"decl_id":null,"docs":" Helper trait that allows conversion of normal future into `ActorFuture`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal future into `ActorFuture`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144018,"byte_end":144093,"line_start":303,"line_end":303,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144206,"byte_end":144212,"line_start":309,"line_end":309,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::WrapFuture::Future","value":"type Future: ActorFuture<Output = Self::Output, Actor = A>;","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144144,"byte_end":144196,"line_start":308,"line_end":308,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144322,"byte_end":144328,"line_start":312,"line_end":312,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::WrapFuture::Output","value":"type Output;","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144266,"byte_end":144312,"line_start":311,"line_end":311,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144357,"byte_end":144366,"line_start":315,"line_end":315,"column_start":8,"column_end":17},"name":"actfuture","qualname":"::fut::WrapFuture::actfuture","value":"pub fn actfuture(Self) -> Self::Future","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144445,"byte_end":144455,"line_start":318,"line_end":318,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapFuture::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Future","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Convert normal future to a ActorFuture\n","sig":null,"attributes":[{"value":"/ Convert normal future to a ActorFuture","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144395,"byte_end":144437,"line_start":317,"line_end":317,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144806,"byte_end":144816,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"FutureWrap","qualname":"::fut::FutureWrap","value":"FutureWrap {  }","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":2962}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144780,"byte_end":144794,"line_start":335,"line_end":335,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144806,"byte_end":144816,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"__FutureWrap","qualname":"::fut::_::__FutureWrap","value":"__FutureWrap {  }","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145152,"byte_end":145163,"line_start":350,"line_end":350,"column_start":8,"column_end":19},"name":"wrap_future","qualname":"::fut::wrap_future","value":"pub fn wrap_future<F, A>(F) -> FutureWrap<F, A> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Converts normal future into `ActorFuture`, allowing its processing to\n use the actor's state.","sig":null,"attributes":[{"value":"/ Converts normal future into `ActorFuture`, allowing its processing to","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144897,"byte_end":144970,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/ use the actor's state.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144971,"byte_end":144997,"line_start":346,"line_end":346,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144998,"byte_end":145001,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [ActorFuture](trait.ActorFuture.html) for a practical example involving both","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145002,"byte_end":145108,"line_start":348,"line_end":348,"column_start":1,"column_end":107}},{"value":"/ `wrap_future` and `ActorFuture`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145109,"byte_end":145144,"line_start":349,"line_end":349,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145740,"byte_end":145750,"line_start":379,"line_end":379,"column_start":11,"column_end":21},"name":"WrapStream","qualname":"::fut::WrapStream","value":"WrapStream<A>","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489}],"decl_id":null,"docs":" Helper trait that allows conversion of normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal stream into `ActorStream`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145654,"byte_end":145729,"line_start":378,"line_end":378,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145842,"byte_end":145848,"line_start":384,"line_end":384,"column_start":10,"column_end":16},"name":"Stream","qualname":"::fut::WrapStream::Stream","value":"type Stream: ActorStream<Item = Self::Item, Actor = A>;","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" The stream that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The stream that this type can be converted into.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145780,"byte_end":145832,"line_start":383,"line_end":383,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145954,"byte_end":145958,"line_start":387,"line_end":387,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::WrapStream::Item","value":"type Item;","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145898,"byte_end":145944,"line_start":386,"line_end":386,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145987,"byte_end":145996,"line_start":390,"line_end":390,"column_start":8,"column_end":17},"name":"actstream","qualname":"::fut::WrapStream::actstream","value":"pub fn actstream(Self) -> Self::Stream","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146075,"byte_end":146085,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapStream::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Stream","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" Convert normal stream to a ActorStream\n","sig":null,"attributes":[{"value":"/ Convert normal stream to a ActorStream","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146025,"byte_end":146067,"line_start":392,"line_end":392,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3010},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146439,"byte_end":146449,"line_start":410,"line_end":410,"column_start":12,"column_end":22},"name":"StreamWrap","qualname":"::fut::StreamWrap","value":"StreamWrap {  }","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3013}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146413,"byte_end":146427,"line_start":409,"line_end":409,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146439,"byte_end":146449,"line_start":410,"line_end":410,"column_start":12,"column_end":22},"name":"__StreamWrap","qualname":"::fut::_::__StreamWrap","value":"__StreamWrap {  }","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146581,"byte_end":146592,"line_start":419,"line_end":419,"column_start":8,"column_end":19},"name":"wrap_stream","qualname":"::fut::wrap_stream","value":"pub fn wrap_stream<S, A>(S) -> StreamWrap<S, A> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Converts normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Converts normal stream into `ActorStream`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146528,"byte_end":146573,"line_start":418,"line_end":418,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":3848},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":3061},{"krate":0,"index":3083},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3074},{"krate":0,"index":3068},{"krate":0,"index":3066},{"krate":0,"index":3063},{"krate":0,"index":3084},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1542},{"krate":0,"index":1548},{"krate":0,"index":1552},{"krate":0,"index":1561},{"krate":0,"index":1572},{"krate":0,"index":1578},{"krate":0,"index":1585},{"krate":0,"index":1591},{"krate":0,"index":1598},{"krate":0,"index":1603},{"krate":0,"index":1618},{"krate":0,"index":1622},{"krate":0,"index":1626},{"krate":0,"index":1637},{"krate":0,"index":1645},{"krate":0,"index":1651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170235,"byte_end":170247,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"WriteHandler","qualname":"::io::WriteHandler","value":"WriteHandler<E>","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535}],"decl_id":null,"docs":" A helper trait for write handling.","sig":null,"attributes":[{"value":"/ A helper trait for write handling.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170015,"byte_end":170053,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170054,"byte_end":170057,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `WriteHandler` is a helper for `AsyncWrite` types. Implementation","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170058,"byte_end":170127,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ of this trait is required for `Writer` and `FramedWrite` support.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170128,"byte_end":170197,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170198,"byte_end":170224,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170494,"byte_end":170499,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"error","qualname":"::io::WriteHandler::error","value":"pub fn error(&mut Self, E, &mut Self::Context) -> Running","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Called when the writer emits error.","sig":null,"attributes":[{"value":"/ Called when the writer emits error.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170313,"byte_end":170352,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170357,"byte_end":170360,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If this method returns `ErrorAction::Continue` writer processing","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170365,"byte_end":170433,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ continues otherwise stream processing stops.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170438,"byte_end":170486,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170698,"byte_end":170706,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"finished","qualname":"::io::WriteHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Called when the writer finishes.","sig":null,"attributes":[{"value":"/ Called when the writer finishes.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170590,"byte_end":170626,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170631,"byte_end":170634,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor's `Context`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170639,"byte_end":170690,"line_start":38,"line_end":38,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171028,"byte_end":171034,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"Writer","qualname":"::io::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1541}],"decl_id":null,"docs":" A wrapper for `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ A wrapper for `AsyncWrite` types.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":170979,"byte_end":171016,"line_start":54,"line_end":54,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171653,"byte_end":171656,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<T, E>>::new","value":"pub fn new<A, C>(T, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<E>, C: AsyncContext<A>, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172540,"byte_end":172545,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"close","qualname":"<Writer<T, E>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172445,"byte_end":172476,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172481,"byte_end":172484,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172489,"byte_end":172528,"line_start":111,"line_end":111,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172679,"byte_end":172685,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"closed","qualname":"<Writer<T, E>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172634,"byte_end":172667,"line_start":116,"line_end":116,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172821,"byte_end":172840,"line_start":122,"line_end":122,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<Writer<T, E>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":172774,"byte_end":172809,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173075,"byte_end":173080,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<T, E>>::write","value":"pub fn write(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the sink.\n","sig":null,"attributes":[{"value":"/ Sends an item to the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173033,"byte_end":173063,"line_start":128,"line_end":128,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173361,"byte_end":173367,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"handle","qualname":"<Writer<T, E>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173303,"byte_end":173349,"line_start":137,"line_end":137,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178795,"byte_end":178806,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::io::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602}],"decl_id":null,"docs":" A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this\n struct is dropped.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178664,"byte_end":178760,"line_start":309,"line_end":309,"column_start":1,"column_end":97}},{"value":"/ struct is dropped.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178761,"byte_end":178783,"line_start":310,"line_end":310,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178968,"byte_end":178971,"line_start":317,"line_end":317,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, U>>::new","value":"pub fn new<A, C>(T, U, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<U::Error>, C: AsyncContext<A>, U::Error: 'static, T: Unpin +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":179814,"byte_end":179825,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<FramedWrite<T, U>>::from_buffer","value":"pub fn from_buffer<A, C>(T, U, BytesMut, &mut C) -> Self where\nA: Actor<Context = C> + WriteHandler<U::Error>, C: AsyncContext<A>,\nU::Error: 'static, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180757,"byte_end":180762,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"close","qualname":"<FramedWrite<T, U>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180662,"byte_end":180693,"line_start":375,"line_end":375,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180698,"byte_end":180701,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180706,"byte_end":180745,"line_start":377,"line_end":377,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180896,"byte_end":180902,"line_start":383,"line_end":383,"column_start":12,"column_end":18},"name":"closed","qualname":"<FramedWrite<T, U>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180851,"byte_end":180884,"line_start":382,"line_end":382,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181038,"byte_end":181057,"line_start":388,"line_end":388,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<FramedWrite<T, U>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":180991,"byte_end":181026,"line_start":387,"line_end":387,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181253,"byte_end":181258,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"write","qualname":"<FramedWrite<T, U>>::write","value":"pub fn write(&mut Self, U::Item)","parent":null,"children":[],"decl_id":null,"docs":" Writes an item to the sink.\n","sig":null,"attributes":[{"value":"/ Writes an item to the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181210,"byte_end":181241,"line_start":394,"line_end":394,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181615,"byte_end":181621,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"handle","qualname":"<FramedWrite<T, U>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181557,"byte_end":181603,"line_start":405,"line_end":405,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":182264,"byte_end":182273,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"SinkWrite","qualname":"::io::SinkWrite","value":"SinkWrite {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" A wrapper for the `Sink` type.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `Sink` type.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":182218,"byte_end":182252,"line_start":424,"line_end":424,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":182424,"byte_end":182427,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"new","qualname":"<SinkWrite<I, S>>::new","value":"pub fn new<A, C>(S, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<S::Error>, C: AsyncContext<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183049,"byte_end":183054,"line_start":453,"line_end":453,"column_start":12,"column_end":17},"name":"write","qualname":"<SinkWrite<I, S>>::write","value":"pub fn write(&mut Self, I) -> Result<(), S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the sink.\n","sig":null,"attributes":[{"value":"/ Sends an item to the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183007,"byte_end":183037,"line_start":452,"line_end":452,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183396,"byte_end":183401,"line_start":465,"line_end":465,"column_start":12,"column_end":17},"name":"close","qualname":"<SinkWrite<I, S>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183301,"byte_end":183332,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183337,"byte_end":183340,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183345,"byte_end":183384,"line_start":464,"line_end":464,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183568,"byte_end":183574,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"closed","qualname":"<SinkWrite<I, S>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183523,"byte_end":183556,"line_start":470,"line_end":470,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183862,"byte_end":183868,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"handle","qualname":"<SinkWrite<I, S>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":183804,"byte_end":183850,"line_start":481,"line_end":481,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":3896},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":1677},{"krate":0,"index":1683},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3173},{"krate":0,"index":1691},{"krate":0,"index":1698}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":185895,"byte_end":185914,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":185915,"byte_end":185918,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":185919,"byte_end":185996,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":185997,"byte_end":186075,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186076,"byte_end":186101,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187999,"byte_end":188007,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":3153}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186465,"byte_end":186484,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186485,"byte_end":186488,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186489,"byte_end":186566,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186567,"byte_end":186645,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186646,"byte_end":186671,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186672,"byte_end":186675,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If an arbiter service is used outside of a running arbiter, it panics.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186676,"byte_end":186750,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186751,"byte_end":186754,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186755,"byte_end":186768,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186769,"byte_end":186772,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186773,"byte_end":186784,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186785,"byte_end":186811,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186812,"byte_end":186815,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186816,"byte_end":186838,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186839,"byte_end":186866,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186867,"byte_end":186883,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186884,"byte_end":186887,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186888,"byte_end":186910,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186911,"byte_end":186931,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186932,"byte_end":186935,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186936,"byte_end":186965,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":186966,"byte_end":187003,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187004,"byte_end":187009,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187010,"byte_end":187052,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187053,"byte_end":187056,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl ArbiterService for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187057,"byte_end":187095,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/    fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187096,"byte_end":187159,"line_start":48,"line_end":48,"column_start":1,"column_end":64}},{"value":"/       println!(\"Service started\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187160,"byte_end":187198,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187199,"byte_end":187207,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187208,"byte_end":187213,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187214,"byte_end":187217,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187218,"byte_end":187255,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/    type Result = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187256,"byte_end":187280,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187281,"byte_end":187284,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/    fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187285,"byte_end":187348,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/       println!(\"ping\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187349,"byte_end":187376,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ #     System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187377,"byte_end":187412,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187413,"byte_end":187421,"line_start":59,"line_end":59,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187422,"byte_end":187427,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187428,"byte_end":187431,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187432,"byte_end":187452,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187453,"byte_end":187456,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187457,"byte_end":187486,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187487,"byte_end":187523,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187524,"byte_end":187527,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187528,"byte_end":187581,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/       // get MyActor1 address from the registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187582,"byte_end":187633,"line_start":68,"line_end":68,"column_start":1,"column_end":52}},{"value":"/       let act = MyActor1::from_registry();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187634,"byte_end":187680,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/       act.do_send(Ping);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187681,"byte_end":187709,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187710,"byte_end":187718,"line_start":71,"line_end":71,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187719,"byte_end":187724,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187725,"byte_end":187728,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187729,"byte_end":187744,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187745,"byte_end":187773,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187774,"byte_end":187809,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2 in new Arbiter","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187810,"byte_end":187854,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/         Arbiter::new().exec_fn(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187855,"byte_end":187894,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/             MyActor2.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187895,"byte_end":187928,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187929,"byte_end":187944,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187945,"byte_end":187956,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187957,"byte_end":187962,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":187963,"byte_end":187970,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188266,"byte_end":188280,"line_start":99,"line_end":99,"column_start":11,"column_end":25},"name":"ArbiterService","qualname":"::registry::ArbiterService","value":"ArbiterService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1681}],"decl_id":null,"docs":" Trait defines arbiter's service.\n","sig":null,"attributes":[{"value":"/ Trait defines arbiter's service.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188192,"byte_end":188228,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188229,"byte_end":188255,"line_start":98,"line_end":98,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188389,"byte_end":188402,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::ArbiterService::start_service","value":"pub fn start_service() -> Addr<Self>","parent":{"krate":0,"index":1677},"children":[],"decl_id":null,"docs":" Construct and start arbiter service\n","sig":null,"attributes":[{"value":"/ Construct and start arbiter service","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188342,"byte_end":188381,"line_start":100,"line_end":100,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188633,"byte_end":188648,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::ArbiterService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":1677},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188574,"byte_end":188625,"line_start":109,"line_end":109,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188746,"byte_end":188759,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::ArbiterService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":1677},"children":[],"decl_id":null,"docs":" Get actor's address from arbiter registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from arbiter registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188693,"byte_end":188738,"line_start":112,"line_end":112,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":189026,"byte_end":189029,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"get","qualname":"<Registry>::get","value":"pub fn get<A: ArbiterService + Actor<Context = Context<A>>>(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Query registry for specific actor. Returns address of the actor.\n If actor is not registered, starts new actor and\n return address of newly created actor.\n","sig":null,"attributes":[{"value":"/ Query registry for specific actor. Returns address of the actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188842,"byte_end":188910,"line_start":119,"line_end":119,"column_start":5,"column_end":73}},{"value":"/ If actor is not registered, starts new actor and","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188915,"byte_end":188967,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/ return address of newly created actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188972,"byte_end":189014,"line_start":121,"line_end":121,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":189565,"byte_end":189570,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"query","qualname":"<Registry>::query","value":"pub fn query<A: ArbiterService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":189493,"byte_end":189553,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190008,"byte_end":190011,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"set","qualname":"<Registry>::set","value":"pub fn set<A: ArbiterService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":189917,"byte_end":189996,"line_start":150,"line_end":150,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191750,"byte_end":191764,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"SystemRegistry","qualname":"::registry::SystemRegistry","value":"SystemRegistry {  }","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162}],"decl_id":null,"docs":" System wide actors registry","sig":null,"attributes":[{"value":"/ System wide actors registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190443,"byte_end":190474,"line_start":165,"line_end":165,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190475,"byte_end":190478,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ System registry serves same purpose as [Registry](struct.Registry.html),","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190479,"byte_end":190555,"line_start":167,"line_end":167,"column_start":1,"column_end":77}},{"value":"/ except it is shared across all arbiters.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190556,"byte_end":190600,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190601,"byte_end":190604,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190605,"byte_end":190618,"line_start":170,"line_end":170,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190619,"byte_end":190622,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190623,"byte_end":190634,"line_start":172,"line_end":172,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190635,"byte_end":190661,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190662,"byte_end":190665,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190666,"byte_end":190688,"line_start":175,"line_end":175,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190689,"byte_end":190716,"line_start":176,"line_end":176,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190717,"byte_end":190733,"line_start":177,"line_end":177,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190734,"byte_end":190737,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190738,"byte_end":190760,"line_start":179,"line_end":179,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190761,"byte_end":190781,"line_start":180,"line_end":180,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190782,"byte_end":190785,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190786,"byte_end":190815,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190816,"byte_end":190853,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190854,"byte_end":190859,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190860,"byte_end":190902,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190903,"byte_end":190906,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ impl SystemService for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190907,"byte_end":190944,"line_start":187,"line_end":187,"column_start":1,"column_end":38}},{"value":"/     fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":190945,"byte_end":191009,"line_start":188,"line_end":188,"column_start":1,"column_end":65}},{"value":"/         println!(\"Service started\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191010,"byte_end":191050,"line_start":189,"line_end":189,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191051,"byte_end":191060,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191061,"byte_end":191066,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191067,"byte_end":191070,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191071,"byte_end":191108,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/     type Result = ();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191109,"byte_end":191134,"line_start":194,"line_end":194,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191135,"byte_end":191138,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191139,"byte_end":191203,"line_start":196,"line_end":196,"column_start":1,"column_end":65}},{"value":"/         println!(\"ping\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191204,"byte_end":191233,"line_start":197,"line_end":197,"column_start":1,"column_end":30}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191234,"byte_end":191271,"line_start":198,"line_end":198,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191272,"byte_end":191281,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191282,"byte_end":191287,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191288,"byte_end":191291,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191292,"byte_end":191312,"line_start":202,"line_end":202,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191313,"byte_end":191316,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191317,"byte_end":191346,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191347,"byte_end":191384,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191385,"byte_end":191388,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/     fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191389,"byte_end":191443,"line_start":207,"line_end":207,"column_start":1,"column_end":55}},{"value":"/         let act = MyActor1::from_registry();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191444,"byte_end":191492,"line_start":208,"line_end":208,"column_start":1,"column_end":49}},{"value":"/         act.do_send(Ping);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191493,"byte_end":191523,"line_start":209,"line_end":209,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191524,"byte_end":191533,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191534,"byte_end":191539,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191540,"byte_end":191543,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191544,"byte_end":191559,"line_start":213,"line_end":213,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191560,"byte_end":191588,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191589,"byte_end":191624,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191625,"byte_end":191654,"line_start":216,"line_end":216,"column_start":1,"column_end":30}},{"value":"/         let addr = MyActor2.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191655,"byte_end":191695,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191696,"byte_end":191707,"line_start":218,"line_end":218,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191708,"byte_end":191713,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191714,"byte_end":191721,"line_start":220,"line_end":220,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192052,"byte_end":192065,"line_start":235,"line_end":235,"column_start":11,"column_end":24},"name":"SystemService","qualname":"::registry::SystemService","value":"SystemService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695}],"decl_id":null,"docs":" Trait defines system's service.\n","sig":null,"attributes":[{"value":"/ Trait defines system's service.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":191979,"byte_end":192014,"line_start":233,"line_end":233,"column_start":1,"column_end":36}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192015,"byte_end":192041,"line_start":234,"line_end":234,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192173,"byte_end":192186,"line_start":237,"line_end":237,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::SystemService::start_service","value":"pub fn start_service(&Arbiter) -> Addr<Self>","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Construct and start system service\n","sig":null,"attributes":[{"value":"/ Construct and start system service","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192127,"byte_end":192165,"line_start":236,"line_end":236,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192446,"byte_end":192461,"line_start":246,"line_end":246,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::SystemService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192387,"byte_end":192438,"line_start":245,"line_end":245,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192558,"byte_end":192571,"line_start":249,"line_end":249,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::SystemService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Get actor's address from system registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from system registry","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192506,"byte_end":192550,"line_start":248,"line_end":248,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":193519,"byte_end":193522,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"get","qualname":"<SystemRegistry>::get","value":"pub fn get<A: SystemService + Actor<Context = Context<A>>>(&mut Self)\n-> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Return address of the service. If service actor is not running\n it get started in the system.\n","sig":null,"attributes":[{"value":"/ Return address of the service. If service actor is not running","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":193403,"byte_end":193469,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ it get started in the system.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":193474,"byte_end":193507,"line_start":279,"line_end":279,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":194088,"byte_end":194093,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"query","qualname":"<SystemRegistry>::query","value":"pub fn query<A: SystemService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":194016,"byte_end":194076,"line_start":294,"line_end":294,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":194538,"byte_end":194541,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"set","qualname":"<SystemRegistry>::set","value":"pub fn set<A: SystemService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":194447,"byte_end":194526,"line_start":308,"line_end":308,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":3916},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1744},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1756},{"krate":0,"index":1760},{"krate":0,"index":1767},{"krate":0,"index":1771},{"krate":0,"index":1776},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1789}],"decl_id":null,"docs":" Sync Actors support","sig":null,"attributes":[{"value":"/ Sync Actors support","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195132,"byte_end":195155,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195156,"byte_end":195159,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sync Actors are actors that run multiple instances on a thread pool.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195160,"byte_end":195232,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ This is useful for CPU bound, or concurrent workloads. There can only be","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195233,"byte_end":195309,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ a single Sync Actor type on a `SyncArbiter`. This means you can't have","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195310,"byte_end":195384,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Actor type A and B, sharing the same thread pool. You need to create two","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195385,"byte_end":195461,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ SyncArbiters and have A and B spawn on unique `SyncArbiter`s respectively.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195462,"byte_end":195540,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ For more information and examples, see `SyncArbiter`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":195541,"byte_end":195597,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198248,"byte_end":198259,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"SyncArbiter","qualname":"::sync::SyncArbiter","value":"SyncArbiter {  }","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":" SyncArbiter provides the resources for a single Sync Actor to run on a dedicated\n thread or threads. This is generally used for CPU bound concurrent workloads. It's\n important to note, that the SyncArbiter generates a single address for the pool\n of hosted Sync Actors. Any message sent to this Address, will be operated on by\n a single Sync Actor from the pool.","sig":null,"attributes":[{"value":"/ SyncArbiter provides the resources for a single Sync Actor to run on a dedicated","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196136,"byte_end":196220,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ thread or threads. This is generally used for CPU bound concurrent workloads. It's","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196221,"byte_end":196307,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ important to note, that the SyncArbiter generates a single address for the pool","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196308,"byte_end":196391,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/ of hosted Sync Actors. Any message sent to this Address, will be operated on by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196392,"byte_end":196475,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ a single Sync Actor from the pool.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196476,"byte_end":196514,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196515,"byte_end":196518,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Sync Actors have a different lifecycle compared to Actors on the System","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196519,"byte_end":196594,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ Arbiter. For more, see `SyncContext`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196595,"byte_end":196636,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196637,"byte_end":196640,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196641,"byte_end":196655,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196656,"byte_end":196659,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196660,"byte_end":196671,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196672,"byte_end":196698,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196699,"byte_end":196702,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ struct Fibonacci(pub u32);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196703,"byte_end":196733,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196734,"byte_end":196737,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # impl Message for Fibonacci {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196738,"byte_end":196772,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ #     type Result = Result<u64, ()>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196773,"byte_end":196813,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196814,"byte_end":196821,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196822,"byte_end":196825,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196826,"byte_end":196847,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196848,"byte_end":196851,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196852,"byte_end":196882,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     // It's important to note that you use \"SyncContext\" here instead of \"Context\".","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196883,"byte_end":196970,"line_start":50,"line_end":50,"column_start":1,"column_end":88}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":196971,"byte_end":197012,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197013,"byte_end":197018,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197019,"byte_end":197022,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Fibonacci> for SyncActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197023,"byte_end":197066,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/     type Result = Result<u64, ()>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197067,"byte_end":197105,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197106,"byte_end":197109,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, msg: Fibonacci, _: &mut Self::Context) -> Self::Result {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197110,"byte_end":197195,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/         if msg.0 == 0 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197196,"byte_end":197223,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/             Err(())","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197224,"byte_end":197247,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/         } else if msg.0 == 1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197248,"byte_end":197282,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/             Ok(1)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197283,"byte_end":197304,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/         } else {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197305,"byte_end":197325,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/             let mut i = 0;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197326,"byte_end":197356,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/             let mut sum = 0;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197357,"byte_end":197389,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/             let mut last = 0;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197390,"byte_end":197423,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/             let mut curr = 1;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197424,"byte_end":197457,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/             while i < msg.0 - 1 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197458,"byte_end":197495,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/                 sum = last + curr;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197496,"byte_end":197534,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/                 last = curr;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197535,"byte_end":197567,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/                 curr = sum;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197568,"byte_end":197599,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/                 i += 1;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197600,"byte_end":197627,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197628,"byte_end":197645,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/             Ok(sum)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197646,"byte_end":197669,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197670,"byte_end":197683,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197684,"byte_end":197693,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197694,"byte_end":197699,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197700,"byte_end":197703,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197704,"byte_end":197719,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197720,"byte_end":197744,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/         // Start the SyncArbiter with 2 threads, and receive the address of the Actor pool.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197745,"byte_end":197840,"line_start":80,"line_end":80,"column_start":1,"column_end":96}},{"value":"/         let addr = SyncArbiter::start(2, || SyncActor);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197841,"byte_end":197900,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197901,"byte_end":197904,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/         // send 5 messages","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197905,"byte_end":197935,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/         for n in 5..10 {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197936,"byte_end":197964,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/             // As there are 2 threads, there are at least 2 messages always being processed","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":197965,"byte_end":198060,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/             // concurrently by the SyncActor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198061,"byte_end":198110,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/             addr.do_send(Fibonacci(n));","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198111,"byte_end":198154,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/         }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198155,"byte_end":198168,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198169,"byte_end":198172,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198173,"byte_end":198210,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198211,"byte_end":198222,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198223,"byte_end":198228,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198229,"byte_end":198236,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198756,"byte_end":198761,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"start","qualname":"<SyncArbiter<A>>::start","value":"pub fn start<F>(usize, F) -> Addr<A> where F: Fn() -> A + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start a new `SyncArbiter` with specified number of worker threads.\n Returns a single address of the started actor. A single address is\n used to communicate to the actor(s), and messages are handled by\n the next available Actor in the `SyncArbiter`.\n","sig":null,"attributes":[{"value":"/ Start a new `SyncArbiter` with specified number of worker threads.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198471,"byte_end":198541,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ Returns a single address of the started actor. A single address is","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198546,"byte_end":198616,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ used to communicate to the actor(s), and messages are handled by","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198621,"byte_end":198689,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ the next available Actor in the `SyncArbiter`.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198694,"byte_end":198744,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201616,"byte_end":201627,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"SyncContext","qualname":"::sync::SyncContext","value":"SyncContext {  }","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766}],"decl_id":null,"docs":" Sync actor execution context. This is used instead of impl Actor for your Actor\n instead of Context, if you intend this actor to run in a SyncArbiter.","sig":null,"attributes":[{"value":"/ Sync actor execution context. This is used instead of impl Actor for your Actor","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200753,"byte_end":200836,"line_start":188,"line_end":188,"column_start":1,"column_end":84}},{"value":"/ instead of Context, if you intend this actor to run in a SyncArbiter.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200837,"byte_end":200910,"line_start":189,"line_end":189,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200911,"byte_end":200914,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Unlike Context, an Actor that uses a SyncContext can not be stopped","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200915,"byte_end":200986,"line_start":191,"line_end":191,"column_start":1,"column_end":72}},{"value":"/ by calling `stop` or `terminate`: Instead, these trigger a restart of","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200987,"byte_end":201060,"line_start":192,"line_end":192,"column_start":1,"column_end":74}},{"value":"/ the Actor. Similar, returning `false` from `fn stopping` can not prevent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201061,"byte_end":201137,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ the restart or termination of the Actor.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201138,"byte_end":201182,"line_start":194,"line_end":194,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201183,"byte_end":201186,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201187,"byte_end":201201,"line_start":196,"line_end":196,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201202,"byte_end":201205,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201206,"byte_end":201217,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201218,"byte_end":201244,"line_start":199,"line_end":199,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201245,"byte_end":201248,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ # struct Fibonacci(pub u32);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201249,"byte_end":201281,"line_start":201,"line_end":201,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201282,"byte_end":201285,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # impl Message for Fibonacci {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201286,"byte_end":201320,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/ #     type Result = Result<u64, ()>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201321,"byte_end":201361,"line_start":204,"line_end":204,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201362,"byte_end":201369,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201370,"byte_end":201373,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201374,"byte_end":201395,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201396,"byte_end":201399,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201400,"byte_end":201430,"line_start":209,"line_end":209,"column_start":1,"column_end":31}},{"value":"/     // It's important to note that you use \"SyncContext\" here instead of \"Context\".","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201431,"byte_end":201518,"line_start":210,"line_end":210,"column_start":1,"column_end":88}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201519,"byte_end":201560,"line_start":211,"line_end":211,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201561,"byte_end":201566,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201567,"byte_end":201570,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201571,"byte_end":201588,"line_start":214,"line_end":214,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201589,"byte_end":201596,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201597,"byte_end":201604,"line_start":216,"line_end":216,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1825},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1836},{"krate":0,"index":1841},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1856}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":205587,"byte_end":205596,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Condition","qualname":"::utils::Condition","value":"Condition {  }","parent":null,"children":[{"krate":0,"index":1813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":205717,"byte_end":205721,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condition<T>>::wait","value":"pub fn wait(&mut Self) -> oneshot::Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":205862,"byte_end":205865,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"set","qualname":"<Condition<T>>::set","value":"pub fn set(Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207192,"byte_end":207201,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"TimerFunc","qualname":"::utils::TimerFunc","value":"TimerFunc {  }","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824}],"decl_id":null,"docs":" An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","sig":null,"attributes":[{"value":"/ An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206144,"byte_end":206242,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206243,"byte_end":206246,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_later`] instead.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206247,"byte_end":206337,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206338,"byte_end":206341,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_later`]: ../prelude/trait.AsyncContext.html#method.run_later","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206342,"byte_end":206421,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206422,"byte_end":206425,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206426,"byte_end":206437,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206438,"byte_end":206456,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206457,"byte_end":206485,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206486,"byte_end":206512,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::TimerFunc;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206513,"byte_end":206545,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206546,"byte_end":206549,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206550,"byte_end":206569,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206570,"byte_end":206573,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206574,"byte_end":206592,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/     fn stop(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206593,"byte_end":206650,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/         System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206651,"byte_end":206688,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206689,"byte_end":206698,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206699,"byte_end":206704,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206705,"byte_end":206708,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206709,"byte_end":206737,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206738,"byte_end":206774,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206775,"byte_end":206778,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206779,"byte_end":206838,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/        // spawn a delayed future into our context","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206839,"byte_end":206892,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/        TimerFunc::new(Duration::from_millis(100), Self::stop)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206893,"byte_end":206958,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/            .spawn(context);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206959,"byte_end":206990,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206991,"byte_end":206999,"line_start":74,"line_end":74,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207000,"byte_end":207005,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207006,"byte_end":207023,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207024,"byte_end":207066,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207067,"byte_end":207103,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207104,"byte_end":207123,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207124,"byte_end":207131,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207133,"byte_end":207180,"line_start":82,"line_end":82,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207404,"byte_end":207407,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<TimerFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> TimerFunc<A> where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimerFunc` with the given duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimerFunc` with the given duration.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207338,"byte_end":207392,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209758,"byte_end":209770,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"IntervalFunc","qualname":"::utils::IntervalFunc","value":"IntervalFunc {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"decl_id":null,"docs":" An `ActorStream` that periodically runs a function in the actor's context.","sig":null,"attributes":[{"value":"/ An `ActorStream` that periodically runs a function in the actor's context.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208598,"byte_end":208676,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208677,"byte_end":208680,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_interval`] instead.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208681,"byte_end":208774,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208775,"byte_end":208778,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_interval`]: ../prelude/trait.AsyncContext.html#method.run_interval","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208779,"byte_end":208864,"line_start":148,"line_end":148,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208865,"byte_end":208868,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208869,"byte_end":208880,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208881,"byte_end":208899,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208900,"byte_end":208928,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208929,"byte_end":208955,"line_start":153,"line_end":153,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::IntervalFunc;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208956,"byte_end":208991,"line_start":154,"line_end":154,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208992,"byte_end":208995,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":208996,"byte_end":209015,"line_start":156,"line_end":156,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209016,"byte_end":209019,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209020,"byte_end":209038,"line_start":158,"line_end":158,"column_start":1,"column_end":19}},{"value":"/     fn tick(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209039,"byte_end":209096,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/         println!(\"tick\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209097,"byte_end":209126,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209127,"byte_end":209136,"line_start":161,"line_end":161,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209137,"byte_end":209142,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209143,"byte_end":209146,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209147,"byte_end":209175,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209176,"byte_end":209212,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209213,"byte_end":209216,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209217,"byte_end":209276,"line_start":167,"line_end":167,"column_start":1,"column_end":60}},{"value":"/        // spawn an interval stream into our context","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209277,"byte_end":209332,"line_start":168,"line_end":168,"column_start":1,"column_end":56}},{"value":"/        IntervalFunc::new(Duration::from_millis(100), Self::tick)","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209333,"byte_end":209401,"line_start":169,"line_end":169,"column_start":1,"column_end":69}},{"value":"/            .finish()","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209402,"byte_end":209426,"line_start":170,"line_end":170,"column_start":1,"column_end":25}},{"value":"/            .spawn(context);","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209427,"byte_end":209458,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"/ #      context.run_later(Duration::from_millis(200), |_, _| System::current().stop());","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209459,"byte_end":209549,"line_start":172,"line_end":172,"column_start":1,"column_end":91}},{"value":"/    }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209550,"byte_end":209558,"line_start":173,"line_end":173,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209559,"byte_end":209564,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209565,"byte_end":209582,"line_start":175,"line_end":175,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209583,"byte_end":209625,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209626,"byte_end":209662,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209663,"byte_end":209682,"line_start":178,"line_end":178,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209683,"byte_end":209690,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209691,"byte_end":209698,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209699,"byte_end":209746,"line_start":181,"line_end":181,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209961,"byte_end":209964,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<IntervalFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> IntervalFunc<A> where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IntervalFunc` with the given interval duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `IntervalFunc` with the given interval duration.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209883,"byte_end":209949,"line_start":188,"line_end":188,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2830,"byte_end":2837,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":4116},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959}],"decl_id":null,"docs":" The `actix` prelude.","sig":null,"attributes":[{"value":"/ The `actix` prelude.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2844,"byte_end":2868,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2873,"byte_end":2876,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2881,"byte_end":2956,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2961,"byte_end":3030,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3043,"byte_end":3050,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3055,"byte_end":3086,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3091,"byte_end":3117,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":3122,"byte_end":3129,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4170,"byte_end":4173,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"name":"dev","qualname":"::dev","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"decl_id":null,"docs":" The `actix` prelude for library developers.","sig":null,"attributes":[{"value":"/ The `actix` prelude for library developers.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4180,"byte_end":4227,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4232,"byte_end":4235,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4240,"byte_end":4315,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4320,"byte_end":4389,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4394,"byte_end":4397,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4402,"byte_end":4409,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4414,"byte_end":4445,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use actix::dev::*;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4450,"byte_end":4472,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4477,"byte_end":4484,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4639,"byte_end":4646,"line_start":146,"line_end":146,"column_start":13,"column_end":20},"name":"channel","qualname":"::dev::channel","value":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5731,"byte_end":5734,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"run","qualname":"::run","value":"pub fn run<R>(R) -> std::io::Result<()> where R: futures::Future<Output =\n()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Starts the system and executes the supplied future.","sig":null,"attributes":[{"value":"/ Starts the system and executes the supplied future.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":4979,"byte_end":5034,"line_start":155,"line_end":155,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5035,"byte_end":5038,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This function does the following:","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5039,"byte_end":5076,"line_start":157,"line_end":157,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5077,"byte_end":5080,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ * Creates and starts the actix system with default configuration.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5081,"byte_end":5150,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ * Spawns the given future onto the current arbiter.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5151,"byte_end":5206,"line_start":160,"line_end":160,"column_start":1,"column_end":56}},{"value":"/ * Blocks the current thread until the system shuts down.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5207,"byte_end":5267,"line_start":161,"line_end":161,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5268,"byte_end":5271,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ The `run` function returns when the `System::current().stop()`","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5272,"byte_end":5338,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ method gets called.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5339,"byte_end":5362,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5363,"byte_end":5366,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5367,"byte_end":5381,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5382,"byte_end":5385,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5386,"byte_end":5393,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5394,"byte_end":5433,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5434,"byte_end":5465,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5466,"byte_end":5469,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5470,"byte_end":5485,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/   actix::run(async move {","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5486,"byte_end":5515,"line_start":173,"line_end":173,"column_start":1,"column_end":30}},{"value":"/       delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5516,"byte_end":5570,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/       actix::System::current().stop();","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5571,"byte_end":5613,"line_start":175,"line_end":175,"column_start":1,"column_end":43}},{"value":"/   });","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5614,"byte_end":5623,"line_start":176,"line_end":176,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5624,"byte_end":5629,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5630,"byte_end":5637,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5638,"byte_end":5641,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5642,"byte_end":5654,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5655,"byte_end":5658,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This function panics if the actix system is already running.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5659,"byte_end":5723,"line_start":182,"line_end":182,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1986},"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":6011,"byte_end":6016,"line_start":195,"line_end":195,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"pub fn spawn<F>(F) where F: futures::Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[{"value":"/ Spawns a future on the current arbiter.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5878,"byte_end":5921,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5922,"byte_end":5925,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5926,"byte_end":5938,"line_start":192,"line_end":192,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5939,"byte_end":5942,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This function panics if the actix system is not running.","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":5943,"byte_end":6003,"line_start":194,"line_end":194,"column_start":1,"column_end":61}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13598,"byte_end":13608,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20890,"byte_end":20901,"line_start":472,"line_end":472,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":21110,"byte_end":21121,"line_start":483,"line_end":483,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21669,"byte_end":21676,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21911,"byte_end":21918,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":22226,"byte_end":22233,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":22910,"byte_end":22917,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24740,"byte_end":24747,"line_start":154,"line_end":154,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25384,"byte_end":25385,"line_start":180,"line_end":180,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26851,"byte_end":26863,"line_start":49,"line_end":49,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27104,"byte_end":27116,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30983,"byte_end":30993,"line_start":208,"line_end":208,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31216,"byte_end":31226,"line_start":218,"line_end":218,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31595,"byte_end":31605,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":34194,"byte_end":34204,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":40273,"byte_end":40286,"line_start":20,"line_end":20,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41198,"byte_end":41221,"line_start":62,"line_end":62,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41280,"byte_end":41303,"line_start":69,"line_end":69,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41601,"byte_end":41624,"line_start":84,"line_end":84,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42328,"byte_end":42344,"line_start":116,"line_end":116,"column_start":38,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42366,"byte_end":42382,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42588,"byte_end":42604,"line_start":131,"line_end":131,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":43269,"byte_end":43291,"line_start":165,"line_end":165,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":43528,"byte_end":43550,"line_start":179,"line_end":179,"column_start":40,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45574,"byte_end":45577,"line_start":41,"line_end":41,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45754,"byte_end":45757,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46619,"byte_end":46629,"line_start":77,"line_end":77,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47030,"byte_end":47043,"line_start":97,"line_end":97,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47305,"byte_end":47311,"line_start":109,"line_end":109,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47577,"byte_end":47580,"line_start":121,"line_end":121,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47845,"byte_end":47851,"line_start":133,"line_end":133,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48105,"byte_end":48109,"line_start":145,"line_end":145,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48424,"byte_end":48441,"line_start":159,"line_end":159,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48885,"byte_end":48899,"line_start":175,"line_end":175,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49528,"byte_end":49536,"line_start":201,"line_end":201,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49902,"byte_end":49910,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":50377,"byte_end":50385,"line_start":231,"line_end":231,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51310,"byte_end":51323,"line_start":265,"line_end":265,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51748,"byte_end":51761,"line_start":278,"line_end":278,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":52253,"byte_end":52266,"line_start":297,"line_end":297,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56689,"byte_end":56700,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56922,"byte_end":56933,"line_start":115,"line_end":115,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59886,"byte_end":59896,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":61648,"byte_end":61658,"line_start":138,"line_end":138,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73808,"byte_end":73821,"line_start":57,"line_end":57,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74288,"byte_end":74305,"line_start":73,"line_end":73,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":76719,"byte_end":76729,"line_start":159,"line_end":159,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":78749,"byte_end":78762,"line_start":225,"line_end":225,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":86158,"byte_end":86171,"line_start":444,"line_end":444,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":86846,"byte_end":86859,"line_start":473,"line_end":473,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88102,"byte_end":88115,"line_start":506,"line_end":506,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88409,"byte_end":88422,"line_start":517,"line_end":517,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88547,"byte_end":88560,"line_start":523,"line_end":523,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88592,"byte_end":88605,"line_start":525,"line_end":525,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88787,"byte_end":88804,"line_start":536,"line_end":536,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89251,"byte_end":89272,"line_start":553,"line_end":553,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91497,"byte_end":91512,"line_start":626,"line_end":626,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":96800,"byte_end":96815,"line_start":786,"line_end":786,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":98457,"byte_end":98472,"line_start":831,"line_end":831,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99670,"byte_end":99675,"line_start":877,"line_end":877,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99949,"byte_end":99954,"line_start":885,"line_end":885,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99992,"byte_end":99997,"line_start":886,"line_end":886,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103181,"byte_end":103188,"line_start":30,"line_end":30,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103500,"byte_end":103508,"line_start":43,"line_end":43,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104003,"byte_end":104011,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104400,"byte_end":104417,"line_start":85,"line_end":85,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104508,"byte_end":104525,"line_start":92,"line_end":92,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105837,"byte_end":105844,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":106931,"byte_end":106938,"line_start":74,"line_end":74,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108474,"byte_end":108490,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":109440,"byte_end":109456,"line_start":161,"line_end":161,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113929,"byte_end":113934,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113971,"byte_end":113976,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113992,"byte_end":113996,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":114192,"byte_end":114197,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":115996,"byte_end":116001,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63068,"byte_end":63080,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63093,"byte_end":63102,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63274,"byte_end":63283,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63314,"byte_end":63323,"line_start":46,"line_end":46,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63600,"byte_end":63609,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63913,"byte_end":63925,"line_start":64,"line_end":64,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64162,"byte_end":64166,"line_start":76,"line_end":76,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66431,"byte_end":66435,"line_start":157,"line_end":157,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66570,"byte_end":66574,"line_start":165,"line_end":165,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66680,"byte_end":66684,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66716,"byte_end":66720,"line_start":173,"line_end":173,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66958,"byte_end":66966,"line_start":185,"line_end":185,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67829,"byte_end":67838,"line_start":218,"line_end":218,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69255,"byte_end":69259,"line_start":264,"line_end":264,"column_start":68,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69450,"byte_end":69459,"line_start":275,"line_end":275,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69647,"byte_end":69656,"line_start":287,"line_end":287,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69819,"byte_end":69828,"line_start":297,"line_end":297,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69904,"byte_end":69913,"line_start":304,"line_end":304,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":70083,"byte_end":70092,"line_start":314,"line_end":314,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":116848,"byte_end":116855,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117111,"byte_end":117118,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117322,"byte_end":117329,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120650,"byte_end":120656,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120919,"byte_end":120925,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120975,"byte_end":120981,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121018,"byte_end":121024,"line_start":56,"line_end":56,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121059,"byte_end":121065,"line_start":58,"line_end":58,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121197,"byte_end":121203,"line_start":64,"line_end":64,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121306,"byte_end":121312,"line_start":68,"line_end":68,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123570,"byte_end":123577,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123937,"byte_end":123944,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124150,"byte_end":124157,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124805,"byte_end":124812,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124960,"byte_end":124971,"line_start":126,"line_end":126,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125617,"byte_end":125630,"line_start":151,"line_end":151,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125776,"byte_end":125784,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":126285,"byte_end":126293,"line_start":181,"line_end":181,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127553,"byte_end":127561,"line_start":213,"line_end":213,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127589,"byte_end":127597,"line_start":215,"line_end":215,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127619,"byte_end":127627,"line_start":217,"line_end":217,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127799,"byte_end":127807,"line_start":227,"line_end":227,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":128301,"byte_end":128309,"line_start":243,"line_end":243,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":128957,"byte_end":128965,"line_start":262,"line_end":262,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":129452,"byte_end":129462,"line_start":281,"line_end":281,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":131488,"byte_end":131498,"line_start":350,"line_end":350,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133112,"byte_end":133124,"line_start":396,"line_end":396,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133514,"byte_end":133526,"line_start":410,"line_end":410,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/chain.rs","byte_start":147403,"byte_end":147408,"line_start":15,"line_end":15,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/chain.rs","byte_start":147436,"byte_end":147441,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149263,"byte_end":149269,"line_start":17,"line_end":17,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149654,"byte_end":149660,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150041,"byte_end":150047,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150293,"byte_end":150299,"line_start":51,"line_end":51,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151175,"byte_end":151176,"line_start":13,"line_end":13,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151640,"byte_end":151646,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151734,"byte_end":151740,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152792,"byte_end":152795,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153835,"byte_end":153840,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":154051,"byte_end":154056,"line_start":28,"line_end":28,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156802,"byte_end":156814,"line_start":91,"line_end":91,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":157310,"byte_end":157322,"line_start":113,"line_end":113,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157951,"byte_end":157963,"line_start":23,"line_end":23,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":159778,"byte_end":159788,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":162274,"byte_end":162283,"line_start":30,"line_end":30,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163954,"byte_end":163964,"line_start":40,"line_end":40,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165881,"byte_end":165894,"line_start":35,"line_end":35,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167733,"byte_end":167737,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":169080,"byte_end":169087,"line_start":39,"line_end":39,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143489,"byte_end":143490,"line_start":279,"line_end":279,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143671,"byte_end":143674,"line_start":289,"line_end":289,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144533,"byte_end":144534,"line_start":321,"line_end":321,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145314,"byte_end":145324,"line_start":360,"line_end":360,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146171,"byte_end":146172,"line_start":396,"line_end":396,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146742,"byte_end":146752,"line_start":429,"line_end":429,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171269,"byte_end":171281,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171627,"byte_end":171633,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173622,"byte_end":173631,"line_start":152,"line_end":152,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":176927,"byte_end":176938,"line_start":254,"line_end":254,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178937,"byte_end":178948,"line_start":316,"line_end":316,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181741,"byte_end":181752,"line_start":411,"line_end":411,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":182395,"byte_end":182404,"line_start":429,"line_end":429,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":184289,"byte_end":184304,"line_start":500,"line_end":500,"column_start":64,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188827,"byte_end":188835,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":193239,"byte_end":193253,"line_start":270,"line_end":270,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198404,"byte_end":198415,"line_start":102,"line_end":102,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":199481,"byte_end":199492,"line_start":138,"line_end":138,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":199615,"byte_end":199626,"line_start":146,"line_end":146,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200478,"byte_end":200489,"line_start":177,"line_end":177,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201832,"byte_end":201843,"line_start":228,"line_end":228,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":203465,"byte_end":203476,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204366,"byte_end":204385,"line_start":321,"line_end":321,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204490,"byte_end":204509,"line_start":328,"line_end":328,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204828,"byte_end":204847,"line_start":343,"line_end":343,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":205671,"byte_end":205680,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206010,"byte_end":206019,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207299,"byte_end":207308,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207834,"byte_end":207835,"line_start":111,"line_end":111,"column_start":82,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207997,"byte_end":208006,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209861,"byte_end":209873,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":210397,"byte_end":210398,"line_start":204,"line_end":204,"column_start":84,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":210561,"byte_end":210573,"line_start":211,"line_end":211,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":6220,"byte_end":6232,"line_start":204,"line_end":204,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1919,"byte_end":1925,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":972}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","byte_start":119029,"byte_end":119035,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":973}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mod.rs","byte_start":119075,"byte_end":119083,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1003}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1935,"byte_end":1940,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1100}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1950,"byte_end":1953,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1109}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1963,"byte_end":1965,"line_start":63,"line_end":63,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1506}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1975,"byte_end":1983,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1658}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":1993,"byte_end":1997,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1708}},{"kind":"Mod","span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":2007,"byte_end":2012,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1794}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9012,"byte_end":9017,"line_start":76,"line_end":76,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":9020,"byte_end":9025,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13117,"byte_end":13122,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":28},"to":{"krate":0,"index":40}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":13598,"byte_end":13608,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14314,"byte_end":14319,"line_start":256,"line_end":256,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":14902,"byte_end":14914,"line_start":272,"line_end":272,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":20890,"byte_end":20901,"line_start":472,"line_end":472,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actor.rs","byte_start":21110,"byte_end":21121,"line_start":483,"line_end":483,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21669,"byte_end":21676,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":21911,"byte_end":21918,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":22226,"byte_end":22233,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":22910,"byte_end":22917,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":24740,"byte_end":24747,"line_start":154,"line_end":154,"column_start":34,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":159}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/context.rs","byte_start":25384,"byte_end":25385,"line_start":180,"line_end":180,"column_start":40,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":131},"to":{"krate":0,"index":125}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26442,"byte_end":26454,"line_start":30,"line_end":30,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":159}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26457,"byte_end":26469,"line_start":30,"line_end":30,"column_start":48,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":49},"to":{"krate":0,"index":159}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":26851,"byte_end":26863,"line_start":49,"line_end":49,"column_start":24,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":27104,"byte_end":27116,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":30983,"byte_end":30993,"line_start":208,"line_end":208,"column_start":27,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31216,"byte_end":31226,"line_start":218,"line_end":218,"column_start":21,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":31595,"byte_end":31605,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextimpl.rs","byte_start":34194,"byte_end":34204,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":40273,"byte_end":40286,"line_start":20,"line_end":20,"column_start":9,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41198,"byte_end":41221,"line_start":62,"line_end":62,"column_start":22,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41280,"byte_end":41303,"line_start":69,"line_end":69,"column_start":12,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":41601,"byte_end":41624,"line_start":84,"line_end":84,"column_start":28,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42328,"byte_end":42344,"line_start":116,"line_end":116,"column_start":38,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42366,"byte_end":42382,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":42588,"byte_end":42604,"line_start":131,"line_end":131,"column_start":37,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":275},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":43269,"byte_end":43291,"line_start":165,"line_end":165,"column_start":15,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/contextitems.rs","byte_start":43528,"byte_end":43550,"line_start":179,"line_end":179,"column_start":40,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2184},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45574,"byte_end":45577,"line_start":41,"line_end":41,"column_start":33,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":322}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":45754,"byte_end":45757,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":322}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":46619,"byte_end":46629,"line_start":77,"line_end":77,"column_start":51,"column_end":61},"kind":{"Impl":{"id":36}},"from":{"krate":19,"index":499},"to":{"krate":0,"index":341}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47030,"byte_end":47043,"line_start":97,"line_end":97,"column_start":38,"column_end":51},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47305,"byte_end":47311,"line_start":109,"line_end":109,"column_start":62,"column_end":68},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47577,"byte_end":47580,"line_start":121,"line_end":121,"column_start":50,"column_end":53},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":47845,"byte_end":47851,"line_start":133,"line_end":133,"column_start":50,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":32315},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48105,"byte_end":48109,"line_start":145,"line_end":145,"column_start":41,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2435},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48424,"byte_end":48441,"line_start":159,"line_end":159,"column_start":9,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":336},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":48885,"byte_end":48899,"line_start":175,"line_end":175,"column_start":62,"column_end":76},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":339},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49528,"byte_end":49536,"line_start":201,"line_end":201,"column_start":27,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":49902,"byte_end":49910,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":50377,"byte_end":50385,"line_start":231,"line_end":231,"column_start":62,"column_end":70},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":414},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51310,"byte_end":51323,"line_start":265,"line_end":265,"column_start":30,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":51748,"byte_end":51761,"line_start":278,"line_end":278,"column_start":22,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/handler.rs","byte_start":52253,"byte_end":52266,"line_start":297,"line_end":297,"column_start":62,"column_end":75},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56689,"byte_end":56700,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/stream.rs","byte_start":56922,"byte_end":56933,"line_start":115,"line_end":115,"column_start":31,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2323},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":59886,"byte_end":59896,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/supervisor.rs","byte_start":61648,"byte_end":61658,"line_start":138,"line_end":138,"column_start":20,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2390},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":72795,"byte_end":72799,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":73808,"byte_end":73821,"line_start":57,"line_end":57,"column_start":31,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74288,"byte_end":74305,"line_start":73,"line_end":73,"column_start":31,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74455,"byte_end":74459,"line_start":79,"line_end":79,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74462,"byte_end":74466,"line_start":79,"line_end":79,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":74469,"byte_end":74474,"line_start":79,"line_end":79,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":76719,"byte_end":76729,"line_start":159,"line_end":159,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":78749,"byte_end":78762,"line_start":225,"line_end":225,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":86158,"byte_end":86171,"line_start":444,"line_end":444,"column_start":26,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":589},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":86846,"byte_end":86859,"line_start":473,"line_end":473,"column_start":26,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88102,"byte_end":88115,"line_start":506,"line_end":506,"column_start":25,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88409,"byte_end":88422,"line_start":517,"line_end":517,"column_start":30,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88547,"byte_end":88560,"line_start":523,"line_end":523,"column_start":23,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88592,"byte_end":88605,"line_start":525,"line_end":525,"column_start":25,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":6787}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":88787,"byte_end":88804,"line_start":536,"line_end":536,"column_start":16,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":89251,"byte_end":89272,"line_start":553,"line_end":553,"column_start":16,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":91497,"byte_end":91512,"line_start":626,"line_end":626,"column_start":16,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":96800,"byte_end":96815,"line_start":786,"line_end":786,"column_start":27,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":604},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":98457,"byte_end":98472,"line_start":831,"line_end":831,"column_start":25,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99670,"byte_end":99675,"line_start":877,"line_end":877,"column_start":16,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99949,"byte_end":99954,"line_start":885,"line_end":885,"column_start":32,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/channel.rs","byte_start":99992,"byte_end":99997,"line_start":886,"line_end":886,"column_start":32,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103181,"byte_end":103188,"line_start":30,"line_end":30,"column_start":33,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":103500,"byte_end":103508,"line_start":43,"line_end":43,"column_start":16,"column_end":24},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104003,"byte_end":104011,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":730},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104400,"byte_end":104417,"line_start":85,"line_end":85,"column_start":28,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/envelope.rs","byte_start":104508,"byte_end":104525,"line_start":92,"line_end":92,"column_start":30,"column_end":47},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":743},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":105837,"byte_end":105844,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":106931,"byte_end":106938,"line_start":74,"line_end":74,"column_start":23,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":108474,"byte_end":108490,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/message.rs","byte_start":109440,"byte_end":109456,"line_start":161,"line_end":161,"column_start":20,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":795},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113929,"byte_end":113934,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113971,"byte_end":113976,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":113992,"byte_end":113996,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":114192,"byte_end":114197,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/queue.rs","byte_start":115996,"byte_end":116001,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63068,"byte_end":63080,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63093,"byte_end":63102,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63274,"byte_end":63283,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63314,"byte_end":63323,"line_start":46,"line_end":46,"column_start":24,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63600,"byte_end":63609,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":63913,"byte_end":63925,"line_start":64,"line_end":64,"column_start":21,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2428},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":64162,"byte_end":64166,"line_start":76,"line_end":76,"column_start":16,"column_end":20},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66431,"byte_end":66435,"line_start":157,"line_end":157,"column_start":26,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66570,"byte_end":66574,"line_start":165,"line_end":165,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66680,"byte_end":66684,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66716,"byte_end":66720,"line_start":173,"line_end":173,"column_start":25,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":6787}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":66958,"byte_end":66966,"line_start":185,"line_end":185,"column_start":16,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":67829,"byte_end":67838,"line_start":218,"line_end":218,"column_start":9,"column_end":18},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69255,"byte_end":69259,"line_start":264,"line_end":264,"column_start":68,"column_end":72},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69450,"byte_end":69459,"line_start":275,"line_end":275,"column_start":19,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69647,"byte_end":69656,"line_start":287,"line_end":287,"column_start":23,"column_end":32},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69819,"byte_end":69828,"line_start":297,"line_end":297,"column_start":16,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":69904,"byte_end":69913,"line_start":304,"line_end":304,"column_start":18,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":6787}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/address/mod.rs","byte_start":70083,"byte_end":70092,"line_start":314,"line_end":314,"column_start":24,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":116848,"byte_end":116855,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117111,"byte_end":117118,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/mailbox.rs","byte_start":117322,"byte_end":117329,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120650,"byte_end":120656,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120919,"byte_end":120925,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":979},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":120975,"byte_end":120981,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":979},"to":{"krate":0,"index":1677}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121018,"byte_end":121024,"line_start":56,"line_end":56,"column_start":31,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":979},"to":{"krate":0,"index":40}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121059,"byte_end":121065,"line_start":58,"line_end":58,"column_start":28,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121197,"byte_end":121203,"line_start":64,"line_end":64,"column_start":44,"column_end":50},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":979},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/mocker.rs","byte_start":121306,"byte_end":121312,"line_start":68,"line_end":68,"column_start":61,"column_end":67},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":979},"to":{"krate":0,"index":318}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123570,"byte_end":123577,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":123937,"byte_end":123944,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2447},"to":{"krate":0,"index":322}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124150,"byte_end":124157,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124805,"byte_end":124812,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2459},"to":{"krate":0,"index":322}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":124960,"byte_end":124971,"line_start":126,"line_end":126,"column_start":18,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2472},"to":{"krate":0,"index":322}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125617,"byte_end":125630,"line_start":151,"line_end":151,"column_start":36,"column_end":49},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2484},"to":{"krate":99,"index":2532}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":125776,"byte_end":125784,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":126285,"byte_end":126293,"line_start":181,"line_end":181,"column_start":16,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127553,"byte_end":127561,"line_start":213,"line_end":213,"column_start":21,"column_end":29},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":40}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127589,"byte_end":127597,"line_start":215,"line_end":215,"column_start":24,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127619,"byte_end":127627,"line_start":217,"line_end":217,"column_start":18,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":127799,"byte_end":127807,"line_start":227,"line_end":227,"column_start":27,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":318}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":128301,"byte_end":128309,"line_start":243,"line_end":243,"column_start":27,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":318}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":128957,"byte_end":128965,"line_start":262,"line_end":262,"column_start":31,"column_end":39},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":318}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":129452,"byte_end":129462,"line_start":281,"line_end":281,"column_start":6,"column_end":16},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":131488,"byte_end":131498,"line_start":350,"line_end":350,"column_start":22,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1072},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133112,"byte_end":133124,"line_start":396,"line_end":396,"column_start":6,"column_end":18},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/actors/resolver.rs","byte_start":133514,"byte_end":133526,"line_start":410,"line_end":410,"column_start":22,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/chain.rs","byte_start":147403,"byte_end":147408,"line_start":15,"line_end":15,"column_start":39,"column_end":44},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/chain.rs","byte_start":147436,"byte_end":147441,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149263,"byte_end":149269,"line_start":17,"line_end":17,"column_start":15,"column_end":21},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":149654,"byte_end":149660,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150041,"byte_end":150047,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/either.rs","byte_start":150293,"byte_end":150299,"line_start":51,"line_end":51,"column_start":28,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2518},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151094,"byte_end":151099,"line_start":9,"line_end":9,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1170}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151175,"byte_end":151176,"line_start":13,"line_end":13,"column_start":34,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1173},"to":{"krate":0,"index":1170}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151640,"byte_end":151646,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/helpers.rs","byte_start":151734,"byte_end":151740,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2531},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/map.rs","byte_start":152792,"byte_end":152795,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2538},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":153835,"byte_end":153840,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/ready_fut.rs","byte_start":154051,"byte_end":154056,"line_start":28,"line_end":28,"column_start":28,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2593},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":156802,"byte_end":156814,"line_start":91,"line_end":91,"column_start":31,"column_end":43},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2602},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/result.rs","byte_start":157310,"byte_end":157322,"line_start":113,"line_end":113,"column_start":38,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2602},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_finish.rs","byte_start":157951,"byte_end":157963,"line_start":23,"line_end":23,"column_start":38,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2613},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_fold.rs","byte_start":159778,"byte_end":159788,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2620},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_map.rs","byte_start":162274,"byte_end":162283,"line_start":30,"line_end":30,"column_start":31,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2716},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_then.rs","byte_start":163954,"byte_end":163964,"line_start":40,"line_end":40,"column_start":40,"column_end":50},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2772},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/stream_timeout.rs","byte_start":165881,"byte_end":165894,"line_start":35,"line_end":35,"column_start":25,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2842},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/then.rs","byte_start":167733,"byte_end":167737,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2850},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/timeout.rs","byte_start":169080,"byte_end":169087,"line_start":39,"line_end":39,"column_start":25,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2913},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143489,"byte_end":143490,"line_start":279,"line_end":279,"column_start":42,"column_end":43},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":1447}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":143671,"byte_end":143674,"line_start":289,"line_end":289,"column_start":47,"column_end":50},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":144533,"byte_end":144534,"line_start":321,"line_end":321,"column_start":45,"column_end":46},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1469},"to":{"krate":0,"index":1462}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":145314,"byte_end":145324,"line_start":360,"line_end":360,"column_start":28,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2959},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146171,"byte_end":146172,"line_start":396,"line_end":396,"column_start":53,"column_end":54},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1491},"to":{"krate":0,"index":1484}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/fut/mod.rs","byte_start":146742,"byte_end":146752,"line_start":429,"line_end":429,"column_start":28,"column_end":38},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3010},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171269,"byte_end":171281,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":171627,"byte_end":171633,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":173622,"byte_end":173631,"line_start":152,"line_end":152,"column_start":49,"column_end":58},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1572},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":176927,"byte_end":176938,"line_start":254,"line_end":254,"column_start":31,"column_end":42},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1585},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":178937,"byte_end":178948,"line_start":316,"line_end":316,"column_start":41,"column_end":52},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":181741,"byte_end":181752,"line_start":411,"line_end":411,"column_start":50,"column_end":61},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":182395,"byte_end":182404,"line_start":429,"line_end":429,"column_start":48,"column_end":57},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/io.rs","byte_start":184289,"byte_end":184304,"line_start":500,"line_end":500,"column_start":64,"column_end":79},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1645},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188282,"byte_end":188287,"line_start":99,"line_end":99,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":28},"to":{"krate":0,"index":1677}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188315,"byte_end":188325,"line_start":99,"line_end":99,"column_start":60,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":1677}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188328,"byte_end":188335,"line_start":99,"line_end":99,"column_start":73,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":1677}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":188827,"byte_end":188835,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192067,"byte_end":192072,"line_start":235,"line_end":235,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":28},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192100,"byte_end":192110,"line_start":235,"line_end":235,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":192113,"byte_end":192120,"line_start":235,"line_end":235,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/registry.rs","byte_start":193239,"byte_end":193253,"line_start":270,"line_end":270,"column_start":6,"column_end":20},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":198404,"byte_end":198415,"line_start":102,"line_end":102,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":199481,"byte_end":199492,"line_start":138,"line_end":138,"column_start":19,"column_end":30},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1740},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":199615,"byte_end":199626,"line_start":146,"line_end":146,"column_start":20,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":200478,"byte_end":200489,"line_start":177,"line_end":177,"column_start":33,"column_end":44},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1760},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":201832,"byte_end":201843,"line_start":228,"line_end":228,"column_start":9,"column_end":20},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":203465,"byte_end":203476,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1760},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204366,"byte_end":204385,"line_start":321,"line_end":321,"column_start":28,"column_end":47},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204490,"byte_end":204509,"line_start":328,"line_end":328,"column_start":12,"column_end":31},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/sync.rs","byte_start":204828,"byte_end":204847,"line_start":343,"line_end":343,"column_start":30,"column_end":49},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1776},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":205671,"byte_end":205680,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":206010,"byte_end":206019,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1811},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207299,"byte_end":207308,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207834,"byte_end":207835,"line_start":111,"line_end":111,"column_start":82,"column_end":83},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1834},"to":{"krate":0,"index":1829}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":207997,"byte_end":208006,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1821},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":209861,"byte_end":209873,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":210397,"byte_end":210398,"line_start":204,"line_end":204,"column_start":84,"column_end":85},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1854},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/utils.rs","byte_start":210561,"byte_end":210573,"line_start":211,"line_end":211,"column_start":32,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/lizhiyong/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.9.0/src/lib.rs","byte_start":6220,"byte_end":6232,"line_start":204,"line_end":204,"column_start":36,"column_end":48},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2428},"to":{"krate":99,"index":2532}}]}